//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package powerpoint ;import (_b "encoding/xml";_c "fmt";_f "github.com/unidoc/unioffice";);func NewIscomment ()*Iscomment {_eea :=&Iscomment {};_eea .CT_Empty =*NewCT_Empty ();return _eea };func (_gcf *Textdata )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {_gcf .CT_Rel =*NewCT_Rel ();for _ ,_gbd :=range start .Attr {if _gbd .Name .Local =="\u0069\u0064"{_aa ,_bg :=_gbd .Value ,error (nil );if _bg !=nil {return _bg ;};_gcf .IdAttr =&_aa ;continue ;};};for {_be ,_bcf :=d .Token ();if _bcf !=nil {return _c .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0054\u0065\u0078t\u0064\u0061\u0074\u0061: \u0025\u0073",_bcf );};if _fgf ,_bdg :=_be .(_b .EndElement );_bdg &&_fgf .Name ==start .Name {break ;};};return nil ;};

// Validate validates the Textdata and its children
func (_fe *Textdata )Validate ()error {return _fe .ValidateWithPath ("\u0054\u0065\u0078\u0074\u0064\u0061\u0074\u0061");};

// ValidateWithPath validates the CT_Rel and its children, prefixing error messages with path
func (_bfb *CT_Rel )ValidateWithPath (path string )error {return nil };

// Validate validates the CT_Rel and its children
func (_ad *CT_Rel )Validate ()error {return _ad .ValidateWithPath ("\u0043\u0054\u005f\u0052\u0065\u006c");};func NewTextdata ()*Textdata {_ab :=&Textdata {};_ab .CT_Rel =*NewCT_Rel ();return _ab };type CT_Empty struct{};func (_bcb *CT_Rel )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for _ ,_cec :=range start .Attr {if _cec .Name .Local =="\u0069\u0064"{_gb ,_ee :=_cec .Value ,error (nil );if _ee !=nil {return _ee ;};_bcb .IdAttr =&_gb ;continue ;};};for {_gc ,_acg :=d .Token ();if _acg !=nil {return _c .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0052e\u006c\u003a\u0020\u0025\u0073",_acg );};if _aca ,_bdc :=_gc .(_b .EndElement );_bdc &&_aca .Name ==start .Name {break ;};};return nil ;};func (_a *CT_Empty )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_eb ,_bc :=d .Token ();if _bc !=nil {return _c .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fE\u006d\u0070\u0074\u0079: \u0025\u0073",_bc );};if _bf ,_ce :=_eb .(_b .EndElement );_ce &&_bf .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the CT_Empty and its children, prefixing error messages with path
func (_cb *CT_Empty )ValidateWithPath (path string )error {return nil };

// Validate validates the Iscomment and its children
func (_af *Iscomment )Validate ()error {return _af .ValidateWithPath ("\u0049s\u0063\u006f\u006d\u006d\u0065\u006et");};func (_d *Iscomment )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Attr =append (start .Attr ,_b .Attr {Name :_b .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_b .Attr {Name :_b .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0069s\u0063\u006f\u006d\u006d\u0065\u006et";return _d .CT_Empty .MarshalXML (e ,start );};func (_bd *CT_Rel )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {if _bd .IdAttr !=nil {start .Attr =append (start .Attr ,_b .Attr {Name :_b .Name {Local :"\u0069\u0064"},Value :_c .Sprintf ("\u0025\u0076",*_bd .IdAttr )});};e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the Iscomment and its children, prefixing error messages with path
func (_bde *Iscomment )ValidateWithPath (path string )error {if _cee :=_bde .CT_Empty .ValidateWithPath (path );_cee !=nil {return _cee ;};return nil ;};

// Validate validates the CT_Empty and its children
func (_g *CT_Empty )Validate ()error {return _g .ValidateWithPath ("\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079");};type CT_Rel struct{IdAttr *string ;};func (_ec *CT_Empty )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};func NewCT_Empty ()*CT_Empty {_fg :=&CT_Empty {};return _fg };func (_fc *Iscomment )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {_fc .CT_Empty =*NewCT_Empty ();for {_ceg ,_ae :=d .Token ();if _ae !=nil {return _c .Errorf ("p\u0061\u0072\u0073\u0069ng\u0020I\u0073\u0063\u006f\u006d\u006de\u006e\u0074\u003a\u0020\u0025\u0073",_ae );};if _fgb ,_ceb :=_ceg .(_b .EndElement );_ceb &&_fgb .Name ==start .Name {break ;};};return nil ;};func NewCT_Rel ()*CT_Rel {_cf :=&CT_Rel {};return _cf };func (_gg *Textdata )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Attr =append (start .Attr ,_b .Attr {Name :_b .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_b .Attr {Name :_b .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061";return _gg .CT_Rel .MarshalXML (e ,start );};type Iscomment struct{CT_Empty };

// ValidateWithPath validates the Textdata and its children, prefixing error messages with path
func (_ef *Textdata )ValidateWithPath (path string )error {if _aeb :=_ef .CT_Rel .ValidateWithPath (path );_aeb !=nil {return _aeb ;};return nil ;};type Textdata struct{CT_Rel };func init (){_f .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079",NewCT_Empty );_f .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0052\u0065\u006c",NewCT_Rel );_f .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0069s\u0063\u006f\u006d\u006d\u0065\u006et",NewIscomment );_f .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061",NewTextdata );};