//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package powerpoint ;import (_a "encoding/xml";_ag "fmt";_ec "github.com/unidoc/unioffice";);func (_d *CT_Rel )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {if _d .IdAttr !=nil {start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0069\u0064"},Value :_ag .Sprintf ("\u0025\u0076",*_d .IdAttr )});};e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};func (_b *CT_Empty )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for {_ed ,_aa :=d .Token ();if _aa !=nil {return _ag .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fE\u006d\u0070\u0074\u0079: \u0025\u0073",_aa );};if _fg ,_ad :=_ed .(_a .EndElement );_ad &&_fg .Name ==start .Name {break ;};};return nil ;};func (_eb *Iscomment )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_eb .CT_Empty =*NewCT_Empty ();for {_gb ,_dd :=d .Token ();if _dd !=nil {return _ag .Errorf ("p\u0061\u0072\u0073\u0069ng\u0020I\u0073\u0063\u006f\u006d\u006de\u006e\u0074\u003a\u0020\u0025\u0073",_dd );};if _db ,_fd :=_gb .(_a .EndElement );_fd &&_db .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the CT_Empty and its children, prefixing error messages with path
func (_g *CT_Empty )ValidateWithPath (path string )error {return nil };func NewIscomment ()*Iscomment {_fe :=&Iscomment {};_fe .CT_Empty =*NewCT_Empty ();return _fe };

// Validate validates the CT_Empty and its children
func (_c *CT_Empty )Validate ()error {return _c .ValidateWithPath ("\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079");};

// ValidateWithPath validates the Textdata and its children, prefixing error messages with path
func (_gc *Textdata )ValidateWithPath (path string )error {if _ebc :=_gc .CT_Rel .ValidateWithPath (path );_ebc !=nil {return _ebc ;};return nil ;};

// ValidateWithPath validates the CT_Rel and its children, prefixing error messages with path
func (_bac *CT_Rel )ValidateWithPath (path string )error {return nil };type CT_Empty struct{};func NewCT_Rel ()*CT_Rel {_agg :=&CT_Rel {};return _agg };

// Validate validates the Textdata and its children
func (_gd *Textdata )Validate ()error {return _gd .ValidateWithPath ("\u0054\u0065\u0078\u0074\u0064\u0061\u0074\u0061");};type Textdata struct{CT_Rel };func NewCT_Empty ()*CT_Empty {_f :=&CT_Empty {};return _f };

// Validate validates the Iscomment and its children
func (_gbe *Iscomment )Validate ()error {return _gbe .ValidateWithPath ("\u0049s\u0063\u006f\u006d\u006d\u0065\u006et");};func NewTextdata ()*Textdata {_cf :=&Textdata {};_cf .CT_Rel =*NewCT_Rel ();return _cf };func (_fc *Textdata )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_fc .CT_Rel =*NewCT_Rel ();for _ ,_deg :=range start .Attr {if _deg .Name .Local =="\u0069\u0064"{_bd ,_ged :=_deg .Value ,error (nil );if _ged !=nil {return _ged ;};_fc .IdAttr =&_bd ;continue ;};};for {_ede ,_df :=d .Token ();if _df !=nil {return _ag .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0054\u0065\u0078t\u0064\u0061\u0074\u0061: \u0025\u0073",_df );};if _bc ,_cb :=_ede .(_a .EndElement );_cb &&_bc .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the Iscomment and its children, prefixing error messages with path
func (_dc *Iscomment )ValidateWithPath (path string )error {if _ab :=_dc .CT_Empty .ValidateWithPath (path );_ab !=nil {return _ab ;};return nil ;};type Iscomment struct{CT_Empty };func (_ee *CT_Empty )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};func (_ef *CT_Rel )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for _ ,_ac :=range start .Attr {if _ac .Name .Local =="\u0069\u0064"{_efc ,_af :=_ac .Value ,error (nil );if _af !=nil {return _af ;};_ef .IdAttr =&_efc ;continue ;};};for {_cd ,_eca :=d .Token ();if _eca !=nil {return _ag .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0052e\u006c\u003a\u0020\u0025\u0073",_eca );};if _add ,_ge :=_cd .(_a .EndElement );_ge &&_add .Name ==start .Name {break ;};};return nil ;};type CT_Rel struct{IdAttr *string ;};

// Validate validates the CT_Rel and its children
func (_ba *CT_Rel )Validate ()error {return _ba .ValidateWithPath ("\u0043\u0054\u005f\u0052\u0065\u006c");};func (_de *Iscomment )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0069s\u0063\u006f\u006d\u006d\u0065\u006et";return _de .CT_Empty .MarshalXML (e ,start );};func (_dca *Textdata )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061";return _dca .CT_Rel .MarshalXML (e ,start );};func init (){_ec .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079",NewCT_Empty );_ec .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0052\u0065\u006c",NewCT_Rel );_ec .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0069s\u0063\u006f\u006d\u006d\u0065\u006et",NewIscomment );_ec .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061",NewTextdata );};