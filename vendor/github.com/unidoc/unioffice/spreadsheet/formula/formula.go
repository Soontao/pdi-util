//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package formula provides formula parsing and evaluation. The lexer is
// implemented with a ragel grammar while the the parser is implemented with
// goyacc. The entire formula grammar is not implemented and not all functions
// are supported yet. For compatibility sake, upon failure to parse or execute a
// formula, unioffice leaves cached formula results blank allowing Excel to compute
// formulas upon load. This is similar to what most other Excel libraries do
// which leave all cached results blank instead of attempting to execute
// formulas.
//
// The unit tests for this package are unique in that we can take advantage of
// "cached" formula results that Excel/LibreOffice write to the sheet.  These
// are the computed results of a formula in string form.  By comparing these
// values to the value computed by the unioffice evaluation of the formula, adding
// a new test means just adding a new formula to one of the reference sheets
// with Excel. During the unit test, we evaluate the formula and compare it to
// the value that Excel computed.  If they're the same, the test passes.
package formula ;import (_fd "bytes";_b "errors";_c "fmt";_ce "github.com/unidoc/unioffice";_fa "github.com/unidoc/unioffice/internal/mergesort";_bc "github.com/unidoc/unioffice/internal/wildcard";_bdg "github.com/unidoc/unioffice/spreadsheet/format";_d "github.com/unidoc/unioffice/spreadsheet/reference";_aac "github.com/unidoc/unioffice/spreadsheet/update";_f "io";_fb "math";_bg "math/big";_ab "math/rand";_cf "regexp";_e "sort";_ad "strconv";_bf "strings";_af "sync";_bd "time";_aa "unicode";);

// Reference returns a string reference value to an expression with prefix.
func (_bfbcd PrefixExpr )Reference (ctx Context ,ev Evaluator )Reference {_bfdbaa :=_bfbcd ._cfdf .Reference (ctx ,ev );_eabe :=_bfbcd ._gfgd .Reference (ctx ,ev );if _bfdbaa .Type ==ReferenceTypeSheet &&_eabe .Type ==ReferenceTypeCell {return Reference {Type :ReferenceTypeCell ,Value :_bfdbaa .Value +"\u0021"+_eabe .Value };};return ReferenceInvalid ;};func _fcf (_cbef ,_dgbc int )int {if _dgbc ==2&&_gda (_cbef ){return 29;}else {return _aebe [_dgbc -1];};};const _bdfceb =57367;var _fbee Result =MakeEmptyResult ();

// Tbilleq implements the Excel TBILLEQ function.
func Tbilleq (args []Result )Result {if len (args )!=3{return MakeErrorResult ("\u0054\u0042\u0049\u004c\u004c\u0045\u0051\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020t\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_aceb ,_cbca ,_affb :=_aaf (args [0],args [1],"\u0054B\u0049\u004c\u004c\u0045\u0051");if _affb .Type ==ResultTypeError {return _affb ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("T\u0042\u0049\u004c\u004c\u0045\u0051\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0064is\u0063\u006f\u0075\u006et\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075mb\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ccdd :=_cbca -_aceb ;if _ccdd > 365{return MakeErrorResultType (ErrorTypeNum ,"\u0054\u0042\u0049\u004c\u004c\u0045\u0051\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006d\u0061\u0074\u0075\u0072\u0069\u0074\u0079\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eo\u0074\u0020m\u006f\u0072e\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u006e\u0065\u0020\u0079\u0065\u0061r \u0061\u0066\u0074\u0065\u0072\u0020\u0073\u0065\u0074t\u006c\u0065\u006d\u0065\u006e\u0074");};_aefaf :=args [2].ValueNumber ;if _aefaf <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0054\u0042\u0049\u004c\u004c\u0045Q\u0020\u0072\u0065q\u0075\u0069\u0072e\u0073\u0020\u0064\u0069\u0073\u0063\u006f\u0075\u006e\u0074 \u0074\u006f\u0020\u0062\u0065 p\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};return MakeNumberResult ((365*_aefaf )/(360-_aefaf *_ccdd ));};

// Int is an implementation of the Excel INT() function that rounds a number
// down to an integer.
func Int (args []Result )Result {if len (args )!=1{return MakeErrorResult ("I\u004e\u0054\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067u\u006de\u006e\u0074");};_cdac :=args [0].AsNumber ();if _cdac .Type !=ResultTypeNumber {return MakeErrorResult ("I\u004e\u0054\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067u\u006de\u006e\u0074");};_agdb ,_ddac :=_fb .Modf (_cdac .ValueNumber );if _ddac < 0{_agdb --;};return MakeNumberResult (_agdb );};func _eebef (_bgga Result ,_eegfb ,_ffca int )[][]Result {_agdg :=[][]Result {};switch _bgga .Type {case ResultTypeArray :for _deec ,_cacg :=range _bgga .ValueArray {if _deec < _eegfb {_agdg =append (_agdg ,_fbeg (MakeListResult (_cacg ),_ffca ));}else {_agdg =append (_agdg ,_fbeg (MakeErrorResultType (ErrorTypeNA ,""),_ffca ));};};case ResultTypeList :_abdf :=_fbeg (_bgga ,_ffca );for _adda :=0;_adda < _eegfb ;_adda ++{_agdg =append (_agdg ,_abdf );};case ResultTypeNumber ,ResultTypeString ,ResultTypeError ,ResultTypeEmpty :for _feddg :=0;_feddg < _eegfb ;_feddg ++{_feea :=_fbeg (_bgga ,_ffca );_agdg =append (_agdg ,_feea );};};return _agdg ;};type xargs struct{_becaf []float64 ;_bbcf []float64 ;};

// Lookup implements the LOOKUP function that returns a matching value from a
// column, or from the same index in a second column.
func Lookup (args []Result )Result {if len (args )< 2{return MakeErrorResult ("\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074 \u0074\u0077\u006f\u0020\u0061r\u0067\u0075m\u0065\u006e\u0074\u0073");};if len (args )> 3{return MakeErrorResult ("\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0074\u0020\u006do\u0073\u0074\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_edgd :=args [0];_abbd :=args [1];if _abbd .Type !=ResultTypeArray &&_abbd .Type !=ResultTypeList {return MakeErrorResult ("\u0056\u004cO\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_beda :=_baaeag (_abbd );_eaabg :=-1;for _fbeee ,_gbace :=range _beda {if _befb (_edgd ,_gbace ,false ,false )==_fced {_eaabg =_fbeee ;};};if _eaabg ==-1{return MakeErrorResultType (ErrorTypeNA ,"\u004c\u004f\u004f\u004bUP\u0020\u006e\u006f\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0020\u0066\u006f\u0075n\u0064");};_edbf :=_beda ;if len (args )==3{_edbf =_baaeag (args [2]);};if _eaabg < 0||_eaabg >=len (_edbf ){return MakeErrorResultType (ErrorTypeNA ,"\u004c\u004f\u004f\u004bUP\u0020\u006e\u006f\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0020\u0066\u006f\u0075n\u0064");};return _edbf [_eaabg ];};

// VerticalRange is a range expression that when evaluated returns a list of Results from references like AA:IJ (all cells from columns AA to IJ).
type VerticalRange struct{_caafg ,_beege string };func _fggd (_gfeg ,_ccd float64 ,_dbf ,_dacb int )float64 {_aecd :=_edgb (_gfeg );_dggc :=_edgb (_ccd );_cdbc :=_gfdg (_aecd ,_dggc ,_dbf );return _egda (_aecd ,_cdbc ,_dacb );};type defEval struct{evCache ;_edg bool ;};

// Eval evaluates the binary expression using the context given.
func (_gg BinaryExpr )Eval (ctx Context ,ev Evaluator )Result {_fab :=_gg ._g .Eval (ctx ,ev );if _fab .Type ==ResultTypeError {return _fab ;};_gf :=_gg ._fde .Eval (ctx ,ev );if _gf .Type ==ResultTypeError {return _gf ;};if _fab .Type ==_gf .Type {if _fab .Type ==ResultTypeArray {if !_ag (_fab .ValueArray ,_gf .ValueArray ){return MakeErrorResult ("l\u0068\u0073\u002f\u0072\u0068\u0073 \u0073\u0068\u006f\u0075\u006c\u0064 \u0068\u0061\u0076\u0065\u0020\u0073\u0061m\u0065\u0020\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006fn\u0073");};return _ffc (_gg ._df ,_fab .ValueArray ,_gf .ValueArray );}else if _fab .Type ==ResultTypeList {if len (_fab .ValueList )!=len (_gf .ValueList ){return MakeErrorResult ("l\u0068\u0073\u002f\u0072\u0068\u0073 \u0073\u0068\u006f\u0075\u006c\u0064 \u0068\u0061\u0076\u0065\u0020\u0073\u0061m\u0065\u0020\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006fn\u0073");};return _eea (_gg ._df ,_fab .ValueList ,_gf .ValueList );};}else if _fab .Type ==ResultTypeArray &&(_gf .Type ==ResultTypeNumber ||_gf .Type ==ResultTypeString ){return _ea (_gg ._df ,_fab .ValueArray ,_gf );}else if _fab .Type ==ResultTypeList &&(_gf .Type ==ResultTypeNumber ||_gf .Type ==ResultTypeString ){return _eb (_gg ._df ,_fab .ValueList ,_gf );};switch _gg ._df {case BinOpTypePlus :if _fab .Type ==_gf .Type {if _fab .Type ==ResultTypeNumber {return MakeNumberResult (_fab .ValueNumber +_gf .ValueNumber );};};case BinOpTypeMinus :if _fab .Type ==_gf .Type {if _fab .Type ==ResultTypeNumber {return MakeNumberResult (_fab .ValueNumber -_gf .ValueNumber );};};case BinOpTypeMult :if _fab .Type ==_gf .Type {if _fab .Type ==ResultTypeNumber {return MakeNumberResult (_fab .ValueNumber *_gf .ValueNumber );};};case BinOpTypeDiv :if _fab .Type ==_gf .Type {if _fab .Type ==ResultTypeNumber {if _gf .ValueNumber ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"\u0064\u0069\u0076\u0069\u0064\u0065\u0020\u0062\u0079 \u007a\u0065\u0072\u006f");};return MakeNumberResult (_fab .ValueNumber /_gf .ValueNumber );};};case BinOpTypeExp :if _fab .Type ==_gf .Type {if _fab .Type ==ResultTypeNumber {return MakeNumberResult (_fb .Pow (_fab .ValueNumber ,_gf .ValueNumber ));};};case BinOpTypeLT :if _fab .Type ==_gf .Type {if _fab .Type ==ResultTypeNumber {return MakeBoolResult (_fab .ValueNumber < _gf .ValueNumber );};if _fab .Type ==ResultTypeString {return MakeBoolResult (_fab .ValueString < _gf .ValueString );};if _fab .Type ==ResultTypeEmpty {return MakeBoolResult (false );};}else if _fab .Type ==ResultTypeString &&_gf .Type ==ResultTypeNumber {return MakeBoolResult (false );}else if _fab .Type ==ResultTypeNumber &&_gf .Type ==ResultTypeString {return MakeBoolResult (true );}else if _fab .Type ==ResultTypeEmpty &&(_gf .Type ==ResultTypeNumber ||_gf .Type ==ResultTypeString ){return MakeBoolResult (true );}else if (_fab .Type ==ResultTypeNumber ||_fab .Type ==ResultTypeString )&&_gf .Type ==ResultTypeEmpty {return MakeBoolResult (false );};case BinOpTypeGT :if _fab .Type ==_gf .Type {if _fab .Type ==ResultTypeNumber {return MakeBoolResult (_fab .ValueNumber > _gf .ValueNumber );};if _fab .Type ==ResultTypeString {return MakeBoolResult (_fab .ValueString > _gf .ValueString );};if _fab .Type ==ResultTypeEmpty {return MakeBoolResult (false );};}else if _fab .Type ==ResultTypeString &&_gf .Type ==ResultTypeNumber {return MakeBoolResult (true );}else if _fab .Type ==ResultTypeNumber &&_gf .Type ==ResultTypeString {return MakeBoolResult (false );}else if _fab .Type ==ResultTypeEmpty &&(_gf .Type ==ResultTypeNumber ||_gf .Type ==ResultTypeString ){return MakeBoolResult (false );}else if (_fab .Type ==ResultTypeNumber ||_fab .Type ==ResultTypeString )&&_gf .Type ==ResultTypeEmpty {return MakeBoolResult (true );};case BinOpTypeEQ :if _fab .Type ==_gf .Type {if _fab .Type ==ResultTypeNumber {return MakeBoolResult (_fab .ValueNumber ==_gf .ValueNumber );};if _fab .Type ==ResultTypeString {return MakeBoolResult (_fab .ValueString ==_gf .ValueString );};if _fab .Type ==ResultTypeEmpty {return MakeBoolResult (true );};}else if (_fab .Type ==ResultTypeString &&_gf .Type ==ResultTypeNumber )||(_fab .Type ==ResultTypeNumber &&_gf .Type ==ResultTypeString ){return MakeBoolResult (false );}else if _fab .Type ==ResultTypeEmpty &&(_gf .Type ==ResultTypeNumber ||_gf .Type ==ResultTypeString ){return MakeBoolResult (_ee (_gf ));}else if (_fab .Type ==ResultTypeNumber ||_fab .Type ==ResultTypeString )&&_gf .Type ==ResultTypeEmpty {return MakeBoolResult (_ee (_fab ));};case BinOpTypeNE :if _fab .Type ==_gf .Type {if _fab .Type ==ResultTypeNumber {return MakeBoolResult (_fab .ValueNumber !=_gf .ValueNumber );};if _fab .Type ==ResultTypeString {return MakeBoolResult (_fab .ValueString !=_gf .ValueString );};if _fab .Type ==ResultTypeEmpty {return MakeBoolResult (false );};}else if (_fab .Type ==ResultTypeString &&_gf .Type ==ResultTypeNumber )||(_fab .Type ==ResultTypeNumber &&_gf .Type ==ResultTypeString ){return MakeBoolResult (true );}else if _fab .Type ==ResultTypeEmpty &&(_gf .Type ==ResultTypeNumber ||_gf .Type ==ResultTypeString ){return MakeBoolResult (!_ee (_gf ));}else if (_fab .Type ==ResultTypeNumber ||_fab .Type ==ResultTypeString )&&_gf .Type ==ResultTypeEmpty {return MakeBoolResult (!_ee (_fab ));};case BinOpTypeLEQ :if _fab .Type ==_gf .Type {if _fab .Type ==ResultTypeNumber {return MakeBoolResult (_fab .ValueNumber <=_gf .ValueNumber );};if _fab .Type ==ResultTypeString {return MakeBoolResult (_fab .ValueString <=_gf .ValueString );};if _fab .Type ==ResultTypeEmpty {return MakeBoolResult (true );};}else if _fab .Type ==ResultTypeString &&_gf .Type ==ResultTypeNumber {return MakeBoolResult (false );}else if _fab .Type ==ResultTypeNumber &&_gf .Type ==ResultTypeString {return MakeBoolResult (true );}else if _fab .Type ==ResultTypeEmpty &&(_gf .Type ==ResultTypeNumber ||_gf .Type ==ResultTypeString ){return MakeBoolResult (_ee (_gf ));}else if (_fab .Type ==ResultTypeNumber ||_fab .Type ==ResultTypeString )&&_gf .Type ==ResultTypeEmpty {return MakeBoolResult (_ee (_fab ));};case BinOpTypeGEQ :if _fab .Type ==_gf .Type {if _fab .Type ==ResultTypeNumber {return MakeBoolResult (_fab .ValueNumber >=_gf .ValueNumber );};if _fab .Type ==ResultTypeString {return MakeBoolResult (_fab .ValueString >=_gf .ValueString );};if _fab .Type ==ResultTypeEmpty {return MakeBoolResult (true );};}else if _fab .Type ==ResultTypeString &&_gf .Type ==ResultTypeNumber {return MakeBoolResult (true );}else if _fab .Type ==ResultTypeNumber &&_gf .Type ==ResultTypeString {return MakeBoolResult (false );}else if _fab .Type ==ResultTypeEmpty &&(_gf .Type ==ResultTypeNumber ||_gf .Type ==ResultTypeString ){return MakeBoolResult (_ee (_gf ));}else if (_fab .Type ==ResultTypeNumber ||_fab .Type ==ResultTypeString )&&_gf .Type ==ResultTypeEmpty {return MakeBoolResult (_ee (_fab ));};case BinOpTypeConcat :return MakeStringResult (_fab .Value ()+_gf .Value ());};return MakeErrorResult ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0062\u0069n\u0061\u0072\u0079\u0020\u006f\u0070");};var _ddd =[]*_cf .Regexp {};

// Db implements the Excel DB function.
func Db (args []Result )Result {_dgfc :=len (args );if _dgfc !=4&&_dgfc !=5{return MakeErrorResult ("\u0044\u0042\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u006f\u0075\u0072\u0020\u006f\u0072 \u0066\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0063\u006f\u0073\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_afebd :=args [0].ValueNumber ;if _afebd < 0{return MakeErrorResultType (ErrorTypeNum ,"D\u0042\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0063\u006fs\u0074\u0020\u0074\u006f\u0020\u0062\u0065 \u006e\u006f\u006e\u0020\u006e\u0065\u0067\u0061\u0074\u0069v\u0065");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0042\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0061\u006c\u0076\u0061\u0067\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_aecg :=args [1].ValueNumber ;if _aecg < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0061\u006c\u0076\u0061\u0067\u0065\u0020\u0074\u006f\u0020\u0062e\u0020\u006e\u006f\u006e\u0020n\u0065\u0067a\u0074\u0069\u0076\u0065");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006c\u0069\u0066\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_fbdd :=args [2].ValueNumber ;if _fbdd <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0042\u0020r\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u006c\u0069\u0066\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("D\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_efba :=args [3].ValueNumber ;if _efba <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0042\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0074o\u0020\u0062\u0065\u0020\u0070\u006f\u0073i\u0074\u0069\u0076\u0065");};if _efba -_fbdd > 1{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063or\u0072\u0065\u0063\u0074\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0066\u006f\u0072\u0020\u0044\u0042");};_feb :=12.0;if _dgfc ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006do\u006e\u0074\u0068\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_feb =args [4].ValueNumber ;if _feb < 1||_feb > 12{return MakeErrorResultType (ErrorTypeNum ,"\u0044B\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u006do\u006e\u0074\u0068\u0020\u0074\u006f\u0020\u0062\u0065 i\u006e\u0020\u0072a\u006e\u0067e\u0020\u006f\u0066\u0020\u0031\u0020a\u006e\u0064 \u0031\u0032");};};if _feb ==12&&_efba > _fbdd {return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063or\u0072\u0065\u0063\u0074\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0066\u006f\u0072\u0020\u0044\u0042");};if _aecg >=_afebd {return MakeNumberResult (0);};_cgac :=1-_fb .Pow (_aecg /_afebd ,1/_fbdd );_cgac =float64 (int (_cgac *1000+0.5))/1000;_geef :=_afebd *_cgac *_feb /12;if _efba ==1{return MakeNumberResult (_geef );};_caad :=_geef ;_dffd :=0.0;_fgda :=_fbdd ;if _fgda > _efba {_fgda =_efba ;};for _ecfc :=2.0;_ecfc <=_fgda ;_ecfc ++{_dffd =(_afebd -_caad )*_cgac ;_caad +=_dffd ;};if _efba > _fbdd {return MakeNumberResult ((_afebd -_caad )*_cgac *(12-_feb )/12);};return MakeNumberResult (_dffd );};

// Update updates references in the PrefixVerticalRange after removing a row/column.
func (_dgeb PrefixVerticalRange )Update (q *_aac .UpdateQuery )Expression {if q .UpdateType ==_aac .UpdateActionRemoveColumn {_abbea :=_dgeb ;_aafdb :=_dgeb ._egbff .String ();if _aafdb ==q .SheetToUpdate {_bcdba :=q .ColumnIdx ;_abbea ._gfgff =_ffg (_dgeb ._gfgff ,_bcdba );_abbea ._agceg =_ffg (_dgeb ._agceg ,_bcdba );};return _abbea ;};return _dgeb ;};func _edgb (_baa float64 )_bd .Time {_eed :=int64 ((_baa -_gddb )*_dfcb );return _bd .Unix (0,_eed ).UTC ();};

// Error is called in the case of parsing error and saves an error to a plex.
func (_bgadc *plex )Error (s string ){_ce .Log ("\u0070a\u0072s\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",s );_bgadc ._acbga =s ;};

// Update returns the same object as updating sheet references does not affect ConstArrayExpr.
func (_eda ConstArrayExpr )Update (q *_aac .UpdateQuery )Expression {return _eda };

// Coupncd implements the Excel COUPNCD function.
func Coupncd (args []Result )Result {_fdg ,_eeg :=_ced (args ,"\u0043O\u0055\u0050\u004e\u0043\u0044");if _eeg .Type ==ResultTypeError {return _eeg ;};_gcd :=_edgb (_fdg ._ebbf );_ggffc :=_edgb (_fdg ._fee );_fag :=_fdg ._fea ;_fdeg :=_gfdg (_gcd ,_ggffc ,_fag );_bfab ,_aage ,_dba :=_fdeg .Date ();return MakeNumberResult (_ebe (_bfab ,int (_aage ),_dba ));};var _gac =map[string ]*_cf .Regexp {};

// GCD implements the Excel GCD() function which returns the greatest common
// divisor of a range of numbers.
func GCD (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0047\u0043D(\u0029\u0020\u0072e\u0071\u0075\u0069\u0072es \u0061t \u006c\u0065\u0061\u0073\u0074\u0020\u006fne\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_abeb :=[]float64 {};for _ ,_dggf :=range args {switch _dggf .Type {case ResultTypeString :_dbbd :=_dggf .AsNumber ();if _dbbd .Type !=ResultTypeNumber {return MakeErrorResult ("\u0047\u0043D(\u0029\u0020\u006fn\u006c\u0079\u0020\u0061cce\u0070ts\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_abeb =append (_abeb ,_dbbd .ValueNumber );case ResultTypeList ,ResultTypeArray :_ccgc :=GCD (_dggf .ListValues ());if _ccgc .Type !=ResultTypeNumber {return _ccgc ;};_abeb =append (_abeb ,_ccgc .ValueNumber );case ResultTypeNumber :_abeb =append (_abeb ,_dggf .ValueNumber );case ResultTypeError :return _dggf ;default:return MakeErrorResult (_c .Sprintf ("\u0047\u0043\u0044()\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020a\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_dggf .Type ));};};if _abeb [0]< 0{return MakeErrorResult ("\u0047\u0043D\u0028\u0029\u0020\u006fn\u006c\u0079 \u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020p\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};if len (_abeb )==1{return MakeNumberResult (_abeb [0]);};_cfbc :=_abeb [0];for _fccg :=1;_fccg < len (_abeb );_fccg ++{if _abeb [_fccg ]< 0{return MakeErrorResult ("\u0047\u0043D\u0028\u0029\u0020\u006fn\u006c\u0079 \u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020p\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_cfbc =_cadf (_cfbc ,_abeb [_fccg ]);};return MakeNumberResult (_cfbc );};

// Min is an implementation of the Excel MIN() function.
func Min (args []Result )Result {return _egfd (args ,false )};

// Bool is a boolean expression.
type Bool struct{_fdaf bool };

// HorizontalRange is a range expression that when evaluated returns a list of Results from references like 1:4 (all cells from rows 1 to 4).
type HorizontalRange struct{_efbab ,_bgaaa int };

// Eval evaluates a range with prefix returning a list of results or an error.
func (_acaba PrefixRangeExpr )Eval (ctx Context ,ev Evaluator )Result {_baebd :=_acaba ._abgaf .Reference (ctx ,ev );_gccgf :=_acaba ._cdfed .Reference (ctx ,ev );_fdcb :=_acaba ._ccbd .Reference (ctx ,ev );switch _baebd .Type {case ReferenceTypeSheet :if _aebf (_baebd ,ctx ){return MakeErrorResultType (ErrorTypeName ,_c .Sprintf ("\u0053h\u0065e\u0074\u0020\u0025\u0073\u0020n\u006f\u0074 \u0066\u006f\u0075\u006e\u0064",_baebd .Value ));};_adgc :=_gbbdc (_baebd ,_gccgf ,_fdcb );if _gccgf .Type ==ReferenceTypeCell &&_fdcb .Type ==ReferenceTypeCell {if _egcf ,_gcda :=ev .GetFromCache (_adgc );_gcda {return _egcf ;}else {_dedfac :=_egfc (ctx .Sheet (_baebd .Value ),ev ,_gccgf .Value ,_fdcb .Value );ev .SetCache (_adgc ,_dedfac );return _dedfac ;};};return MakeErrorResult ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072a\u006e\u0067\u0065\u0020"+_adgc );default:return MakeErrorResult (_c .Sprintf ("\u006e\u006f\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0020\u0066\u006f\u0072\u0020r\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_baebd .Type ));};};

// IsNA is an implementation of the Excel ISNA() function.
func IsNA (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053\u004e\u0041\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074");};return MakeBoolResult (args [0].Type ==ResultTypeError &&args [0].ValueString =="\u0023\u004e\u002f\u0041");};

// MaxIfs implements the MAXIFS function.
func MaxIfs (args []Result )Result {_eeca :=_ffdd (args ,true ,"\u004d\u0041\u0058\u0049\u0046\u0053");if _eeca .Type !=ResultTypeEmpty {return _eeca ;};_dfgbc :=_ggab (args [1:]);_cdfcg :=-_fb .MaxFloat64 ;_fafd :=_eabdb (args [0]);for _ ,_dbdff :=range _dfgbc {_eabfd :=_fafd [_dbdff ._adfac ][_dbdff ._dbcad ].ValueNumber ;if _cdfcg < _eabfd {_cdfcg =_eabfd ;};};if _cdfcg ==-_fb .MaxFloat64 {_cdfcg =0;};return MakeNumberResult (float64 (_cdfcg ));};func _ccaf (_bfcf ,_baaaa ,_dbc ,_bbac float64 ,_bcdc int )float64 {var _gbefg float64 ;if _bfcf ==0{_gbefg =_bbac +_dbc *_baaaa ;}else {_abfd :=_fb .Pow (1+_bfcf ,_baaaa );if _bcdc ==1{_gbefg =_bbac *_abfd +_dbc *(1+_bfcf )*(_abfd -1)/_bfcf ;}else {_gbefg =_bbac *_abfd +_dbc *(_abfd -1)/_bfcf ;};};return -_gbefg ;};func _gdce (_bfdd ,_ccda _bd .Time ,_dfgb ,_fca int )_bd .Time {_edgbc :=_ccda ;_agfg :=_bfdd .Year ()-_ccda .Year ();_edgbc =_edgbc .AddDate (_agfg ,0,0);if _bfdd .After (_edgbc ){_edgbc =_edgbc .AddDate (1,0,0);};_faca :=-12/_dfgb ;for _edgbc .After (_bfdd ){_edgbc =_edgbc .AddDate (0,_faca ,0);};return _edgbc ;};

// Eval evaluates and returns a boolean.
func (_cbf Bool )Eval (ctx Context ,ev Evaluator )Result {return MakeBoolResult (_cbf ._fdaf )};

// Nper implements the Excel NPER function.
func Nper (args []Result )Result {_gcabf :=len (args );if _gcabf < 3||_gcabf > 5{return MakeErrorResult ("\u004e\u0050\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006ff\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u006f\u0066\u0020\u0033\u0020\u0061\u006e\u0064\u0020\u0035");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("N\u0050\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_aeee :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u004e\u0050\u0045\u0052\u0020\u0072\u0065q\u0075\u0069\u0072e\u0073\u0020\u0070\u0061y\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ceee :=args [1].ValueNumber ;if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u004e\u0050\u0045\u0052\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0020\u0076\u0061\u006c\u0075\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_fbfg :=args [2].ValueNumber ;_cgcg :=0.0;if _gcabf >=4&&args [3].Type !=ResultTypeEmpty {if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u004e\u0050\u0045\u0052\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s \u0066\u0075\u0074\u0075\u0072\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_cgcg =args [3].ValueNumber ;};_aebeb :=0.0;if _gcabf ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("N\u0050\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0079\u0070\u0065\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_aebeb =args [4].ValueNumber ;if _aebeb !=0{_aebeb =1;};};_eaefg :=_ceee *(1+_aeee *_aebeb )-_cgcg *_aeee ;_feac :=(_fbfg *_aeee +_ceee *(1+_aeee *_aebeb ));return MakeNumberResult (_fb .Log (_eaefg /_feac )/_fb .Log (1+_aeee ));};const _bcbg =57376;const _dgabg =2;

// NewPrefixHorizontalRange constructs a new full rows range with prefix.
func NewPrefixHorizontalRange (pfx Expression ,v string )Expression {_bbab :=_bf .Split (v ,"\u003a");if len (_bbab )!=2{return nil ;};_gbgag ,_ :=_ad .Atoi (_bbab [0]);_ccbaa ,_ :=_ad .Atoi (_bbab [1]);if _gbgag > _ccbaa {_gbgag ,_ccbaa =_ccbaa ,_gbgag ;};return PrefixHorizontalRange {_caace :pfx ,_cadab :_gbgag ,_dgbaa :_ccbaa };};

// SetLocked does nothing for the invalid reference context.
func (_efdde *ivr )SetLocked (cellRef string ,locked bool ){};

// Intrate implements the Excel INTRATE function.
func Intrate (args []Result )Result {_eebd :=len (args );if _eebd !=4&&_eebd !=5{return MakeErrorResult ("\u0049\u004e\u0054\u0052\u0041\u0054\u0045\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0066\u006f\u0075r\u0020\u006f\u0072\u0020\u0066\u0069\u0076\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_gdb ,_cgdd ,_agd :=_aaf (args [0],args [1],"\u0049N\u0054\u0052\u0041\u0054\u0045");if _agd .Type ==ResultTypeError {return _agd ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u004e\u0054\u0052\u0041\u0054E\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0069\u006e\u0076\u0065\u0073\u0074\u006d\u0065\u006e\u0074 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_fdgbb :=args [2].ValueNumber ;if _fdgbb <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u004e\u0054\u0052\u0041\u0054\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0069\u006e\u0076e\u0073\u0074\u006d\u0065\u006e\u0074\u0020\u0074\u006f \u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020\u0061r\u0067\u0075\u006de\u006e\u0074");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u004e\u0054\u0052\u0041\u0054E\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0064\u0065\u006d\u0070\u0074\u0069\u006f\u006e \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_geae :=args [3].ValueNumber ;if _geae <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u004e\u0054\u0052\u0041\u0054\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0064e\u006d\u0070\u0074\u0069\u006f\u006e\u0020\u0074\u006f \u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020\u0061r\u0067\u0075\u006de\u006e\u0074");};_eee :=0;if _eebd ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049N\u0054\u0052A\u0054\u0045\u0020\u0072e\u0071\u0075\u0069r\u0065\u0073\u0020\u0062\u0061\u0073\u0069\u0073\u0020to\u0020\u0062\u0065 \u006e\u0075m\u0062\u0065\u0072\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};_eee =int (args [4].ValueNumber );if !_fdgc (_eee ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006eco\u0072\u0072\u0065c\u0074\u0020\u0062\u0061sis\u0020ar\u0067\u0075\u006d\u0065\u006e\u0074\u0020fo\u0072\u0020\u0049\u004e\u0054\u0052\u0041T\u0045");};};_dgbf ,_agd :=_gbab (_gdb ,_cgdd ,_eee );if _agd .Type ==ResultTypeError {return _agd ;};return MakeNumberResult ((_geae -_fdgbb )/_fdgbb /_dgbf );};

// Atan2 implements the Excel ATAN2 function.  It accepts two numeric arguments,
// and the arguments are (x,y), reversed from normal to match Excel's behaviour.
func Atan2 (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0041\u0054\u0041\u004e2\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020t\u0077o\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074\u0073");};_bdad :=args [0].AsNumber ();_daaa :=args [1].AsNumber ();if _bdad .Type ==ResultTypeNumber &&_daaa .Type ==ResultTypeNumber {_cbeb :=_fb .Atan2 (_daaa .ValueNumber ,_bdad .ValueNumber );if _cbeb !=_cbeb {return MakeErrorResult ("\u0041T\u0041N\u0032\u0020\u0072\u0065\u0074u\u0072\u006ee\u0064\u0020\u004e\u0061\u004e");};return MakeNumberResult (_cbeb );};for _ ,_cbge :=range []ResultType {_bdad .Type ,_daaa .Type }{switch _cbge {case ResultTypeList ,ResultTypeString :return MakeErrorResult ("\u0041\u0054\u0041\u004e\u0032\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u006e\u0075\u006de\u0072\u0069\u0063\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");case ResultTypeError :return _bdad ;default:return MakeErrorResult (_c .Sprintf ("\u0075\u006e\u0068an\u0064\u006c\u0065\u0064\u0020\u0041\u0054\u0041\u004e2\u0028)\u0020a\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_cbge ));};};return MakeErrorResult ("u\u006e\u0068\u0061\u006e\u0064\u006ce\u0064\u0020\u0065\u0072\u0072\u006f\u0072\u0020\u0066o\u0072\u0020\u0041T\u0041N\u0032\u0028\u0029");};

// Pv implements the Excel PV function.
func Pv (args []Result )Result {_deda :=len (args );if _deda < 3||_deda > 5{return MakeErrorResult ("\u0050\u0056\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u006f\u0066\u0020\u0033\u0020\u0061\u006e\u0064\u00205");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_abef :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0056\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et");};_gfcgg :=args [1].ValueNumber ;if _gfcgg !=float64 (int (_gfcgg )){return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006ff\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020a\u0072\u0067\u0075\u006d\u0065n\u0074");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0056\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0061\u0079\u006d\u0065\u006e\u0074 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gbad :=args [2].ValueNumber ;_beca :=0.0;if _deda >=4&&args [3].Type !=ResultTypeEmpty {if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0056 \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0075\u0074\u0075\u0072\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_beca =args [3].ValueNumber ;};_aead :=0.0;if _deda ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0079\u0070\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_aead =args [4].ValueNumber ;if _aead !=0{_aead =1;};};if _abef ==0{return MakeNumberResult (-_gbad *_gfcgg -_beca );}else {return MakeNumberResult ((((1-_fb .Pow (1+_abef ,_gfcgg ))/_abef )*_gbad *(1+_abef *_aead )-_beca )/_fb .Pow (1+_abef ,_gfcgg ));};};func _gbgg (_aag string )bool {for _ ,_ggd :=range _ddd {_cdbe :=_ggd .FindStringSubmatch (_aag );if len (_cdbe )> 1{return true ;};};return false ;};const _bbgf =57363;

// NewPrefixRangeExpr constructs a new range with prefix.
func NewPrefixRangeExpr (pfx ,from ,to Expression )Expression {_dgfcd ,_ggegb ,_cfeb :=_egfda (from ,to );if _cfeb !=nil {_ce .Log (_cfeb .Error ());return NewError (_cfeb .Error ());};return PrefixRangeExpr {_abgaf :pfx ,_cdfed :_dgfcd ,_ccbd :_ggegb };};

// Negate is a negate expression like -A1.
type Negate struct{_efbc Expression };

// IsLogical is an implementation of the Excel ISLOGICAL() function.
func IsLogical (ctx Context ,ev Evaluator ,args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053\u004c\u004f\u0047\u0049\u0043A\u004c\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ecgg :=args [0].Ref ;if _ecgg .Type !=ReferenceTypeCell {return MakeErrorResult ("I\u0053\u004c\u004f\u0047\u0049\u0043\u0041\u004c\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068\u0065\u0020\u0066\u0069\u0072\u0073t\u0020a\u0072\u0067\u0075\u006de\u006e\u0074 \u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065");};return MakeBoolResult (ctx .Cell (_ecgg .Value ,ev ).IsBoolean );};func (_aeg *defEval )checkLastEvalIsRef (_afba Context ,_ecg Expression ){switch _ecg .(type ){case FunctionCall :switch _ecg .(FunctionCall )._aafc {case "\u0049\u0053\u0052E\u0046":for _ ,_bgc :=range _ecg .(FunctionCall )._efga {switch _bgc .(type ){case CellRef ,Range ,HorizontalRange ,VerticalRange ,NamedRangeRef ,PrefixExpr ,PrefixRangeExpr ,PrefixHorizontalRange ,PrefixVerticalRange :_add :=_bgc .Eval (_afba ,_aeg );_aeg ._edg =!(_add .Type ==ResultTypeError &&_add .ValueString =="\u0023\u004e\u0041\u004d\u0045\u003f");default:_aeg ._edg =false ;};};};};};

// Xirr implements the Excel XIRR function.
func Xirr (args []Result )Result {_fagd :=len (args );if _fagd !=2&&_fagd !=3{return MakeErrorResult ("\u0058\u0049RR\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s t\u0077o \u006f\u0072\u0020\u0074\u0068\u0072\u0065e \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_dedfb ,_agee :=_ccfg (args [0],args [1],"\u0058\u0049\u0052\u0052");if _agee .Type ==ResultTypeError {return _agee ;};_fdee :=_dedfb ._becaf ;_gegd :=_dedfb ._bbcf ;_efeaf :=0.1;if _fagd ==3&&args [2].Type !=ResultTypeEmpty {if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0058\u0049\u0052\u0052\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0067\u0075\u0065\u0073\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_efeaf =args [2].ValueNumber ;if _efeaf <=-1{return MakeErrorResult ("\u0058\u0049\u0052\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0067\u0075\u0065\u0073\u0073\u0020\u0074\u006f\u0020\u0062e\u0020\u006d\u006f\u0072\u0065 \u0074\u0068a\u006e\u0020\u002d\u0031");};};return _gce (_fdee ,_gegd ,_efeaf );};const _acf ="\u0028\u0028\u005b\u0030\u002d\u0039]\u0029\u002b\u0029:\u0028\u0028\u005b0\u002d\u0039\u005d\u0029\u002b\u0029\u003a\u0028\u0028\u005b0\u002d\u0039\u005d\u0029\u002b(\\\u002e\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029\u003f\u0029\u0028\u0020\u0028\u0061\u006d\u007c\u0070\u006d\u0029\u0029\u003f";const _gaaf =57347;func _ccb (_bbbe ,_dagd float64 ,_bfgd ,_daa int )float64 {_deaf :=_edgb (_bbbe );_ebfbc :=_edgb (_dagd );if _daa ==1{_gadd :=_gdce (_deaf ,_ebfbc ,_bfgd ,1);_faad :=_gadd .AddDate (0,12/_bfgd ,0);return _egda (_gadd ,_faad ,_daa );};return float64 (_dedf (0,_daa ))/float64 (_bfgd );};func _fdgc (_gfcde int )bool {return _gfcde >=0&&_gfcde <=4};

// Received implements the Excel RECEIVED function.
func Received (args []Result )Result {_cecc :=len (args );if _cecc !=4&&_cecc !=5{return MakeErrorResult ("R\u0045\u0043\u0045\u0049\u0056\u0045\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066o\u0075\u0072\u0020\u006f\u0072\u0020\u0066\u0069\u0076\u0065 a\u0072\u0067\u0075m\u0065n\u0074\u0073");};_fdbb ,_aadd ,_egba :=_aaf (args [0],args [1],"\u0052\u0045\u0043\u0045\u0049\u0056\u0045\u0044");if _egba .Type ==ResultTypeError {return _egba ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0045\u0043\u0045\u0049\u0056\u0045\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020i\u006e\u0076\u0065\u0073\u0074\u006d\u0065n\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cagac :=args [2].ValueNumber ;if _cagac <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0052\u0045\u0043\u0045\u0049\u0056\u0045\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0069\u006ev\u0065\u0073\u0074\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020a\u0072\u0067\u0075\u006d\u0065n\u0074");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0045\u0043\u0045\u0049\u0056\u0045\u0044 \u0072\u0065\u0071ui\u0072\u0065\u0073\u0020\u0064\u0069s\u0063\u006f\u0075\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_cdbca :=args [3].ValueNumber ;if _cdbca <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0052\u0045\u0043\u0045I\u0056\u0045\u0044\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0064\u0069\u0073\u0063\u006f\u0075\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020p\u006f\u0073\u0069\u0074\u0069v\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_efgc :=0;if _cecc ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052E\u0043\u0045I\u0056\u0045\u0044 \u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0062\u0061\u0073\u0069\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_efgc =int (args [4].ValueNumber );if !_fdgc (_efgc ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006ec\u006f\u0072\u0072\u0065c\u0074\u0020b\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074\u0020\u0066\u006f\u0072\u0020\u0052\u0045\u0043E\u0049\u0056\u0045\u0044");};};_fcfa ,_egba :=_gbab (_fdbb ,_aadd ,_efgc );if _egba .Type ==ResultTypeError {return _egba ;};return MakeNumberResult (_cagac /(1-_cdbca *_fcfa ));};

// CountIfs implements the COUNTIFS function.
func CountIfs (args []Result )Result {_gfdfc :=_ffdd (args ,false ,"\u0043\u004f\u0055\u004e\u0054\u0049\u0046\u0053");if _gfdfc .Type !=ResultTypeEmpty {return _gfdfc ;};_bfbe :=_ggab (args );return MakeNumberResult (float64 (len (_bfbe )));};func _ffc (_bgf BinOpType ,_cd ,_gd [][]Result )Result {_fabg :=[][]Result {};for _bdgd :=range _cd {_de :=_eea (_bgf ,_cd [_bdgd ],_gd [_bdgd ]);if _de .Type ==ResultTypeError {return _de ;};_fabg =append (_fabg ,_de .ValueList );};return MakeArrayResult (_fabg );};

// String is a string expression.
type String struct{_bcbdgd string };

// RoundDown is an implementation of the Excel ROUNDDOWN function that rounds a number
// down to a specified number of digits.
func RoundDown (args []Result )Result {return _gfdf (args ,_cbfaec )};

// Date is an implementation of the Excel DATE() function.
func Date (args []Result )Result {if len (args )!=3||args [0].Type !=ResultTypeNumber ||args [1].Type !=ResultTypeNumber ||args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0041TE\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s t\u0068re\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_edfe :=int (args [0].ValueNumber );if _edfe < 0||_edfe >=10000{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074 \u0064\u0061\u0074\u0065");}else if _edfe <=1899{_edfe +=1900;};_cafc :=_bd .Month (args [1].ValueNumber );_aea :=int (args [2].ValueNumber );_gbe :=_cfga (_edfe ,_cafc ,_aea );_dfdb :=_gea (_cfb ,_gbe )+1;if _dfdb < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074 \u0064\u0061\u0074\u0065");};return MakeNumberResult (_dfdb );};

// TextJoin is an implementation of the Excel TEXTJOIN function.
func TextJoin (args []Result )Result {if len (args )< 3{return MakeErrorResult ("\u0054\u0045\u0058\u0054\u004aO\u0049\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074h\u0072\u0065\u0065\u0020\u006f\u0072\u0020\u006d\u006f\u0072\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeString {return MakeErrorResult ("\u0054\u0045\u0058T\u004a\u004f\u0049\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0064\u0065\u006c\u0069\u006d\u0069\u0074\u0065\u0072\u0020\u0074\u006f\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067");};_eacc :=args [0].ValueString ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0054\u0045\u0058\u0054\u004a\u004f\u0049\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065c\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0072 \u0062\u006f\u006f\u006c\u0065a\u006e");};_bage :=args [1].ValueNumber !=0;_fdgg :=_ecdca (args [2:],[]string {},_bage );return MakeStringResult (_bf .Join (_fdgg ,_eacc ));};const _baec =57352;

// Ceiling is an implementation of the CEILING function which
// returns the ceiling of a number.
func Ceiling (args []Result )Result {if len (args )==0{return MakeErrorResult ("C\u0045\u0049\u004c\u0049\u004e\u0047\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020a\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006f\u006ee \u0061\u0072\u0067u\u006de\u006e\u0074");};if len (args )> 2{return MakeErrorResult ("\u0043\u0045\u0049\u004c\u0049\u004e\u0047\u0028\u0029\u0020\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0074\u0020\u006d\u006f\u0073\u0074 \u0074\u0077\u006f\u0020\u0061r\u0067\u0075m\u0065\u006e\u0074\u0073");};_egbd :=args [0].AsNumber ();if _egbd .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066i\u0072\u0073t\u0020\u0061\u0072\u0067u\u006d\u0065\u006et\u0020\u0074\u006f\u0020\u0043\u0045\u0049\u004c\u0049NG\u0028\u0029\u0020m\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020n\u0075\u006db\u0065\u0072");};_fdca :=float64 (1);if _egbd .ValueNumber < 0{_fdca =-1;};if len (args )> 1{_bded :=args [1].AsNumber ();if _bded .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073e\u0063\u006fn\u0064\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020t\u006f\u0020\u0043\u0045\u0049\u004cI\u004e\u0047\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_fdca =_bded .ValueNumber ;};if _fdca < 0&&_egbd .ValueNumber > 0{return MakeErrorResultType (ErrorTypeNum ,"\u006e\u0065\u0067\u0061\u0074\u0069v\u0065\u0020\u0073\u0069\u0067\u0020\u0074\u006f\u0020\u0043\u0045\u0049\u004cI\u004e\u0047\u0028\u0029\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if len (args )==1{return MakeNumberResult (_fb .Ceil (_egbd .ValueNumber ));};_ffdf :=_egbd .ValueNumber ;_ffdf ,_ccddd :=_fb .Modf (_ffdf /_fdca );if _ccddd > 0{_ffdf ++;};return MakeNumberResult (_ffdf *_fdca );};func _ddg (_fgd Result ,_ddc ,_fdfb string )(float64 ,Result ){var _ageg float64 ;switch _fgd .Type {case ResultTypeNumber :_ageg =float64 (int (_fgd .ValueNumber ));case ResultTypeString :_cfed :=DateValue ([]Result {_fgd });if _cfed .Type ==ResultTypeError {return 0,MakeErrorResult ("\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020"+_ddc +"\u0020\u0064\u0061\u0074\u0065\u0020\u0066\u006f\u0072\u0020"+_fdfb );};_ageg =_cfed .ValueNumber ;default:return 0,MakeErrorResult ("\u0049\u006e\u0063or\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0066\u006f\u0072\u0020"+_fdfb );};if _ageg < 0{return 0,MakeErrorResultType (ErrorTypeNum ,_ddc +"\u0020\u0073\u0068ou\u006c\u0064\u0020\u0062\u0065\u0020\u006e\u006f\u006e\u0020\u006e\u0065\u0067\u0061\u0074\u0069\u0076\u0065");};return _ageg ,_fbee ;};var _bgdc =[...]int {1};

// Large implements the Excel LARGE function.
func Large (args []Result )Result {return _ceed (args ,true )};func init (){_bgce ();RegisterFunction ("\u0044\u0041\u0054\u0045",Date );RegisterFunction ("\u0044A\u0054\u0045\u0044\u0049\u0046",DateDif );RegisterFunction ("\u0044A\u0054\u0045\u0056\u0041\u004c\u0055E",DateValue );RegisterFunction ("\u0044\u0041\u0059",Day );RegisterFunction ("\u0044\u0041\u0059\u0053",Days );RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0044\u0041\u0059\u0053",Days );RegisterFunction ("\u0045\u0044\u0041T\u0045",Edate );RegisterFunction ("\u0045O\u004d\u004f\u004e\u0054\u0048",Eomonth );RegisterFunction ("\u004d\u0049\u004e\u0055\u0054\u0045",Minute );RegisterFunction ("\u004d\u004f\u004eT\u0048",Month );RegisterFunction ("\u004e\u004f\u0057",Now );RegisterFunction ("\u0054\u0049\u004d\u0045",Time );RegisterFunction ("\u0054I\u004d\u0045\u0056\u0041\u004c\u0055E",TimeValue );RegisterFunction ("\u0054\u004f\u0044A\u0059",Today );RegisterFunctionComplex ("\u0059\u0045\u0041\u0052",Year );RegisterFunction ("\u0059\u0045\u0041\u0052\u0046\u0052\u0041\u0043",YearFrac );};

// Ifs is an implementation of the Excel IFS() function.
func Ifs (args []Result )Result {if len (args )< 2{return MakeErrorResult ("I\u0046\u0053\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061t\u0020\u006c\u0065\u0061\u0073\u0074\u0020t\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};for _dfcc :=0;_dfcc < len (args )-1;_dfcc +=2{if args [_dfcc ].ValueNumber ==1{return args [_dfcc +1];};};return MakeErrorResultType (ErrorTypeNA ,"");};

// MakeErrorResultType makes an error result of a given type with a specified
// debug message
func MakeErrorResultType (t ErrorType ,msg string )Result {switch t {case ErrorTypeNull :return Result {Type :ResultTypeError ,ValueString :"\u0023\u004e\u0055\u004c\u004c\u0021",ErrorMessage :msg };case ErrorTypeValue :return Result {Type :ResultTypeError ,ValueString :"\u0023V\u0041\u004c\u0055\u0045\u0021",ErrorMessage :msg };case ErrorTypeRef :return Result {Type :ResultTypeError ,ValueString :"\u0023\u0052\u0045F\u0021",ErrorMessage :msg };case ErrorTypeName :return Result {Type :ResultTypeError ,ValueString :"\u0023\u004e\u0041\u004d\u0045\u003f",ErrorMessage :msg };case ErrorTypeNum :return Result {Type :ResultTypeError ,ValueString :"\u0023\u004e\u0055M\u0021",ErrorMessage :msg };case ErrorTypeSpill :return Result {Type :ResultTypeError ,ValueString :"\u0023S\u0050\u0049\u004c\u004c\u0021",ErrorMessage :msg };case ErrorTypeNA :return Result {Type :ResultTypeError ,ValueString :"\u0023\u004e\u002f\u0041",ErrorMessage :msg };case ErrorTypeDivideByZero :return Result {Type :ResultTypeError ,ValueString :"\u0023D\u0049\u0056\u002f\u0030\u0021",ErrorMessage :msg };default:return Result {Type :ResultTypeError ,ValueString :"\u0023V\u0041\u004c\u0055\u0045\u0021",ErrorMessage :msg };};};

// String returns a string representation of ConstArrayExpr.
func (_cbe ConstArrayExpr )String ()string {return ""};

// HLookup implements the HLOOKUP function that returns a matching value from a
// row in an array.
func HLookup (args []Result )Result {if len (args )< 3{return MakeErrorResult ("\u0048\u004c\u004f\u004f\u004bU\u0050\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074 \u006c\u0065\u0061\u0073\u0074\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if len (args )> 4{return MakeErrorResult ("\u0048\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0061\u0074\u0020m\u006f\u0073\u0074\u0020\u0066\u006f\u0075\u0072\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_bcbe :=args [0];_dbeb :=args [1];if _dbeb .Type !=ResultTypeArray {return MakeErrorResult ("\u0048\u004cO\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_cfac :=args [2].AsNumber ();if _cfac .Type !=ResultTypeNumber {return MakeErrorResult ("\u0048\u004cO\u004f\u004b\u0055\u0050 \u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075m\u0065\u0072\u0069\u0063\u0020\u0072\u006f\u0077\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_fcfg :=false ;if len (args )==4{_efa :=args [3].AsNumber ();if _efa .Type !=ResultTypeNumber {return MakeErrorResult ("\u0048\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u006e\u0075\u006de\u0072\u0069\u0063\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};if _efa .ValueNumber ==0{_fcfg =true ;};};_eafd :=-1;_fcea :=false ;if len (_dbeb .ValueArray )==0{return MakeErrorResult ("\u0048\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020n\u006f\u006e\u002d\u0065\u006d\u0070\u0074\u0079\u0020\u0061\u0072\u0072\u0061\u0079");};_cecd :=_dbeb .ValueArray [0];_eddce :for _cdegf ,_eefcg :=range _cecd {switch _befb (_eefcg ,_bcbe ,false ,_fcfg ){case _bacgf :_eafd =_cdegf ;case _fced :_eafd =_cdegf ;_fcea =true ;break _eddce ;};};if _eafd ==-1{return MakeErrorResultType (ErrorTypeNA ,"\u0048\u004c\u004fOK\u0055\u0050\u0020\u006e\u006f\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_gafgc :=int (_cfac .ValueNumber )-1;if _gafgc < 0||_gafgc > len (_dbeb .ValueArray ){return MakeErrorResult ("\u0048L\u004f\u004f\u004b\u0055P\u0020\u0068\u0061\u0064\u0020i\u006ev\u0061l\u0069\u0064\u0020\u0069\u006e\u0064\u0065x");};_cecd =_dbeb .ValueArray [_gafgc ];if _eafd < 0||_eafd >=len (_cecd ){return MakeErrorResult ("\u0056\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0068\u0061\u0073\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0063\u006f\u006c\u0075\u006d\u006e\u0020\u0069\u006e\u0064\u0065\u0078");};if _fcea ||!_fcfg {return _cecd [_eafd ];};return MakeErrorResultType (ErrorTypeNA ,"\u0056\u004c\u004fOK\u0055\u0050\u0020\u006e\u006f\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};var InvalidReferenceContext =&ivr {};const (ResultTypeUnknown ResultType =iota ;ResultTypeNumber ;ResultTypeString ;ResultTypeList ;ResultTypeArray ;ResultTypeError ;ResultTypeEmpty ;);

// Fv implements the Excel FV function.
func Fv (args []Result )Result {_dagc :=len (args );if _dagc < 3||_dagc > 5{return MakeErrorResult ("\u0046\u0056\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u006f\u0066\u0020\u0033\u0020\u0061\u006e\u0064\u00205");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0046\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_cagc :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0046\u0056\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et");};_bdde :=args [1].ValueNumber ;if _bdde !=float64 (int (_bdde )){return MakeErrorResultType (ErrorTypeNum ,"\u0046\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006ff\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020a\u0072\u0067\u0075\u006d\u0065n\u0074");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0046\u0056\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0061\u0079\u006d\u0065\u006e\u0074 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_fcag :=args [2].ValueNumber ;_cadb :=0.0;if _dagc >=4&&args [3].Type !=ResultTypeEmpty {if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("F\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0070\u0072\u0065\u0073\u0065\u006et \u0076\u0061\u006c\u0075e\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075mb\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cadb =args [3].ValueNumber ;};_dfbf :=0;if _dagc ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0046\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0079\u0070\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_dfbf =int (args [4].ValueNumber );if _dfbf !=0{_dfbf =1;};};return MakeNumberResult (_ccaf (_cagc ,_bdde ,_fcag ,_cadb ,_dfbf ));};const _ggffcd =57366;func _agfd (_fed ,_cba float64 ,_bggf ,_ccbg int )(float64 ,Result ){_abc ,_cgfag :=_edgb (_fed ),_edgb (_cba );if _cgfag .After (_abc ){_afa :=_gdce (_abc ,_cgfag ,_bggf ,_ccbg );_eef :=(_cgfag .Year ()-_afa .Year ())*12+int (_cgfag .Month ())-int (_afa .Month ());return float64 (_eef *_bggf )/12.0,_fbee ;};return 0,MakeErrorResultType (ErrorTypeNum ,"\u0053\u0065t\u0074\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0064\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0062\u0065\u0066\u006f\u0072\u0065\u0020\u006d\u0061\u0074\u0075\u0072\u0069\u0074\u0079\u0020\u0064\u0061\u0074\u0065");};func _bcdeg (_ccdge []Result )Result {_cefgf :=_ccdge [0].ValueArray ;if len (_ccdge )==1{_bagag :=[][]Result {};for _ ,_egfaa :=range _cefgf {_bagag =append (_bagag ,_ggdf ([]Result {MakeListResult (_egfaa )}).ValueList );};return MakeArrayResult (_bagag );}else if len (_ccdge )==2{_fbacc :=len (_cefgf );_dbgg :=len (_cefgf [0]);_fdef :=_eebef (_ccdge [1],_fbacc ,_dbgg );_bcaca :=len (_fdef );_facd :=[][]Result {};var _fccc []Result ;for _gaefg ,_fgf :=range _cefgf {if _gaefg < _bcaca {_fccc =_fdef [_gaefg ];}else {_fccc =_fbeg (MakeErrorResultType (ErrorTypeNA ,""),_dbgg );};_facd =append (_facd ,_ggdf ([]Result {MakeListResult (_fgf ),MakeListResult (_fccc )}).ValueList );};return MakeArrayResult (_facd );}else if len (_ccdge )==3{_cfaca :=len (_cefgf );_acac :=len (_cefgf [0]);_effed :=_eebef (_ccdge [1],_cfaca ,_acac );_edfec :=_eebef (_ccdge [2],_cfaca ,_acac );_fgff :=len (_effed );_feaec :=len (_edfec );_gfff :=[][]Result {};var _dfbcg ,_aedd []Result ;for _ggef ,_adb :=range _cefgf {if _ggef < _fgff {_dfbcg =_effed [_ggef ];}else {_dfbcg =_fbeg (MakeErrorResultType (ErrorTypeNA ,""),_acac );};if _ggef < _feaec {_aedd =_edfec [_ggef ];}else {_aedd =_fbeg (MakeErrorResultType (ErrorTypeNA ,""),_acac );};_gfff =append (_gfff ,_ggdf ([]Result {MakeListResult (_adb ),MakeListResult (_dfbcg ),MakeListResult (_aedd )}).ValueList );};return MakeArrayResult (_gfff );};return MakeErrorResultType (ErrorTypeValue ,"");};

// Number is a nubmer expression.
type Number struct{_adbe float64 };func _aafbf (_dacdc [][]Result ,_aeeb int )[][]Result {_gacf :=[][]Result {};for _gffe :=range _dacdc {if _gffe ==0{continue ;};_becc :=[]Result {};for _agdcb :=range _dacdc {if _agdcb ==_aeeb {continue ;};_becc =append (_becc ,_dacdc [_gffe ][_agdcb ]);};_gacf =append (_gacf ,_becc );};return _gacf ;};const _ddgd =57370;

// LookupFunctionComplex looks up and returns a complex function or nil.
func LookupFunctionComplex (name string )FunctionComplex {_beafae .Lock ();defer _beafae .Unlock ();if _gegc ,_fecc :=_eaege [name ];_fecc {return _gegc ;};return nil ;};

// Today is an implementation of the Excel TODAY() function.
func Today (args []Result )Result {if len (args )> 0{return MakeErrorResult ("\u0054\u004f\u0044A\u0059\u0020\u0064\u006fe\u0073\u006e\u0027\u0074\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_gdfa :=_bd .Now ();_ ,_eadf :=_gdfa .Zone ();_gbg :=_gea (_cfb ,_gdfa .Unix ()+int64 (_eadf ))+1;return MakeNumberResult (_gbg );};

// NewEvaluator constructs a new defEval object which is the default formula evaluator.
func NewEvaluator ()Evaluator {_cdga :=&defEval {};_cdga .evCache =_ade ();return _cdga };

// ISBLANK is an implementation of the Excel ISBLANK() function.
func IsBlank (args []Result )Result {if len (args )!=1{return MakeErrorResult ("I\u0053\u0042\u004c\u0041\u004e\u004b(\u0029\u0020\u0061\u0063\u0063\u0065p\u0074\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};return MakeBoolResult (args [0].Type ==ResultTypeEmpty );};

// Tbillprice implements the Excel TBILLPRICE function.
func Tbillprice (args []Result )Result {if len (args )!=3{return MakeErrorResult ("T\u0042\u0049\u004c\u004c\u0050\u0052I\u0043\u0045\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0074\u0068r\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_abed ,_gbbf ,_baeb :=_aaf (args [0],args [1],"\u0054\u0042\u0049\u004c\u004c\u0050\u0052\u0049\u0043\u0045");if _baeb .Type ==ResultTypeError {return _baeb ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0054\u0042\u0049\u004c\u004c\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0064\u0069\u0073\u0063\u006f\u0075n\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cefa :=_gbbf -_abed ;if _cefa > 365{return MakeErrorResultType (ErrorTypeNum ,"\u0054\u0042\u0049\u004c\u004cP\u0052\u0049\u0043\u0045\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020m\u0061\u0074\u0075r\u0069\u0074\u0079\u0020t\u006f\u0020\u0062\u0065\u0020\u006eo\u0074\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u006e\u0065\u0020\u0079e\u0061\u0072\u0020\u0061\u0066\u0074\u0065\u0072\u0020\u0073\u0065\u0074\u0074\u006c\u0065\u006d\u0065\u006e\u0074");};_bfdf :=args [2].ValueNumber ;if _bfdf <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0054\u0042\u0049\u004c\u004c\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020d\u0069\u0073\u0063\u006f\u0075\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020a\u0072\u0067\u0075\u006d\u0065n\u0074");};return MakeNumberResult (100*(1-_bfdf *_cefa /360));};var _gdfga =[...]uint8 {0,20,37,60,78,96};

// Update updates the horizontal range references after removing a row/column.
func (_ecbcb HorizontalRange )Update (q *_aac .UpdateQuery )Expression {return _ecbcb };

// Odd is an implementation of the Excel ODD() that rounds a number to the
// nearest odd integer.
func Odd (args []Result )Result {if len (args )!=1{return MakeErrorResult ("O\u0044\u0044\u0028\u0029\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006f\u006ee\u0020\u0061\u0072g\u0075m\u0065\u006e\u0074");};_bbbcg :=args [0].AsNumber ();if _bbbcg .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0044\u0044\u0028\u0029\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_fege :=_fb .Signbit (_bbbcg .ValueNumber );_dbac ,_bcbfd :=_fb .Modf ((_bbbcg .ValueNumber -1)/2);_fgef :=_dbac *2+1;if _bcbfd !=0{if !_fege {_fgef +=2;}else {_fgef -=2;};};return MakeNumberResult (_fgef );};

// LastEvalIsRef returns if last evaluation with the evaluator was a reference.
func (_cea *defEval )LastEvalIsRef ()bool {return _cea ._edg };

// Update updates references in the PrefixHorizontalRange after removing a row/column.
func (_ggdd PrefixHorizontalRange )Update (q *_aac .UpdateQuery )Expression {return _ggdd };const _cfag ="\u0028\u0028\u005b0\u002d\u0039\u005d\u0029\u002b\u0029\u003a\u0028\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u005c\u002e\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029\u0028\u0020(\u0061\u006d\u007c\u0070\u006d\u0029\u0029\u003f";func _cgdbd (_bdaf []Result ,_eddc string )(float64 ,float64 ,Result ){if len (_bdaf )!=2{return 0,0,MakeErrorResult (_eddc +"\u0020\u0072\u0065qu\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if _bdaf [0].Type !=ResultTypeNumber {return 0,0,MakeErrorResult (_eddc +"\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e\u0061\u006c\u0020\u0064\u006f\u006c\u006c\u0061\u0072 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_adag :=_bdaf [0].ValueNumber ;if _bdaf [1].Type !=ResultTypeNumber {return 0,0,MakeErrorResult (_eddc +" \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_fdec :=float64 (int (_bdaf [1].ValueNumber ));if _fdec < 0{return 0,0,MakeErrorResultType (ErrorTypeNum ,_eddc +"\u0020r\u0065\u0071u\u0069\u0072\u0065\u0073 \u0066\u0072\u0061c\u0074\u0069\u006f\u006e\u0020\u0074\u006f\u0020\u0062e \u006e\u006f\u006e \u006e\u0065g\u0061\u0074\u0069\u0076\u0065\u0020n\u0075\u006db\u0065\u0072");};return _adag ,_fdec ,_fbee ;};func _fgad (_fabdb string )(int ,int ,float64 ,bool ,bool ,Result ){_afeb :="";_dffg :=[]string {};for _afdb ,_ebd :=range _gac {_dffg =_ebd .FindStringSubmatch (_fabdb );if len (_dffg )> 1{_afeb =_afdb ;break ;};};if _afeb ==""{return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cgfab );};_cbbc :=_dffg [1]=="";_dffg =_dffg [49:];_agg :=len (_dffg );_baae :=_dffg [_agg -1];_dbd :=_baae =="\u0061\u006d";_geggc :=_baae =="\u0070\u006d";var _egc ,_efef int ;var _dcbb float64 ;var _cfcd error ;switch _afeb {case "\u0068\u0068":_egc ,_cfcd =_ad .Atoi (_dffg [0]);if _cfcd !=nil {return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cgfab );};_efef =0;_dcbb =0;case "\u0068\u0068\u003am\u006d":_egc ,_cfcd =_ad .Atoi (_dffg [0]);if _cfcd !=nil {return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cgfab );};_efef ,_cfcd =_ad .Atoi (_dffg [2]);if _cfcd !=nil {return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cgfab );};_dcbb =0;case "\u006d\u006d\u003as\u0073":_egc =0;_efef ,_cfcd =_ad .Atoi (_dffg [0]);if _cfcd !=nil {return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cgfab );};_dcbb ,_cfcd =_ad .ParseFloat (_dffg [2],64);if _cfcd !=nil {return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cgfab );};case "\u0068\u0068\u003a\u006d\u006d\u003a\u0073\u0073":_egc ,_cfcd =_ad .Atoi (_dffg [0]);if _cfcd !=nil {return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cgfab );};_efef ,_cfcd =_ad .Atoi (_dffg [2]);if _cfcd !=nil {return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cgfab );};_dcbb ,_cfcd =_ad .ParseFloat (_dffg [4],64);if _cfcd !=nil {return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cgfab );};};if _efef >=60{return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cgfab );};if _dbd ||_geggc {if _egc > 12||_dcbb >=60{return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cgfab );}else if _egc ==12{_egc =0;};}else if _egc >=24||_dcbb >=10000{return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cgfab );};return _egc ,_efef ,_dcbb ,_geggc ,_cbbc ,_fbee ;};func _cefg (_eaec ,_ecc float64 ,_ebbff ,_ggcf int )float64 {_aefc :=_edgb (_eaec );_eaf :=_edgb (_ecc );_fbae :=_gdce (_aefc ,_eaf ,_ebbff ,_ggcf );return _egda (_fbae ,_aefc ,_ggcf );};

// NA is an implementation of the Excel NA() function that just returns the #N/A! error.
func NA (args []Result )Result {if len (args )!=0{return MakeErrorResult ("\u004eA\u0028\u0029\u0020\u0061c\u0063\u0065\u0070\u0074\u0073 \u006eo\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074s");};return MakeErrorResultType (ErrorTypeNA ,"");};

// ISFORMULA is an implementation of the Excel ISFORMULA() function.
func IsFormula (ctx Context ,ev Evaluator ,args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053F\u004f\u0052\u004d\u0055L\u0041\u0028)\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073 \u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_aecdf :=args [0].Ref ;if _aecdf .Type !=ReferenceTypeCell {return MakeErrorResult ("I\u0053\u0046\u004f\u0052\u004d\u0055\u004c\u0041\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068\u0065\u0020\u0066\u0069\u0072\u0073t\u0020a\u0072\u0067\u0075\u006de\u006e\u0074 \u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065");};return MakeBoolResult (ctx .HasFormula (_aecdf .Value ));};

// Parse parses an io.Reader to get an Expression. If expression is parsed with an error, nil is returned
func Parse (r _f .Reader )Expression {_fcba :=&plex {_bbga :LexReader (r )};_dccc (_fcba );if _fcba ._acbga !=""{return nil ;};return _fcba ._aegdd ;};

// Coupdaybs implements the Excel COUPDAYBS function.
func Coupdaybs (args []Result )Result {_acc ,_bafc :=_ced (args ,"\u0043O\u0055\u0050\u0044\u0041\u0059\u0042S");if _bafc .Type ==ResultTypeError {return _bafc ;};return MakeNumberResult (_cefg (_acc ._ebbf ,_acc ._fee ,_acc ._fea ,_acc ._ffba ));};func (_cgba *Lexer )nextRaw ()*node {for len (_cgba ._fcdd )!=0{_bbdf :=<-_cgba ._fcdd [len (_cgba ._fcdd )-1];if _bbdf !=nil {return _bbdf ;};_cgba ._fcdd =_cgba ._fcdd [0:len (_cgba ._fcdd )-1];};return <-_cgba ._ddgcb ;};

// Degrees is an implementation of the Excel function DEGREES() that converts
// radians to degrees.
func Degrees (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0044\u0045\u0047R\u0045\u0045\u0053\u0028)\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_decaf :=args [0].AsNumber ();if _decaf .Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0045\u0047RE\u0045\u0053\u0028\u0029\u0020\u0072\u0065\u0071\u0075i\u0072e\u0073 \u006eu\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};return MakeNumberResult (180.0/_fb .Pi *_decaf .ValueNumber );};

// Sln implements the Excel SLN function.
func Sln (args []Result )Result {if len (args )!=3{return MakeErrorResult ("\u0053\u004c\u004e\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068r\u0065e\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u004c\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020c\u006f\u0073\u0074\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_geebd :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u004c\u004e \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0061\u006c\u0076\u0061\u0067\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ebeb :=args [1].ValueNumber ;if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u004c\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020l\u0069\u0066\u0065\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_fdcda :=args [2].ValueNumber ;if _fdcda ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"\u0053\u004c\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006c\u0069f\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u006e\u0020\u007a\u0065\u0072\u006f");};return MakeNumberResult ((_geebd -_ebeb )/_fdcda );};

// Pricedisc implements the Excel PRICEDISC function.
func Pricedisc (args []Result )Result {_agfe :=len (args );if _agfe !=4&&_agfe !=5{return MakeErrorResult ("\u0050\u0052\u0049\u0043\u0045D\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020f\u006f\u0075\u0072\u0020\u006f\u0072\u0020\u0066\u0069\u0076\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_eaaca ,_badeg ,_eadg :=_aaf (args [0],args [1],"\u0050R\u0049\u0043\u0045\u0044\u0049\u0053C");if _eadg .Type ==ResultTypeError {return _eadg ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0052\u0049C\u0045\u0044\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0064\u0069\u0073\u0063\u006f\u0075\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079p\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_afeg :=args [2].ValueNumber ;if _afeg <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0052\u0049C\u0045\u0044\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0064\u0069\u0073\u0063\u006f\u0075\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065 \u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050R\u0049\u0043E\u0044\u0049\u0053\u0043 \u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0064\u0065mp\u0074\u0069\u006fn\u0020\u006ff\u0020\u0074\u0079\u0070\u0065\u0020n\u0075\u006db\u0065\u0072");};_dgee :=args [3].ValueNumber ;if _dgee <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0050R\u0049\u0043E\u0044\u0049\u0053\u0043 \u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0064\u0065mp\u0074\u0069\u006fn\u0020\u0074o\u0020\u0062\u0065\u0020\u0070\u006fs\u0069\u0074i\u0076\u0065");};_gfdde :=0;if _agfe ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0052I\u0043\u0045\u0044\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0062\u0061\u0073\u0069\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gfdde =int (args [4].ValueNumber );if !_fdgc (_gfdde ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0062\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074 \u0066\u006f\u0072\u0020\u0050R\u0049\u0043E\u0044\u0049\u0053\u0043");};};_dgba ,_eadg :=_gbab (_eaaca ,_badeg ,_gfdde );if _eadg .Type ==ResultTypeError {return _eadg ;};return MakeNumberResult (_dgee *(1-_afeg *_dgba ));};

// Median implements the MEDIAN function that returns the median of a range of
// values.
func Median (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u004d\u0045D\u0049\u0041\u004e\u0020r\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020l\u0065\u0061\u0073\u0074\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_geee :=_eebec (args );_e .Float64s (_geee );var _ddbd float64 ;if len (_geee )%2==0{_ddbd =(_geee [len (_geee )/2-1]+_geee [len (_geee )/2])/2;}else {_ddbd =_geee [len (_geee )/2];};return MakeNumberResult (_ddbd );};

// CountIf implements the COUNTIF function.
func CountIf (args []Result )Result {if len (args )< 2{return MakeErrorResult ("\u0043\u004f\u0055N\u0054\u0049\u0046\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0073");};_bgda :=args [0];if _bgda .Type !=ResultTypeArray &&_bgda .Type !=ResultTypeList {return MakeErrorResult ("\u0043O\u0055\u004eT\u0049\u0046\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0066\u0069\u0072\u0073\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_eabge :=_cdadc (args [1]);_cbdd :=0;for _ ,_dedd :=range _eabdb (_bgda ){for _ ,_ccfgb :=range _dedd {if _gdeg (_ccfgb ,_eabge ){_cbdd ++;};};};return MakeNumberResult (float64 (_cbdd ));};

// String returns a string representation of FunctionCall expression.
func (_fdcf FunctionCall )String ()string {_afgf :=_fd .Buffer {};_afgf .WriteString (_fdcf ._aafc );_afgf .WriteString ("\u0028");_cddg :=len (_fdcf ._efga )-1;for _fbbbba ,_dfea :=range _fdcf ._efga {_afgf .WriteString (_dfea .String ());if _fbbbba !=_cddg {_afgf .WriteString ("\u002c");};};_afgf .WriteString ("\u0029");return _afgf .String ();};

// SumIfs implements the SUMIFS function.
func SumIfs (args []Result )Result {_cffc :=_ffdd (args ,true ,"\u0053\u0055\u004d\u0049\u0046\u0053");if _cffc .Type !=ResultTypeEmpty {return _cffc ;};_beafe :=_ggab (args [1:]);_eece :=0.0;_fbbd :=_eabdb (args [0]);for _ ,_ddbfc :=range _beafe {_eece +=_fbbd [_ddbfc ._adfac ][_ddbfc ._dbcad ].ValueNumber ;};return MakeNumberResult (float64 (_eece ));};func (_dcg *evCache )GetFromCache (key string )(Result ,bool ){_dcg ._adc .Lock ();_deb ,_aefd :=_dcg ._cge [key ];_dcg ._adc .Unlock ();return _deb ,_aefd ;};

// IsBool returns false for the invalid reference context.
func (_begde *ivr )IsBool (cellRef string )bool {return false };func _badcb (_ffcfb ,_cfcda []string )[]string {for _ ,_bafd :=range _cfcda {_ffcfb =append (_ffcfb ,_bafd );};return _ffcfb ;};

// Not is an implementation of the Excel NOT() function and takes a single
// argument.
func Not (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u004eO\u0054\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073 \u006fn\u0065 \u0061\u0072\u0067\u0075\u006d\u0065\u006et");};switch args [0].Type {case ResultTypeError :return args [0];case ResultTypeString ,ResultTypeList :return MakeErrorResult ("\u004e\u004f\u0054\u0020\u0065\u0078\u0070\u0065\u0063\u0074s\u0020\u0061\u0020\u006e\u0075\u006d\u0065r\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");case ResultTypeNumber :return MakeBoolResult (!(args [0].ValueNumber !=0));default:return MakeErrorResult ("u\u006e\u0068\u0061\u006e\u0064\u006ce\u0064\u0020\u004e\u004f\u0054\u0020\u0061\u0072\u0067u\u006d\u0065\u006et\u0020t\u0079\u0070\u0065");};};

// LastRow returns 0 for the invalid reference context.
func (_fbacg *ivr )LastRow (colFrom string )int {return 0};var _ddcg =[...]int {45,3,44,32,18,40,72,46,47,30,31,32,39,48,28,29,30,31,32,75,39,49,32,56,50,70,23,39,76,57,58,59,60,61,62,63,64,65,66,67,68,77,71,69,54,43,13,19,21,55,82,11,78,9,74,28,29,30,31,32,37,33,34,35,36,38,1,20,39,10,2,8,0,80,79,0,0,0,83,0,81,73,28,29,30,31,32,37,33,34,35,36,38,0,0,39,28,29,30,31,32,37,33,34,35,36,38,26,27,39,51,52,25,14,15,16,17,0,24,23,22,41,23,12,0,6,7,26,27,0,42,0,25,14,15,16,17,0,24,23,22,5,0,12,0,6,7,26,27,0,4,0,25,14,15,16,17,0,24,23,22,41,0,12,53,6,7,26,27,0,0,0,25,14,15,16,17,0,24,23,22,41,0,12,0,6,7};

// YearFrac is an implementation of the Excel YEARFRAC() function.
func YearFrac (args []Result )Result {_gcf :=len (args );if (_gcf !=2&&_gcf !=3)||args [0].Type !=ResultTypeNumber ||args [1].Type !=ResultTypeNumber {return MakeErrorResult ("Y\u0045\u0041\u0052\u0046\u0052\u0041\u0043\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020tw\u006f\u0020\u006f\u0072 \u0074\u0068\u0072\u0065\u0065\u0020\u006e\u0075\u006dbe\u0072\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_dbbb :=0;if _gcf ==3&&args [2].Type !=ResultTypeEmpty {if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("Y\u0045\u0041\u0052\u0046\u0052\u0041\u0043\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020ba\u0073\u0069\u0073\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074o \u0062\u0065 \u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_dbbb =int (args [2].ValueNumber );if !_fdgc (_dbbb ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006ec\u006f\u0072\u0072\u0065c\u0074\u0020b\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074\u0020\u0066\u006f\u0072\u0020\u0059\u0045\u0041R\u0046\u0052\u0041\u0043");};};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0045\u0041\u0052\u0046\u0052\u0041\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020s\u0074\u0061\u0072\u0074\u0020\u0064\u0061t\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ege :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0045\u0041\u0052\u0046\u0052\u0041\u0043 \u0072\u0065\u0071ui\u0072\u0065\u0073\u0020\u0065\u006ed\u0020\u0064\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_eff :=args [1].ValueNumber ;_dgab ,_bff :=_gbab (_ege ,_eff ,_dbbb );if _bff .Type ==ResultTypeError {return _bff ;};return MakeNumberResult (_dgab );};

// Syd implements the Excel SYD function.
func Syd (args []Result )Result {if len (args )!=4{return MakeErrorResult ("S\u0059\u0044\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0066\u006f\u0075\u0072 \u0061\u0072\u0067u\u006de\u006e\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u0059\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020c\u006f\u0073\u0074\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_bgba :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u0059\u0044 \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0061\u006c\u0076\u0061\u0067\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ggcfc :=args [1].ValueNumber ;if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u0059\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020l\u0069\u0066\u0065\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_baba :=args [2].ValueNumber ;if _baba <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0053\u0059\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006c\u0069f\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u0059\u0044\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_eegf :=args [3].ValueNumber ;if _eegf <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0053\u0059\u0044 r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070e\u0072i\u006fd\u0020t\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if _eegf > _baba {return MakeErrorResultType (ErrorTypeNum ,"\u0053\u0059\u0044\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0065q\u0075\u0061\u006c\u0020\u006f\u0072\u0020\u006c\u0065\u0073\u0073\u0020\u0074\u0068a\u006e \u006c\u0069\u0066\u0065");};_gdaf :=(_bgba -_ggcfc )*(_baba -_eegf +1)*2;_cgcd :=_baba *(_baba +1);return MakeNumberResult (_gdaf /_cgcd );};

// Code is an implementation of the Excel CODE function that returns the first
// character of the string as a number.
func Code (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0043\u004f\u0044\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0073t\u0072\u0069\u006e\u0067\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_abcba :=args [0].AsString ();if _abcba .Type !=ResultTypeString {return MakeErrorResult ("\u0043\u004f\u0044\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0073t\u0072\u0069\u006e\u0067\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};if len (_abcba .ValueString )==0{return MakeNumberResult (0);};return MakeNumberResult (float64 (_abcba .ValueString [0]));};

// ISNONTEXT is an implementation of the Excel ISNONTEXT() function.
func IsNonText (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053N\u004f\u004e\u0054\u0045X\u0054\u0028)\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073 \u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};return MakeBoolResult (args [0].Type !=ResultTypeString );};const (_ggfc rmode =iota ;_cbfaec ;_eecc ;);

// BinOpType is the binary operation operator type
//go:generate stringer -type=BinOpType
type BinOpType byte ;

// Update returns the same object as updating sheet references does not affect EmptyExpr.
func (_dff EmptyExpr )Update (q *_aac .UpdateQuery )Expression {return _dff };

// RegisterFunction registers a standard function.
func RegisterFunction (name string ,fn Function ){_beafae .Lock ();defer _beafae .Unlock ();if _ ,_cgacd :=_adebf [name ];_cgacd {_ce .Log ("\u0064\u0075p\u006c\u0069\u0063\u0061t\u0065\u0020r\u0065\u0067\u0069\u0073\u0074\u0072\u0061\u0074i\u006f\u006e\u0020\u006f\u0066\u0020\u0066\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0025\u0073",name );};_adebf [name ]=fn ;};

// Yield implements the Excel YIELD function.
func Yield (args []Result )Result {_abag :=len (args );if _abag !=6&&_abag !=7{return MakeErrorResult ("\u0059\u0049E\u004c\u0044\u0020\u0072e\u0071\u0075i\u0072\u0065\u0073\u0020\u0073\u0069\u0078\u0020o\u0072\u0020\u0073\u0065\u0076\u0065\u006e\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_acbb ,_abec ,_aagff :=_aaf (args [0],args [1],"\u0059\u0049\u0045L\u0044");if _aagff .Type ==ResultTypeError {return _aagff ;};_eabg :=args [2];if _eabg .Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0049\u0045LD\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0072a\u0074e\u0020o\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_ccbce :=_eabg .ValueNumber ;if _ccbce < 0{return MakeErrorResultType (ErrorTypeNum ,"R\u0061\u0074\u0065\u0020\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u006e\u006fn\u0020\u006e\u0065g\u0061t\u0069\u0076\u0065");};_dcdf :=args [3];if _dcdf .Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0049\u0045\u004c\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020p\u0072 \u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_fbaf :=_dcdf .ValueNumber ;if _fbaf <=0{return MakeErrorResultType (ErrorTypeNum ,"p\u0072\u0020\u0073\u0068ou\u006cd\u0020\u0062\u0065\u0020\u0070o\u0073\u0069\u0074\u0069\u0076\u0065");};_gcec :=args [4];if _gcec .Type !=ResultTypeNumber {return MakeErrorResult ("Y\u0049\u0045\u004c\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0064\u0065m\u0070\u0074\u0069\u006f\u006e\u0020\u006f\u0066\u0020\u0074yp\u0065\u0020\u006eu\u006db\u0065\u0072");};_adcf :=_gcec .ValueNumber ;if _adcf < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0059\u0069\u0065\u006cd\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065 \u006eo\u006e\u0020\u006e\u0065\u0067\u0061\u0074i\u0076\u0065");};_cdeb :=args [5];if _cdeb .Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0049\u0045\u004c\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0066\u0072\u0065\u0071\u0075e\u006e\u0063\u0079\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006eu\u006d\u0062\u0065\u0072");};_fafe :=float64 (int (_cdeb .ValueNumber ));if !_dcdd (_fafe ){return MakeErrorResultType (ErrorTypeNum ,"\u0049n\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0066\u0072e\u0071u\u0065n\u0063\u0065\u0020\u0076\u0061\u006c\u0075e");};_cdgf :=0;if _abag ==7&&args [6].Type !=ResultTypeEmpty {_fgca :=args [6];if _fgca .Type !=ResultTypeNumber {return MakeErrorResult ("Y\u0049\u0045\u004c\u0044\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073 \u0062\u0061\u0073\u0069\u0073\u0020\u006ff\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072");};_cdgf =int (_fgca .ValueNumber );if !_fdgc (_cdgf ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063o\u0072\u0072\u0065\u0063t\u0020\u0062\u0061\u0073\u0069\u0073\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u006f\u0072\u0020\u0059\u0049\u0045\u004c\u0044");};};_ecag :=0.0;_abcb :=0.0;_eddbc :=1.0;_fgdd ,_aagff :=_ggea (_acbb ,_abec ,_ccbce ,_abcb ,_adcf ,_fafe ,_cdgf );if _aagff .Type ==ResultTypeError {return _aagff ;};_ecdf ,_aagff :=_ggea (_acbb ,_abec ,_ccbce ,_eddbc ,_adcf ,_fafe ,_cdgf );if _aagff .Type ==ResultTypeError {return _aagff ;};_daad :=(_eddbc -_abcb )*0.5;for _dbaf :=0;_dbaf < 100&&_ecag !=_fbaf ;_dbaf ++{_ecag ,_aagff =_ggea (_acbb ,_abec ,_ccbce ,_daad ,_adcf ,_fafe ,_cdgf );if _aagff .Type ==ResultTypeError {return _aagff ;};if _fbaf ==_fgdd {return MakeNumberResult (_abcb );}else if _fbaf ==_ecdf {return MakeNumberResult (_eddbc );}else if _fbaf ==_ecag {return MakeNumberResult (_daad );}else if _fbaf < _ecdf {_eddbc *=2.0;_ecdf ,_aagff =_ggea (_acbb ,_abec ,_ccbce ,_eddbc ,_adcf ,_fafe ,_cdgf );if _aagff .Type ==ResultTypeError {return _aagff ;};_daad =(_eddbc -_abcb )*0.5;}else {if _fbaf < _ecag {_abcb =_daad ;_fgdd =_ecag ;}else {_eddbc =_daad ;_ecdf =_ecag ;};_daad =_eddbc -(_eddbc -_abcb )*((_fbaf -_ecdf )/(_fgdd -_ecdf ));};};return MakeNumberResult (_daad );};var _bdcg string =string ([]byte {92});func _bgce (){_ceeg ["\u006d\u006d\u002f\u0064\u0064\u002f\u0079\u0079"]=_cf .MustCompile ("\u005e"+_aec +_dggd );_ceeg ["\u006dm\u0020\u0064\u0064\u002c\u0020\u0079y"]=_cf .MustCompile ("\u005e"+_bgcd +_dggd );_ceeg ["\u0079\u0079\u002d\u006d\u006d\u002d\u0064\u0064"]=_cf .MustCompile ("\u005e"+_abf +_dggd );_ceeg ["y\u0079\u002d\u006d\u006d\u0053\u0074\u0072\u002d\u0064\u0064"]=_cf .MustCompile ("\u005e"+_aace +_dggd );_gac ["\u0068\u0068"]=_cf .MustCompile (_cgge +_ebg +"\u0024");_gac ["\u0068\u0068\u003am\u006d"]=_cf .MustCompile (_cgge +_dgb +"\u0024");_gac ["\u006d\u006d\u003as\u0073"]=_cf .MustCompile (_cgge +_cfag +"\u0024");_gac ["\u0068\u0068\u003a\u006d\u006d\u003a\u0073\u0073"]=_cf .MustCompile (_cgge +_acf +"\u0024");_fac =[]*_cf .Regexp {_cf .MustCompile ("\u005e"+_aec +"\u0024"),_cf .MustCompile ("\u005e"+_bgcd +"\u0024"),_cf .MustCompile ("\u005e"+_abf +"\u0024"),_cf .MustCompile ("\u005e"+_aace +"\u0024")};_ddd =[]*_cf .Regexp {_cf .MustCompile ("\u005e"+_ebg +"\u0024"),_cf .MustCompile ("\u005e"+_dgb +"\u0024"),_cf .MustCompile ("\u005e"+_cfag +"\u0024"),_cf .MustCompile ("\u005e"+_acf +"\u0024")};};

// Reference returns a string reference value to a horizontal range.
func (_bcfd HorizontalRange )Reference (ctx Context ,ev Evaluator )Reference {return Reference {Type :ReferenceTypeHorizontalRange ,Value :_bcfd .horizontalRangeReference ()};};

// Error is an error expression.
type Error struct{_edf string };func _ebgg (_bcgaf string )string {_bcgaf =_bf .Replace (_bcgaf ,"\u000a","\u005c\u006e",-1);_bcgaf =_bf .Replace (_bcgaf ,"\u000d","\u005c\u0072",-1);_bcgaf =_bf .Replace (_bcgaf ,"\u0009","\u005c\u0074",-1);return _bcgaf ;};

// MakeNumberResult constructs a number result.
func MakeNumberResult (v float64 )Result {if v ==_fb .Copysign (0,-1){v =0;};return Result {Type :ResultTypeNumber ,ValueNumber :v };};

// CeilingMath implements _xlfn.CEILING.MATH which rounds numbers to the nearest
// multiple of the second argument, toward or away from zero as specified by the
// third argument.
func CeilingMath (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0043E\u0049\u004cI\u004e\u0047\u002eM\u0041\u0054\u0048\u0028\u0029\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073 \u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006f\u006ee\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if len (args )> 3{return MakeErrorResult ("\u0043E\u0049\u004cI\u004e\u0047\u002eM\u0041\u0054\u0048\u0028\u0029\u0020\u0061l\u006c\u006f\u0077\u0073\u0020\u0061t\u0020\u006d\u006f\u0073\u0074\u0020\u0074\u0068\u0072\u0065\u0065 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_abbc :=args [0].AsNumber ();if _abbc .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069\u0072\u0073\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0043\u0045\u0049\u004c\u0049\u004e\u0047\u002e\u004dA\u0054\u0048\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061 \u006eu\u006d\u0062\u0065\u0072");};_aadb :=float64 (1);if _abbc .ValueNumber < 0{_aadb =-1;};if len (args )> 1{_becfb :=args [1].AsNumber ();if _becfb .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f \u0043\u0045\u0049\u004c\u0049\u004e\u0047.\u004d\u0041\u0054\u0048\u0028\u0029\u0020\u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_aadb =_becfb .ValueNumber ;};_fcff :=float64 (1);if len (args )> 2{_bfaab :=args [2].AsNumber ();if _bfaab .Type !=ResultTypeNumber {return MakeErrorResult ("\u0074\u0068\u0069\u0072\u0064\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0043\u0045\u0049\u004c\u0049\u004e\u0047\u002e\u004dA\u0054\u0048\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061 \u006eu\u006d\u0062\u0065\u0072");};_fcff =_bfaab .ValueNumber ;};if len (args )==1{return MakeNumberResult (_fb .Ceil (_abbc .ValueNumber ));};_dgag :=_abbc .ValueNumber ;_dgag ,_cgaeb :=_fb .Modf (_dgag /_aadb );if _cgaeb !=0{if _abbc .ValueNumber > 0{_dgag ++;}else if _fcff < 0{_dgag --;};};return MakeNumberResult (_dgag *_aadb );};func init (){RegisterFunction ("\u0041\u0043\u0043\u0052\u0049\u004e\u0054\u004d",Accrintm );RegisterFunction ("\u0041M\u004f\u0052\u0044\u0045\u0047\u0052C",Amordegrc );RegisterFunction ("\u0041\u004d\u004f\u0052\u004c\u0049\u004e\u0043",Amorlinc );RegisterFunction ("\u0043O\u0055\u0050\u0044\u0041\u0059\u0042S",Coupdaybs );RegisterFunction ("\u0043\u004f\u0055\u0050\u0044\u0041\u0059\u0053",Coupdays );RegisterFunction ("\u0043\u004f\u0055\u0050\u0044\u0041\u0059\u0053\u004e\u0043",Coupdaysnc );RegisterFunction ("\u0043O\u0055\u0050\u004e\u0055\u004d",Coupnum );RegisterFunction ("\u0043O\u0055\u0050\u004e\u0043\u0044",Coupncd );RegisterFunction ("\u0043O\u0055\u0050\u0050\u0043\u0044",Couppcd );RegisterFunction ("\u0043U\u004d\u0049\u0050\u004d\u0054",Cumipmt );RegisterFunction ("\u0043\u0055\u004d\u0050\u0052\u0049\u004e\u0043",Cumprinc );RegisterFunction ("\u0044\u0042",Db );RegisterFunction ("\u0044\u0044\u0042",Ddb );RegisterFunction ("\u0044\u0049\u0053\u0043",Disc );RegisterFunction ("\u0044\u004f\u004c\u004c\u0041\u0052\u0044\u0045",Dollarde );RegisterFunction ("\u0044\u004f\u004c\u004c\u0041\u0052\u0046\u0052",Dollarfr );RegisterFunction ("\u0044\u0055\u0052\u0041\u0054\u0049\u004f\u004e",Duration );RegisterFunction ("\u0045\u0046\u0046\u0045\u0043\u0054",Effect );RegisterFunction ("\u0046\u0056",Fv );RegisterFunction ("\u0046\u0056\u0053\u0043\u0048\u0045\u0044\u0055\u004c\u0045",Fvschedule );RegisterFunction ("\u0049N\u0054\u0052\u0041\u0054\u0045",Intrate );RegisterFunction ("\u0049\u0050\u004d\u0054",Ipmt );RegisterFunction ("\u0049\u0052\u0052",Irr );RegisterFunction ("\u0049\u0053\u0050M\u0054",Ispmt );RegisterFunction ("\u004dD\u0055\u0052\u0041\u0054\u0049\u004fN",Mduration );RegisterFunction ("\u004d\u0049\u0052\u0052",Mirr );RegisterFunction ("\u004eO\u004d\u0049\u004e\u0041\u004c",Nominal );RegisterFunction ("\u004e\u0050\u0045\u0052",Nper );RegisterFunction ("\u004e\u0050\u0056",Npv );RegisterFunction ("\u004fD\u0044\u004c\u0050\u0052\u0049\u0043E",Oddlprice );RegisterFunction ("\u004fD\u0044\u004c\u0059\u0049\u0045\u004cD",Oddlyield );RegisterFunction ("\u0050D\u0055\u0052\u0041\u0054\u0049\u004fN",Pduration );RegisterFunction ("\u005fx\u006cf\u006e\u002e\u0050\u0044\u0055\u0052\u0041\u0054\u0049\u004f\u004e",Pduration );RegisterFunction ("\u0050\u004d\u0054",Pmt );RegisterFunction ("\u0050\u0050\u004d\u0054",Ppmt );RegisterFunction ("\u0050\u0052\u0049C\u0045",Price );RegisterFunction ("\u0050R\u0049\u0043\u0045\u0044\u0049\u0053C",Pricedisc );RegisterFunction ("\u0050\u0052\u0049\u0043\u0045\u004d\u0041\u0054",Pricemat );RegisterFunction ("\u0050\u0056",Pv );RegisterFunction ("\u0052\u0041\u0054\u0045",Rate );RegisterFunction ("\u0052\u0045\u0043\u0045\u0049\u0056\u0045\u0044",Received );RegisterFunction ("\u0052\u0052\u0049",Rri );RegisterFunction ("\u005fx\u006c\u0066\u006e\u002e\u0052\u0052I",Rri );RegisterFunction ("\u0053\u004c\u004e",Sln );RegisterFunction ("\u0053\u0059\u0044",Syd );RegisterFunction ("\u0054B\u0049\u004c\u004c\u0045\u0051",Tbilleq );RegisterFunction ("\u0054\u0042\u0049\u004c\u004c\u0050\u0052\u0049\u0043\u0045",Tbillprice );RegisterFunction ("\u0054\u0042\u0049\u004c\u004c\u0059\u0049\u0045\u004c\u0044",Tbillyield );RegisterFunction ("\u0056\u0044\u0042",Vdb );RegisterFunction ("\u0058\u0049\u0052\u0052",Xirr );RegisterFunction ("\u0058\u004e\u0050\u0056",Xnpv );RegisterFunction ("\u0059\u0049\u0045L\u0044",Yield );RegisterFunction ("\u0059I\u0045\u004c\u0044\u0044\u0049\u0053C",Yielddisc );RegisterFunction ("\u0059\u0049\u0045\u004c\u0044\u004d\u0041\u0054",Yieldmat );};

// Value is an implementation of the Excel VALUE function.
func Value (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0056\u0041\u004c\u0055\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020a\u0020s\u0069\u006e\u0067\u006c\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gbdgf :=args [0];if _gbdgf .Type ==ResultTypeNumber {return _gbdgf ;};if _gbdgf .Type ==ResultTypeString {_aaced ,_dedaad :=_ad .ParseFloat (_gbdgf .Value (),64);if _dedaad ==nil {return MakeNumberResult (_aaced );};};return MakeErrorResult ("\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u0056\u0041L\u0055\u0045");};

// Dollarde implements the Excel DOLLARDE function.
func Dollarde (args []Result )Result {_dgd ,_ecdd ,_fecb :=_cgdbd (args ,"\u0044\u004f\u004c\u004c\u0041\u0052\u0044\u0045");if _fecb .Type ==ResultTypeError {return _fecb ;};if _ecdd < 1{return MakeErrorResultType (ErrorTypeDivideByZero ,"\u0044\u004f\u004c\u004c\u0041\u0052\u0044\u0045\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0072a\u0063t\u0069\u006f\u006e\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u006f\u0072 \u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e\u0020\u0031");};if _dgd ==0{return MakeNumberResult (0);};_efdb :=_dgd < 0;if _efdb {_dgd =-_dgd ;};_aaedf :=args [0].Value ();_dcga :=_bf .Split (_aaedf ,"\u002e");_baaea :=float64 (int (_dgd ));_ede :=_dcga [1];_adf :=len (_ede );_bcg :=int (_fb .Log10 (_ecdd ))+1;_dbg :=float64 (_bcg -_adf );_cgfg ,_efda :=_ad .ParseFloat (_ede ,64);if _efda !=nil {return MakeErrorResult ("I\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0066\u006fr \u0044\u004f\u004cL\u0041R\u0044\u0045");};_cgfg *=_fb .Pow (10,_dbg );_cfgg :=_baaea +_cgfg /_ecdd ;if _efdb {_cfgg =-_cfgg ;};return MakeNumberResult (_cfgg );};

// Oddlyield implements the Excel ODDLYIELD function.
func Oddlyield (args []Result )Result {if len (args )!=7&&len (args )!=8{return MakeErrorResult ("\u004f\u0044\u0044\u004c\u0059\u0049\u0045L\u0044\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0073\u0065\u0076\u0065\u006e\u0020\u006f\u0072\u0020\u0065\u0069\u0067\u0068\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_edcg ,_fcfc ,_fbag :=_aaf (args [0],args [1],"\u004fD\u0044\u004c\u0059\u0049\u0045\u004cD");if _fbag .Type ==ResultTypeError {return _fbag ;};_defa ,_fbag :=_ddg (args [2],"\u0069\u0073\u0073\u0075\u0065\u0020\u0064\u0061\u0074\u0065","\u004fD\u0044\u004c\u0050\u0052\u0049\u0043E");if _fbag .Type ==ResultTypeError {return _fbag ;};if _defa >=_edcg {return MakeErrorResultType (ErrorTypeNum ,"\u004c\u0061\u0073\u0074\u0020i\u006e\u0074\u0065\u0072\u0065\u0073\u0074\u0020\u0064\u0061\u0074\u0065\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0062\u0065\u0066\u006f\u0072\u0065\u0020\u0073\u0065\u0074\u0074\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0064\u0061\u0074e");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0044\u0044\u004c\u0059\u0049\u0045\u004c\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020o\u0066\u0020\u0074\u0079\u0070e\u0020\u006eu\u006d\u0062\u0065\u0072");};_gega :=args [3].ValueNumber ;if _gega < 0{return MakeErrorResultType (ErrorTypeNum ,"R\u0061\u0074\u0065\u0020\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u006e\u006fn\u0020\u006e\u0065g\u0061t\u0069\u0076\u0065");};if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("O\u0044\u0044\u004c\u0059\u0049\u0045\u004c\u0044\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073 p\u0072\u0065\u0073\u0065n\u0074\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006ff \u0074\u0079p\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_fcab :=args [4].ValueNumber ;if _fcab <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0073h\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [5].Type !=ResultTypeNumber {return MakeErrorResult ("\u004fD\u0044\u004cY\u0049\u0045\u004c\u0044 \u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0064\u0065mp\u0074\u0069\u006fn\u0020\u006ff\u0020\u0074\u0079\u0070\u0065\u0020n\u0075\u006db\u0065\u0072");};_aabg :=args [5].ValueNumber ;if _aabg < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0059\u0069\u0065\u006cd\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065 \u006eo\u006e\u0020\u006e\u0065\u0067\u0061\u0074i\u0076\u0065");};if args [6].Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0044\u0044\u004c\u0059\u0049\u0045L\u0044\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0066\u0072\u0065\u0071\u0075\u0065\u006e\u0063\u0079\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_dccb :=float64 (int (args [6].ValueNumber ));if !_dcdd (_dccb ){return MakeErrorResultType (ErrorTypeNum ,"\u0049n\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0066\u0072e\u0071u\u0065n\u0063\u0065\u0020\u0076\u0061\u006c\u0075e");};_affg :=0;if len (args )==8&&args [7].Type !=ResultTypeEmpty {if args [7].Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0044\u0044\u004c\u0059\u0049\u0045\u004c\u0044\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0062a\u0073\u0069\u0073\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006eu\u006d\u0062\u0065\u0072");};_affg =int (args [7].ValueNumber );if !_fdgc (_affg ){return MakeErrorResultType (ErrorTypeNum ,"I\u006e\u0063\u006f\u0072\u0072\u0065c\u0074\u0020\u0062\u0061\u0073\u0069s\u0020\u0076\u0061\u006c\u0075\u0065\u0020f\u006f\u0072\u0020\u004f\u0044\u0044\u004c\u0059\u0049\u0045L\u0044");};};_fdd ,_fbag :=_gbab (_defa ,_fcfc ,_affg );if _fbag .Type ==ResultTypeError {return _fbag ;};_fdd *=_dccb ;_gbed ,_fbag :=_gbab (_edcg ,_fcfc ,_affg );if _fbag .Type ==ResultTypeError {return _fbag ;};_gbed *=_dccb ;_fbfge ,_fbag :=_gbab (_defa ,_edcg ,_affg );if _fbag .Type ==ResultTypeError {return _fbag ;};_fbfge *=_dccb ;_acfa :=_aabg +_fdd *100*_gega /_dccb ;_acfa /=_fcab +_fbfge *100*_gega /_dccb ;_acfa --;_acfa *=_dccb /_gbed ;return MakeNumberResult (_acfa );};

// Price implements the Excel PRICE function.
func Price (args []Result )Result {_ebad :=len (args );if _ebad !=6&&_ebad !=7{return MakeErrorResult ("\u0050\u0052I\u0043\u0045\u0020\u0072e\u0071\u0075i\u0072\u0065\u0073\u0020\u0073\u0069\u0078\u0020o\u0072\u0020\u0073\u0065\u0076\u0065\u006e\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_adfc ,_ceb ,_ddag :=_aaf (args [0],args [1],"\u0050\u0052\u0049C\u0045");if _ddag .Type ==ResultTypeError {return _ddag ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0052\u0049CE\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0072a\u0074e\u0020o\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_eabf :=args [2].ValueNumber ;if _eabf < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u006eo\u0074\u0020\u0062\u0065\u0020n\u0065\u0067a\u0074\u0069\u0076\u0065");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("P\u0052\u0049\u0043\u0045\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073 \u0079\u0069\u0065\u006c\u0064\u0020\u006ff\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072");};_gfb :=args [3].ValueNumber ;if _gfb < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0079\u0069\u0065\u006c\u0064 \u0074\u006f\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0065\u0067a\u0074\u0069\u0076\u0065");};if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("P\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0072\u0065\u0064em\u0070\u0074\u0069\u006fn\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075mb\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_afdgd :=args [4].ValueNumber ;if _afdgd <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0052\u0049\u0043\u0045\u0020r\u0065\u0071\u0075i\u0072\u0065\u0073 \u0072\u0065\u0064\u0065\u006d\u0070\u0074\u0069\u006f\u006e \u0074\u006f\u0020\u0062\u0065 p\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dgda :=args [5];if _dgda .Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0066\u0072\u0065\u0071\u0075e\u006e\u0063\u0079\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006eu\u006d\u0062\u0065\u0072");};_ebede :=_dgda .ValueNumber ;if !_dcdd (_ebede ){return MakeErrorResultType (ErrorTypeNum ,"\u0049n\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0066\u0072e\u0071u\u0065n\u0063\u0065\u0020\u0076\u0061\u006c\u0075e");};_bacbb :=0;if _ebad ==7&&args [6].Type !=ResultTypeEmpty {if args [6].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0052\u0049C\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0062\u0061\u0073\u0069\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bacbb =int (args [6].ValueNumber );if !_fdgc (_bacbb ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063or\u0072\u0065\u0063\u0074\u0020\u0062\u0061\u0073\u0069s\u0020a\u0072g\u0075m\u0065\u006e\u0074\u0020\u0066\u006f\u0072\u0020\u0050\u0052\u0049\u0043\u0045");};};_gdec ,_ddag :=_ggea (_adfc ,_ceb ,_eabf ,_gfb ,_afdgd ,_ebede ,_bacbb );if _ddag .Type ==ResultTypeError {return _ddag ;};return MakeNumberResult (_gdec );};const _fafc =57365;

// String returns a string representation of SheetPrefixExpr.
func (_bccaaf SheetPrefixExpr )String ()string {return _bccaaf ._eaabc };

// Amorlinc implements the Excel AMORLINC function.
func Amorlinc (args []Result )Result {_dcf ,_faab :=_aca (args ,"\u0041\u004d\u004f\u0052\u004c\u0049\u004e\u0043");if _faab .Type ==ResultTypeError {return _faab ;};_daed :=_dcf ._ecd ;_edfdg :=_dcf ._gggf ;_afag :=_dcf ._bedb ;_ffcf :=_dcf ._bcda ;_def :=_dcf ._eccd ;_gge :=_dcf ._cag ;_ebgc :=_dcf ._aaa ;_geed ,_fdgb :=_gbab (_edfdg ,_afag ,_ebgc );if _fdgb .Type ==ResultTypeError {return MakeErrorResult ("\u0069\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0064\u0061\u0074\u0065\u0073 \u0066o\u0072\u0020\u0041\u004d\u004f\u0052\u004cI\u004e\u0043");};_cbbd :=_geed *_gge *_daed ;if _def ==0{return MakeNumberResult (_cbbd );};_caeg :=_daed *_gge ;_bbad :=_daed -_ffcf ;_egga :=int ((_bbad -_cbbd )/_caeg );if _def <=_egga {return MakeNumberResult (_caeg );}else if _def ==_egga +1{return MakeNumberResult (_bbad -_caeg *float64 (_egga )-_cbbd );}else {return MakeNumberResult (0);};};func _cfc (_cefc string ,_ccf *_aac .UpdateQuery )string {_bfc ,_ef :=_d .ParseCellReference (_cefc );if _ef !=nil {return "\u0023\u0052\u0045F\u0021";};if _ccf .UpdateType ==_aac .UpdateActionRemoveColumn {_ac :=_ccf .ColumnIdx ;_baf :=_bfc .ColumnIdx ;if _baf < _ac {return _cefc ;}else if _baf ==_ac {return "\u0023\u0052\u0045F\u0021";}else {return _bfc .Update (_aac .UpdateActionRemoveColumn ).String ();};};return _cefc ;};

// Cumipmt implements the Excel CUMIPMT function.
func Cumipmt (args []Result )Result {_dagg ,_bddd :=_geaf (args ,"\u0043U\u004d\u0049\u0050\u004d\u0054");if _bddd .Type ==ResultTypeError {return _bddd ;};_egef :=_dagg ._abb ;_dfaab :=_dagg ._aece ;_bgcf :=_dagg ._dccd ;_ffce :=_dagg ._bfdba ;_fbbe :=_dagg ._fgb ;_aaea :=_dagg ._ceca ;_bede :=_gegf (_egef ,_dfaab ,_bgcf ,0,_aaea );_beef :=0.0;if _ffce ==1{if _aaea ==0{_beef =-_bgcf ;_ffce ++;};};for _gfga :=_ffce ;_gfga <=_fbbe ;_gfga ++{if _aaea ==1{_beef +=_ccaf (_egef ,_gfga -2,_bede ,_bgcf ,1)-_bede ;}else {_beef +=_ccaf (_egef ,_gfga -1,_bede ,_bgcf ,0);};};_beef *=_egef ;return MakeNumberResult (_beef );};

// Update updates references in the Negate after removing a row/column.
func (_fgcfg Negate )Update (q *_aac .UpdateQuery )Expression {return Negate {_efbc :_fgcfg ._efbc .Update (q )};};var _fded =[]ri {{1000,"\u004d"},{995,"\u0056\u004d"},{990,"\u0058\u004d"},{950,"\u004c\u004d"},{900,"\u0043\u004d"},{500,"\u0044"},{495,"\u0056\u0044"},{490,"\u0058\u0044"},{450,"\u004c\u0044"},{400,"\u0043\u0044"},{100,"\u0043"},{99,"\u0049\u0043"},{90,"\u0058\u0043"},{50,"\u004c"},{45,"\u0056\u004c"},{40,"\u0058\u004c"},{10,"\u0058"},{9,"\u0049\u0058"},{5,"\u0056"},{4,"\u0049\u0056"},{1,"\u0049"}};

// Arabic implements the Excel ARABIC function which parses roman numerals.  It
// accepts one numeric argument.
func Arabic (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0041\u0052\u0041\u0042I\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u006fn\u0065\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_dbdb :=args [0];switch _dbdb .Type {case ResultTypeNumber ,ResultTypeList ,ResultTypeEmpty :return MakeErrorResult ("\u0041\u0052\u0041B\u0049\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");case ResultTypeString :_dfcd :=0.0;_fcca :=0.0;for _ ,_dbfaa :=range _dbdb .ValueString {_fbbf :=0.0;switch _dbfaa {case 'I':_fbbf =1;case 'V':_fbbf =5;case 'X':_fbbf =10;case 'L':_fbbf =50;case 'C':_fbbf =100;case 'D':_fbbf =500;case 'M':_fbbf =1000;};_dfcd +=_fbbf ;switch {case _fcca ==_fbbf &&(_fcca ==5||_fcca ==50||_fcca ==500):return MakeErrorResult ("i\u006e\u0076\u0061\u006cid\u0020A\u0052\u0041\u0042\u0049\u0043 \u0066\u006f\u0072\u006d\u0061\u0074");case 2*_fcca ==_fbbf :return MakeErrorResult ("i\u006e\u0076\u0061\u006cid\u0020A\u0052\u0041\u0042\u0049\u0043 \u0066\u006f\u0072\u006d\u0061\u0074");};if _fcca < _fbbf {_dfcd -=2*_fcca ;};_fcca =_fbbf ;};return MakeNumberResult (_dfcd );case ResultTypeError :return _dbdb ;default:return MakeErrorResult (_c .Sprintf ("\u0075\u006e\u0068an\u0064\u006c\u0065\u0064\u0020\u0041\u0043\u004f\u0053H\u0028)\u0020a\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_dbdb .Type ));};};

// Eval evaluates and returns the result of a sheet expression.
func (_cbacf SheetPrefixExpr )Eval (ctx Context ,ev Evaluator )Result {return MakeErrorResult ("\u0073\u0068\u0065\u0065\u0074\u0020\u0070\u0072\u0065\u0066\u0069\u0078\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065r\u0020\u0062\u0065\u0020\u0065v\u0061\u006cu\u0061\u0074\u0065\u0064");};

// Counta implements the COUNTA function.
func Counta (args []Result )Result {return MakeNumberResult (_cgeb (args ,_bcadd ))};

// ISTEXT is an implementation of the Excel ISTEXT() function.
func IsText (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053\u0054EX\u0054\u0028\u0029\u0020\u0061\u0063\u0063\u0065\u0070t\u0073 \u0061 \u0073i\u006e\u0067\u006c\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};return MakeBoolResult (args [0].Type ==ResultTypeString );};const _aafef =57351;

// CeilingPrecise is an implementation of the CEILING.PRECISE function which
// returns the ceiling of a number.
func CeilingPrecise (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0043\u0045\u0049\u004c\u0049\u004e\u0047\u002eP\u0052\u0045\u0043IS\u0045\u0028\u0029\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020o\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};if len (args )> 2{return MakeErrorResult ("\u0043\u0045I\u004c\u0049\u004e\u0047\u002e\u0050\u0052\u0045\u0043\u0049\u0053\u0045\u0028\u0029\u0020\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0074\u0020\u006d\u006f\u0073\u0074\u0020\u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_adeca :=args [0].AsNumber ();if _adeca .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069r\u0073\u0074\u0020\u0061\u0072g\u0075\u006d\u0065\u006e\u0074 \u0074\u006f\u0020\u0043\u0045\u0049\u004c\u0049\u004e\u0047\u002e\u0050\u0052\u0045\u0043\u0049\u0053\u0045\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_ecdbc :=float64 (1);if _adeca .ValueNumber < 0{_ecdbc =-1;};if len (args )> 1{_feddga :=args [1].AsNumber ();if _feddga .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0043E\u0049L\u0049\u004e\u0047\u002e\u0050\u0052\u0045\u0043\u0049\u0053\u0045\u0028\u0029\u0020\u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_ecdbc =_fb .Abs (_feddga .ValueNumber );};if len (args )==1{return MakeNumberResult (_fb .Ceil (_adeca .ValueNumber ));};_caagb :=_adeca .ValueNumber ;_caagb ,_bbec :=_fb .Modf (_caagb /_ecdbc );if _bbec !=0{if _adeca .ValueNumber > 0{_caagb ++;};};return MakeNumberResult (_caagb *_ecdbc );};func (_eage *noCache )SetCache (key string ,value Result ){};

// String returns a string representation of Number.
func (_cbdgf Number )String ()string {return _ad .FormatFloat (_cbdgf ._adbe ,'f',-1,64)};

// Rate implements the Excel RATE function.
func Rate (args []Result )Result {_caab :=len (args );if _caab < 3||_caab > 6{return MakeErrorResult ("\u0052\u0041\u0054\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006f\u0066\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u006f\u0066\u0020\u0074\u0068\u0072\u0065\u0065 \u0061\u006e\u0064\u0020\u0073i\u0078");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0041\u0054\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006ff\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cgda :=args [0].ValueNumber ;if _cgda !=float64 (int (_cgda )){return MakeErrorResultType (ErrorTypeNum ,"R\u0041\u0054\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0065\u0072i\u006fd\u0073\u0020\u0074\u006f \u0062\u0065 \u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0041\u0054\u0045\u0020\u0072\u0065q\u0075\u0069\u0072e\u0073\u0020\u0070\u0061y\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gbda :=args [1].ValueNumber ;if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0041\u0054\u0045\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0020\u0076\u0061\u006c\u0075\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_dcgf :=args [2].ValueNumber ;_fdafac :=0.0;if _caab >=4&&args [3].Type !=ResultTypeEmpty {if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0041\u0054\u0045\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s \u0066\u0075\u0074\u0075\u0072\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_fdafac =args [3].ValueNumber ;};_feff :=0.0;if _caab >=5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("R\u0041\u0054\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0079\u0070\u0065\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_feff =args [4].ValueNumber ;if _feff !=0{_feff =1;};};_bdbc :=0.1;if _caab >=6&&args [5].Type !=ResultTypeEmpty {if args [5].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0041\u0054\u0045\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0067\u0075\u0065\u0073\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bdbc =args [5].ValueNumber ;};_edcd :=100;_gdcc :=0;_aeagc :=false ;_agcg :=1e-6;_bdec :=_bdbc ;for _gdcc < _edcd &&!_aeagc {_gbefgb :=_fb .Pow (_bdec +1,_cgda );_ecca :=_fb .Pow (_bdec +1,_cgda -1);_eedf :=_bdec *_feff +1;_egbg :=_gbda *(_gbefgb -1);_ecfdd :=_fdafac +_gbefgb *_dcgf +_egbg *_eedf /_bdec ;_cgaa :=_cgda *_ecca *_dcgf -_egbg *_eedf /_fb .Pow (_bdec ,2);_dede :=(_cgda *_gbda *_ecca *_eedf +_egbg *_feff )/_bdec ;_gdeb :=_ecfdd /(_cgaa +_dede );if _fb .Abs (_gdeb )< _agcg {_aeagc =true ;};_gdcc ++;_bdec -=_gdeb ;};return MakeNumberResult (_bdec );};

// Ppmt implements the Excel PPPMT function.
func Ppmt (args []Result )Result {_gbac :=len (args );if _gbac < 4||_gbac > 6{return MakeErrorResult ("\u0050\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006f\u0066\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074\u0073\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u006ff\u0020\u0066\u006f\u0075\u0072\u0020a\u006e\u0064\u0020s\u0069\u0078");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("P\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_bcac :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0050\u004dT\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_eebe :=args [1].ValueNumber ;if _eebe <=0{return MakeErrorResultType (ErrorTypeNum ,"P\u0050\u004d\u0054\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020p\u0065\u0072\u0069\u006f\u0064\u0020\u0074o\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069v\u0065");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006ff\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_beafa :=args [2].ValueNumber ;if _beafa < _eebe {return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006f\u0066\u0020\u0070\u0065\u0072\u0069\u006f\u0064s\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u0074\u0020\u006c\u0065s\u0073\u0020\u0074\u0068\u0061\u006e \u0070\u0065\u0072i\u006f\u0064");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0050\u004d\u0054\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0020\u0076\u0061\u006c\u0075\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_cfec :=args [3].ValueNumber ;_ffeb :=0.0;if _gbac >=5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0050\u004d\u0054\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s \u0066\u0075\u0074\u0075\u0072\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_ffeb =args [4].ValueNumber ;};_gggfc :=0;if _gbac ==6&&args [5].Type !=ResultTypeEmpty {if args [5].Type !=ResultTypeNumber {return MakeErrorResult ("P\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0079\u0070\u0065\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_gggfc =int (args [5].ValueNumber );if _gggfc !=0{_gggfc =1;};};return MakeNumberResult (_gegf (_bcac ,_beafa ,_cfec ,_ffeb ,_gggfc )-_fbc (_bcac ,_eebe ,_beafa ,_cfec ,_ffeb ,_gggfc ));};const _fade =57377;

// Xnpv implements the Excel XNPV function.
func Xnpv (args []Result )Result {if len (args )!=3{return MakeErrorResult ("\u0058\u004eP\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006den\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("X\u004e\u0050\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_abcg :=args [0].ValueNumber ;if _abcg <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0058\u004e\u0050\u0056\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020\u0074o\u0020\u0062\u0065\u0020\u0070\u006f\u0073i\u0074\u0069\u0076\u0065");};_fdeca ,_agfba :=_ccfg (args [1],args [2],"\u0058\u004e\u0050\u0056");if _agfba .Type ==ResultTypeError {return _agfba ;};_gdfge :=_fdeca ._becaf ;_eeaf :=_fdeca ._bbcf ;_efec :=0.0;_cff :=_eeaf [0];for _ebfge ,_gbce :=range _gdfge {_efec +=_gbce /_fb .Pow (1+_abcg ,(_eeaf [_ebfge ]-_cff )/365);};return MakeNumberResult (_efec );};

// Couppcd implements the Excel COUPPCD function.
func Couppcd (args []Result )Result {_effc ,_acbc :=_ced (args ,"\u0043O\u0055\u0050\u0050\u0043\u0044");if _acbc .Type ==ResultTypeError {return _acbc ;};_addf :=_edgb (_effc ._ebbf );_cbbf :=_edgb (_effc ._fee );_gbf :=_effc ._fea ;_dgfd :=_effc ._ffba ;_fgc :=_gdce (_addf ,_cbbf ,_gbf ,_dgfd );_ceae ,_cgfb ,_dge :=_fgc .Date ();return MakeNumberResult (_ebe (_ceae ,int (_cgfb ),_dge ));};

// Proper is an implementation of the Excel PROPER function that returns a copy
// of the string with each word capitalized.
func Proper (args []Result )Result {if len (args )!=1{return MakeErrorResult ("P\u0052\u004f\u0050\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073i\u006e\u0067\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006eg \u0061\u0072\u0067u\u006de\u006e\u0074");};_cabb :=args [0].AsString ();if _cabb .Type !=ResultTypeString {return MakeErrorResult ("P\u0052\u004f\u0050\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073i\u006e\u0067\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006eg \u0061\u0072\u0067u\u006de\u006e\u0074");};_geggcc :=_fd .Buffer {};_gaaa :=false ;for _ ,_gbga :=range _cabb .ValueString {if !_gaaa &&_aa .IsLetter (_gbga ){_geggcc .WriteRune (_aa .ToUpper (_gbga ));}else {_geggcc .WriteRune (_aa .ToLower (_gbga ));};_gaaa =_aa .IsLetter (_gbga );};return MakeStringResult (_geggcc .String ());};

// IsLeapYear is an implementation of the Excel ISLEAPYEAR() function.
func IsLeapYear (ctx Context ,ev Evaluator ,args []Result )Result {if len (args )!=1||args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049S\u004c\u0045A\u0050\u0059\u0045\u0041R\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073in\u0067\u006c\u0065 \u006e\u0075m\u0062\u0065\u0072\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};_acbe :=ctx .GetEpoch ();_dacd ,_eaagdb :=_bcfge (args [0].Value (),_acbe );if _eaagdb !=nil {return MakeErrorResult ("\u0049S\u004c\u0045A\u0050\u0059\u0045\u0041R\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073in\u0067\u006c\u0065 \u006e\u0075m\u0062\u0065\u0072\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};_facfa :=_dacd .Year ();return MakeBoolResult (_gda (_facfa ));};

// NewVerticalRange constructs a new full columns range.
func NewVerticalRange (v string )Expression {_fegfg :=_bf .Split (v ,"\u003a");if len (_fegfg )!=2{return nil ;};if _fegfg [0]> _fegfg [1]{_fegfg [0],_fegfg [1]=_fegfg [1],_fegfg [0];};return VerticalRange {_caafg :_fegfg [0],_beege :_fegfg [1]};};const _cbccg =57375;const _dfcb =86400000000000;var _cgdc =[...]int {0,-2,1,2,0,0,0,0,11,12,13,14,0,16,5,6,7,8,22,0,24,46,0,26,25,29,30,31,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,18,20,9,10,0,0,23,32,33,47,0,49,51,34,35,36,37,38,39,40,41,42,43,44,45,0,17,0,0,15,27,0,48,53,4,19,21,28,50,52};

// Round is an implementation of the Excel ROUND function that rounds a number
// to a specified number of digits.
func Round (args []Result )Result {return _gfdf (args ,_ggfc )};

// Month is an implementation of the Excel MONTH() function.
func Month (args []Result )Result {if len (args )!=1{return MakeErrorResult ("M\u004f\u004e\u0054\u0048\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006f\u006ee\u0020\u0061\u0072g\u0075m\u0065\u006e\u0074");};_fec :=args [0];switch _fec .Type {case ResultTypeEmpty :return MakeNumberResult (1);case ResultTypeNumber :_ebf :=_edgb (_fec .ValueNumber );return MakeNumberResult (float64 (_ebf .Month ()));case ResultTypeString :_gfde :=_bf .ToLower (_fec .ValueString );if !_gbc (_gfde ){_ ,_ ,_ ,_ ,_cdbf ,_bfbd :=_fgad (_gfde );if _bfbd .Type ==ResultTypeError {_bfbd .ErrorMessage ="\u0049\u006ec\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006f\u0072\u0020\u004dON\u0054\u0048";return _bfbd ;};if _cdbf {return MakeNumberResult (1);};};_ ,_bddg ,_ ,_ ,_cgfa :=_cfbgc (_gfde );if _cgfa .Type ==ResultTypeError {return _cgfa ;};return MakeNumberResult (float64 (_bddg ));default:return MakeErrorResult ("\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u004d\u004fN\u0054\u0048");};};

// Log implements the Excel LOG function which returns the log of a number. By
// default the result is base 10, however the second argument to the function
// can specify a different base.
func Log (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u004cO\u0047\u0028)\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074 o\u006e\u0065\u0020n\u0075\u006de\u0072\u0069\u0063\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};if len (args )> 2{return MakeErrorResult ("L\u004f\u0047\u0028\u0029\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u006d\u0061\u0078i\u006d\u0075\u006d\u0020\u006f\u0066\u0020\u0074\u0077\u006f a\u0072\u0067\u0075m\u0065n\u0074\u0073");};_ccfc :=args [0].AsNumber ();if _ccfc .Type !=ResultTypeNumber {return MakeErrorResult ("\u004cO\u0047\u0028)\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074 o\u006e\u0065\u0020n\u0075\u006de\u0072\u0069\u0063\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};_eadb :=10.0;if len (args )> 1{_bdbb :=args [1].AsNumber ();if _bdbb .Type !=ResultTypeNumber {return MakeErrorResult ("\u004cO\u0047\u0028)\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061rg\u0075\u006d\u0065n\u0074\u0020t\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0065r\u0069\u0063");};_eadb =args [1].ValueNumber ;};if _ccfc .ValueNumber ==0{return MakeErrorResult ("\u004cO\u0047\u0028)\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0061\u0072gu\u006d\u0065\u006et\u0020\u0074o\u0020\u0062\u0065\u0020\u006e\u006fn\u002d\u007ae\u0072\u006f");};if _eadb ==0{return MakeErrorResult ("\u004cO\u0047\u0028)\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0073e\u0063\u006f\u006e\u0064\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062e\u0020\u006e\u006f\u006e\u002d\u007a\u0065\u0072\u006f");};return MakeNumberResult (_fb .Log (_ccfc .ValueNumber )/_fb .Log (_eadb ));};

// FactDouble is an implementation of the excel FACTDOUBLE function which
// returns the double factorial of a positive numeric input.
func FactDouble (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0046\u0041C\u0054\u0044\u004f\u0055\u0042\u004c\u0045\u0028\u0029\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_acfag :=args [0].AsNumber ();if _acfag .Type !=ResultTypeNumber {return MakeErrorResult ("\u0046\u0041C\u0054\u0044\u004f\u0055\u0042\u004c\u0045\u0028\u0029\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if _acfag .ValueNumber < 0{return MakeErrorResult ("\u0046A\u0043\u0054D\u004f\u0055\u0042\u004cE\u0028\u0029\u0020a\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u006f\u006ely\u0020\u0070\u006fs\u0069\u0074i\u0076\u0065\u0020\u0061\u0072\u0067u\u006d\u0065n\u0074\u0073");};_ffadf :=float64 (1);_bbde :=_fb .Trunc (_acfag .ValueNumber );for _bccc :=_bbde ;_bccc > 1;_bccc -=2{_ffadf *=_bccc ;};return MakeNumberResult (_ffadf );};const _dedfa =187;var (_fbeb =0;_bcade =false ;);const _fefb int =0;func _cfbgc (_ffb string )(int ,int ,int ,bool ,Result ){_dda :="";_aae :=[]string {};for _egg ,_bb :=range _ceeg {_aae =_bb .FindStringSubmatch (_ffb );if len (_aae )> 1{_dda =_egg ;break ;};};if _dda ==""{return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_afc );};_gee :=false ;var _acd ,_bacb ,_cab int ;var _fbfd error ;switch _dda {case "\u006d\u006d\u002f\u0064\u0064\u002f\u0079\u0079":_bacb ,_fbfd =_ad .Atoi (_aae [1]);if _fbfd !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_afc );};_cab ,_fbfd =_ad .Atoi (_aae [3]);if _fbfd !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_afc );};_acd ,_fbfd =_ad .Atoi (_aae [5]);if _fbfd !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_afc );};if _acd < 0||_acd > 9999||(_acd > 99&&_acd < 1900){return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_afc );};_acd =_afed (_acd );_gee =_aae [8]=="";case "\u006dm\u0020\u0064\u0064\u002c\u0020\u0079y":_bacb =_gad [_aae [1]];_cab ,_fbfd =_ad .Atoi (_aae [14]);if _fbfd !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_afc );};_acd ,_fbfd =_ad .Atoi (_aae [16]);if _fbfd !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_afc );};if _acd < 0||_acd > 9999||(_acd > 99&&_acd < 1900){return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_afc );};_acd =_afed (_acd );_gee =_aae [19]=="";case "\u0079\u0079\u002d\u006d\u006d\u002d\u0064\u0064":_befd ,_eggd :=_ad .Atoi (_aae [1]);if _eggd !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_afc );};_dga ,_eggd :=_ad .Atoi (_aae [3]);if _eggd !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_afc );};_cbda ,_eggd :=_ad .Atoi (_aae [5]);if _eggd !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_afc );};if _befd >=1900&&_befd < 10000{_acd =_befd ;_bacb =_dga ;_cab =_cbda ;}else if _befd > 0&&_befd < 13{_bacb =_befd ;_cab =_dga ;_acd =_cbda ;}else {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_afc );};_gee =_aae [8]=="";case "y\u0079\u002d\u006d\u006d\u0053\u0074\u0072\u002d\u0064\u0064":_acd ,_fbfd =_ad .Atoi (_aae [16]);if _fbfd !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_afc );};_bacb =_gad [_aae [3]];_cab ,_fbfd =_ad .Atoi (_aae [1]);if _fbfd !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_afc );};_gee =_aae [19]=="";};if !_bgg (_acd ,_bacb ,_cab ){return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_afc );};return _acd ,_bacb ,_cab ,_gee ,_fbee ;};func (_bfge tokenType )String ()string {return _eabb (int (_bfge ))};var _cfb int64 =_cfga (1900,_bd .January ,1);

// Exact is an implementation of the Excel EXACT() which compares two strings.
func Exact (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0043\u004f\u004e\u0043\u0041\u0054\u0045N\u0041\u0054\u0045(\u0029\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_afcf :=args [0].AsString ();_bdfe :=args [1].AsString ();if _afcf .Type !=ResultTypeString ||_bdfe .Type !=ResultTypeString {return MakeErrorResult ("\u0043\u004f\u004e\u0043\u0041\u0054\u0045N\u0041\u0054\u0045(\u0029\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};return MakeBoolResult (_afcf .ValueString ==_bdfe .ValueString );};

// Search is an implementation of the Excel SEARCH().
func Search (args []Result )Result {_abcdg ,_aagfb :=_cace ("\u0046\u0049\u004e\u0044",args );if _aagfb .Type !=ResultTypeEmpty {return _aagfb ;};_ddca :=_bf .ToLower (_abcdg ._ebdbd );if _ddca ==""{return MakeNumberResult (1.0);};_cdabe :=_bf .ToLower (_abcdg ._eegd );_ddeb :=_abcdg ._edfc ;_ccfgg :=1;for _aceg :=range _cdabe {if _ccfgg < _ddeb {_ccfgg ++;continue ;};_agce :=_bc .Index (_ddca ,_cdabe [_aceg :]);if _agce ==0{return MakeNumberResult (float64 (_ccfgg ));};_ccfgg ++;};return MakeErrorResultType (ErrorTypeValue ,"\u004eo\u0074\u0020\u0066\u006f\u0075\u006ed");};

// Radians is an implementation of the Excel function RADIANS() that converts
// degrees to radians.
func Radians (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0052\u0041\u0044I\u0041\u004e\u0053\u0028)\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_acfe :=args [0].AsNumber ();if _acfe .Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0041\u0044IA\u004e\u0053\u0028\u0029\u0020\u0072\u0065\u0071\u0075i\u0072e\u0073 \u006eu\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};return MakeNumberResult (_fb .Pi /180.0*_acfe .ValueNumber );};func _bceb (_eegfg ,_bgab ,_bcbd ,_ccba ,_efcg ,_gcff float64 )float64 {var _eebb ,_gabed float64 ;_cgfc :=0.0;_caaca :=_fb .Ceil (_efcg );_eeabf :=_eegfg -_bgab ;_bggd :=false ;_daeb :=0.0;for _acef :=1.0;_acef <=_caaca ;_acef ++{if !_bggd {_eebb =_cedbg (_eegfg ,_bgab ,_bcbd ,_acef ,_gcff );_daeb =_eeabf /(_bcbd -_acef +1);if _daeb > _eebb {_gabed =_daeb ;_bggd =true ;}else {_gabed =_eebb ;_eeabf -=_eebb ;};}else {_gabed =_daeb ;};if _acef ==_caaca {_gabed *=_efcg +1-_caaca ;};_cgfc +=_gabed ;};return _cgfc ;};func Trunc (args []Result )Result {if len (args )==0{return MakeErrorResult ("T\u0052\u0055\u004e\u0043\u0028\u0029\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0061t \u006c\u0065\u0061\u0073t\u0020\u006f\u006e\u0065\u0020\u006e\u0075\u006d\u0065ri\u0063\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_cbdf :=args [0].AsNumber ();if _cbdf .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069\u0072s\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0054\u0052\u0055\u004e\u0043\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_gfba :=float64 (0);if len (args )> 1{_dfcca :=args [1].AsNumber ();if _dfcca .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063\u006f\u006e\u0064\u0020a\u0072\u0067\u0075m\u0065\u006e\u0074\u0020t\u006f\u0020\u0054\u0052\u0055\u004e\u0043\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_gfba =_dfcca .ValueNumber ;};_cdbcg :=_cbdf .ValueNumber ;_eaeac :=1.0;if _gfba >=0{_eaeac =_fb .Pow (1/10.0,_gfba );}else {return MakeNumberResult (0);};_cdbcg ,_aeada :=_fb .Modf (_cdbcg /_eaeac );_dedcg :=0.99999;if _aeada > _dedcg {_cdbcg ++;}else if _aeada < -_dedcg {_cdbcg --;};_ =_aeada ;return MakeNumberResult (_cdbcg *_eaeac );};

// RandBetween is an implementation of the Excel RANDBETWEEN() function that returns a random
// integer in the range specified.
func RandBetween (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0052A\u004e\u0044B\u0045\u0054\u0057\u0045E\u004e\u0028\u0029 \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020tw\u006f\u0020\u006eu\u006d\u0065r\u0069\u0063\u0020\u0061\u0072\u0067u\u006d\u0065n\u0074\u0073");};_bdgdg :=args [0].AsNumber ();_ecee :=args [1].AsNumber ();if _bdgdg .Type !=ResultTypeNumber ||_ecee .Type !=ResultTypeNumber {return MakeErrorResult ("\u0052A\u004e\u0044B\u0045\u0054\u0057\u0045E\u004e\u0028\u0029 \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020tw\u006f\u0020\u006eu\u006d\u0065r\u0069\u0063\u0020\u0061\u0072\u0067u\u006d\u0065n\u0074\u0073");};if _ecee .ValueNumber < _bdgdg .ValueNumber {return MakeErrorResult ("\u0052\u0041\u004e\u0044\u0042E\u0054\u0057\u0045\u0045\u004e\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006c\u0061\u0072\u0067\u0065r");};_cbbce :=int64 (_bdgdg .ValueNumber );_babg :=int64 (_ecee .ValueNumber );return MakeNumberResult (float64 (_geede .Int63n (_babg -_cbbce +1)+_cbbce ));};

// Ddb implements the Excel DDB function.
func Ddb (args []Result )Result {_gdceg :=len (args );if _gdceg !=4&&_gdceg !=5{return MakeErrorResult ("\u0044\u0044\u0042 \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u006f\u0075\u0072\u0020\u006f\u0072\u0020\u0066\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020c\u006f\u0073\u0074\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_fgga :=args [0].ValueNumber ;if _fgga < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0044B \u0072\u0065\u0071u\u0069\u0072\u0065\u0073 co\u0073t \u0074\u006f\u0020\u0062\u0065\u0020\u006eon\u0020\u006e\u0065\u0067\u0061\u0074\u0069v\u0065");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0044\u0042 \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0061\u006c\u0076\u0061\u0067\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cbfb :=args [1].ValueNumber ;if _cbfb < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020s\u0061\u006c\u0076\u0061\u0067\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u006e\u0020\u006e\u0065\u0067a\u0074\u0069\u0076\u0065");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020l\u0069\u0066\u0065\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_faed :=args [2].ValueNumber ;if _faed <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006c\u0069f\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0044\u0042\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bffe :=args [3].ValueNumber ;if _bffe < 1{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0044\u0042\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s\u0020\u0070\u0065\u0072i\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u0074\u0020\u006c\u0065\u0073\u0073\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u006e\u0065");};if _bffe > _faed {return MakeErrorResultType (ErrorTypeNum ,"\u0049n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0070\u0065\u0072i\u006f\u0064\u0020\u0066\u006f\u0072\u0020\u0044\u0044\u0042");};_fef :=2.0;if _gdceg ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0044\u0042\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0061\u0063\u0074\u006f\u0072 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_fef =args [4].ValueNumber ;if _fef < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u0074\u006f\u0020\u0062e\u0020\u006e\u006f\u006e\u0020n\u0065\u0067a\u0074\u0069\u0076\u0065");};};return MakeNumberResult (_cedbg (_fgga ,_cbfb ,_faed ,_bffe ,_fef ));};func _gfdf (_cecfg []Result ,_aeba rmode )Result {if len (_cecfg )!=2{return MakeErrorResult ("\u0052\u004f\u0055\u004e\u0044\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u006e\u0075\u006de\u0072\u0069\u0063\u0020\u0061r\u0067\u0075m\u0065\u006e\u0074\u0073");};_fdgbg :=_cecfg [0].AsNumber ();if _fdgbg .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069\u0072s\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0052\u004f\u0055\u004e\u0044\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_bdbbb :=_cecfg [1].AsNumber ();if _bdbbb .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063\u006f\u006e\u0064\u0020a\u0072\u0067\u0075m\u0065\u006e\u0074\u0020t\u006f\u0020\u0052\u004f\u0055\u004e\u0044\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_accb :=_bdbbb .ValueNumber ;_dggg :=_fdgbg .ValueNumber ;_gbdba :=1.0;if _accb > 0{_gbdba =_fb .Pow (1/10.0,_accb );}else {_gbdba =_fb .Pow (10.0,-_accb );};_dggg ,_eefe :=_fb .Modf (_dggg /_gbdba );switch _aeba {case _ggfc :const _bcad =0.499999999;if _eefe >=_bcad {_dggg ++;}else if _eefe <=-_bcad {_dggg --;};case _cbfaec :case _eecc :if _eefe > 0{_dggg ++;}else if _eefe < 0{_dggg --;};};return MakeNumberResult (_dggg *_gbdba );};

// Eval evaluates a horizontal range with prefix returning a list of results or an error.
func (_dbgff PrefixHorizontalRange )Eval (ctx Context ,ev Evaluator )Result {_gbfed :=_dbgff ._caace .Reference (ctx ,ev );switch _gbfed .Type {case ReferenceTypeSheet :if _aebf (_gbfed ,ctx ){return MakeErrorResultType (ErrorTypeName ,_c .Sprintf ("\u0053h\u0065e\u0074\u0020\u0025\u0073\u0020n\u006f\u0074 \u0066\u006f\u0075\u006e\u0064",_gbfed .Value ));};_eddag :=_dbgff .horizontalRangeReference (_gbfed .Value );if _efcab ,_bdgfa :=ev .GetFromCache (_eddag );_bdgfa {return _efcab ;};_gddeb :=ctx .Sheet (_gbfed .Value );_bgdd ,_bcgb :=_efdg (_gddeb ,_dbgff ._cadab ,_dbgff ._dgbaa );_bccefb :=_egfc (_gddeb ,ev ,_bgdd ,_bcgb );ev .SetCache (_eddag ,_bccefb );return _bccefb ;default:return MakeErrorResult (_c .Sprintf ("\u006e\u006f\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0020\u0066\u006f\u0072\u0020r\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_gbfed .Type ));};};

// GetLocked returns FALSE for the invalid reference context.
func (_aafg *ivr )GetLocked (cellRef string )bool {return false };

// Mround is an implementation of the Excel MROUND function.  It is not a
// generic rounding function and has some oddities to match Excel's behavior.
func Mround (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u004d\u0052\u004f\u0055\u004e\u0044\u0028\u0029\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0074\u0077o\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_aegeg :=args [0].AsNumber ();if _aegeg .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069\u0072\u0073\u0074\u0020\u0061r\u0067\u0075\u006de\u006e\u0074\u0020\u0074o\u0020\u004d\u0052\u004f\u0055\u004e\u0044\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_gdgf :=float64 (1);_ggecb :=args [1].AsNumber ();if _ggecb .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073e\u0063\u006fn\u0064\u0020\u0061\u0072g\u0075\u006d\u0065n\u0074\u0020\u0074\u006f\u0020\u004d\u0052\u004f\u0055ND\u0028\u0029\u0020m\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020n\u0075\u006db\u0065\u0072");};_gdgf =_ggecb .ValueNumber ;if _gdgf < 0&&_aegeg .ValueNumber > 0||_gdgf > 0&&_aegeg .ValueNumber < 0{return MakeErrorResult ("\u004d\u0052\u004fUN\u0044\u0028\u0029\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020s\u0069g\u006e\u0073\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068");};_fgeb :=_aegeg .ValueNumber ;_fgeb ,_baeg :=_fb .Modf (_fgeb /_gdgf );if _fb .Trunc (_baeg +0.5)> 0{_fgeb ++;};return MakeNumberResult (_fgeb *_gdgf );};

// ListValues converts an array to a list or returns a lists values. This is used
// for functions that can accept an array, but don't care about ordering to
// reuse the list function logic.
func (_cbgee Result )ListValues ()[]Result {if _cbgee .Type ==ResultTypeArray {_eaed :=[]Result {};for _ ,_ebccf :=range _cbgee .ValueArray {for _ ,_fcgba :=range _ebccf {_eaed =append (_eaed ,_fcgba );};};return _eaed ;};if _cbgee .Type ==ResultTypeList {return _cbgee .ValueList ;};return nil ;};const _cb ="\u0042\u0069\u006e\u004f\u0070\u0054y\u0070\u0065\u0055\u006e\u006bn\u006fw\u006e\u0042\u0069\u006eO\u0070\u0054\u0079\u0070\u0065\u0050\u006c\u0075\u0073\u0042\u0069\u006eO\u0070\u0054\u0079\u0070\u0065\u004d\u0069\u006e\u0075\u0073\u0042\u0069\u006e\u004f\u0070\u0054\u0079\u0070\u0065M\u0075lt\u0042\u0069\u006e\u004f\u0070\u0054\u0079\u0070\u0065\u0044\u0069\u0076\u0042\u0069\u006e\u004f\u0070\u0054\u0079\u0070\u0065\u0045\u0078\u0070\u0042\u0069\u006e\u004f\u0070\u0054\u0079\u0070\u0065\u004c\u0054\u0042\u0069\u006eO\u0070\u0054\u0079\u0070\u0065G\u0054B\u0069\u006eO\u0070\u0054\u0079\u0070\u0065\u0045\u0051\u0042\u0069nO\u0070\u0054\u0079\u0070\u0065\u004c\u0045\u0051\u0042i\u006eO\u0070\u0054\u0079\u0070\u0065\u0047\u0045\u0051\u0042\u0069\u006e\u004f\u0070\u0054\u0079\u0070\u0065N\u0045\u0042\u0069\u006eO\u0070\u0054\u0079\u0070\u0065\u0043\u006f\u006e\u0063\u0061\u0074";

// Text is an implementation of the Excel TEXT function.
func Text (args []Result )Result {if len (args )!=2{return MakeErrorResult ("T\u0045\u0058\u0054\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f \u0061\u0072\u0067u\u006de\u006e\u0074\u0073");};_eacf :=args [0];if _eacf .Type !=ResultTypeNumber &&_eacf .Type !=ResultTypeString &&_eacf .Type !=ResultTypeEmpty {return MakeErrorResult ("\u0054\u0045\u0058\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0066\u0069\u0072\u0073\u0074\u0020a\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006f\u0072\u0020\u0073\u0074\u0072\u0069\u006e\u0067");};if args [1].Type !=ResultTypeString {return MakeErrorResult ("\u0054E\u0058\u0054 \u0072\u0065\u0071\u0075i\u0072\u0065\u0073 \u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072gu\u006d\u0065\u006et\u0020\u0074o\u0020\u0062\u0065\u0020\u0061\u0020s\u0074\u0072i\u006e\u0067");};_dbfg :=args [1].ValueString ;switch _eacf .Type {case ResultTypeNumber :return MakeStringResult (_bdg .Number (_eacf .ValueNumber ,_dbfg ));case ResultTypeString :return MakeStringResult (_bdg .String (_eacf .ValueString ,_dbfg ));case ResultTypeEmpty :return MakeStringResult (_bdg .Number (0,_dbfg ));case ResultTypeArray ,ResultTypeList :return MakeErrorResultType (ErrorTypeSpill ,"\u0054\u0045X\u0054\u0020\u0064\u006f\u0065\u0073\u006e\u0027\u0074\u0020\u0077\u006f\u0072\u006b\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u0072ra\u0079\u0073");default:return MakeErrorResult ("I\u006e\u0063\u006f\u0072\u0072\u0065c\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0020\u0066\u006fr\u0020T\u0045\u0058\u0054");};};

// MakeArrayResult constructs an array result (matrix).
func MakeArrayResult (arr [][]Result )Result {return Result {Type :ResultTypeArray ,ValueArray :arr }};

// Pduration implements the Excel PDURATION function.
func Pduration (args []Result )Result {if len (args )!=3{return MakeErrorResult ("\u0050\u0044\u0055RA\u0054\u0049\u004f\u004e\u0020\u0072\u0065\u0071\u0075i\u0072e\u0073 \u0074h\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050D\u0055\u0052A\u0054\u0049\u004fN\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0072\u0061\u0074\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dgde :=args [0].ValueNumber ;if _dgde <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0044\u0055\u0052\u0041\u0054\u0049\u004f\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020t\u006f\u0020\u0062\u0065\u0020p\u006f\u0073i\u0074\u0069\u0076\u0065");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0044\u0055\u0052\u0041\u0054\u0049\u004f\u004e\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0020\u0076\u0061l\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006dbe\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_abbe :=args [1].ValueNumber ;if _abbe <=0{return MakeErrorResultType (ErrorTypeNum ,"P\u0044\u0055\u0052\u0041\u0054\u0049\u004f\u004e\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073 c\u0075\u0072\u0072\u0065n\u0074\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0074o \u0062\u0065 \u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0044\u0055\u0052\u0041\u0054I\u004f\u004e\u0020r\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0076\u0061lu\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bbf :=args [2].ValueNumber ;if _bbf <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0044\u0055\u0052\u0041\u0054I\u004f\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070o\u0073i\u0074\u0069\u0076\u0065");};return MakeNumberResult ((_fb .Log10 (_bbf )-_fb .Log10 (_abbe ))/_fb .Log10 (1+_dgde ));};

// CountBlank implements the COUNTBLANK function.
func CountBlank (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0043\u004f\u0055N\u0054\u0042\u004c\u0041N\u004b\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0061\u006e\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};return MakeNumberResult (_cgeb (args ,_ebgf ));};

// Vdb implements the Excel VDB function.
func Vdb (args []Result )Result {_baca :=len (args );if _baca < 5||_baca > 7{return MakeErrorResult ("\u0056\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006f\u0066\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0074\u006f\u0020b\u0065\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0062\u0065\u0074\u0077\u0065\u0065\u006e\u0020\u0066\u0069\u0076\u0065\u0020a\u006e\u0064\u0020\u0073\u0065v\u0065\u006e");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0056\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020c\u006f\u0073\u0074\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_cefad :=args [0].ValueNumber ;if _cefad < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0056\u0044B \u0072\u0065\u0071u\u0069\u0072\u0065\u0073 co\u0073t \u0074\u006f\u0020\u0062\u0065\u0020\u006eon\u0020\u006e\u0065\u0067\u0061\u0074\u0069v\u0065");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0056\u0044\u0042 \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0061\u006c\u0076\u0061\u0067\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gbdaf :=args [1].ValueNumber ;if _gbdaf < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0056\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020s\u0061\u006c\u0076\u0061\u0067\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u006e\u0020\u006e\u0065\u0067a\u0074\u0069\u0076\u0065");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0056\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020l\u0069\u0066\u0065\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_edge :=args [2].ValueNumber ;if _edge ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"\u0056\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006c\u0069f\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if _edge < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0056\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006c\u0069f\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("V\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0073\u0074\u0061\u0072\u0074 p\u0065\u0072\u0069\u006fd\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075mb\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gdgd :=args [3].ValueNumber ;if _gdgd < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0056\u0044\u0042\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0074o\u0020\u0062\u0065\u0020\u006e\u006f\u0074\u0020\u006c\u0065\u0073\u0073\u0020\u0074h\u0061n\u0020\u006f\u006e\u0065");};if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0056D\u0042\u0020r\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0065\u006e\u0064 \u0070\u0065\u0072\u0069\u006f\u0064 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dggce :=args [4].ValueNumber ;if _gdgd > _dggce {return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020s\u0074\u0061\u0072\u0074\u0020\u0070\u0065r\u0069\u006f\u0064\u0020\u0066\u006f\u0072\u0020\u0056\u0044\u0042");};if _dggce > _edge {return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0065\u006e\u0064\u0020\u0070e\u0072i\u006f\u0064\u0020\u0066\u006f\u0072\u0020V\u0044\u0042");};_eded :=2.0;if _baca > 5{if args [5].Type ==ResultTypeEmpty {_eded =0.0;}else {if args [5].Type !=ResultTypeNumber {return MakeErrorResult ("\u0056\u0044\u0042\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0061\u0063\u0074\u006f\u0072 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_eded =args [5].ValueNumber ;if _eded < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0056\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u0074\u006f\u0020\u0062e\u0020\u006e\u006f\u006e\u0020n\u0065\u0067a\u0074\u0069\u0076\u0065");};};};_fabb :=false ;if _baca > 6&&args [6].Type !=ResultTypeEmpty {if args [6].Type !=ResultTypeNumber {return MakeErrorResult ("\u0056D\u0042\u0020r\u0065\u0071\u0075\u0069r\u0065\u0073\u0020n\u006f\u005f\u0073\u0077\u0069\u0074\u0063\u0068\u0020to\u0020\u0062\u0065 \u006e\u0075m\u0062\u0065\u0072\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};_fabb =args [6].ValueNumber !=0;};_gfce :=0.0;_geb :=_fb .Floor (_gdgd );_cfbf :=_fb .Ceil (_dggce );if _fabb {for _aggg :=_geb +1;_aggg <=_cfbf ;_aggg ++{_cfd :=_cedbg (_cefad ,_gbdaf ,_edge ,_aggg ,_eded );if _aggg ==_geb +1{_cfd *=_fb .Min (_dggce ,_geb +1)-_gdgd ;}else if _aggg ==_cfbf {_cfd *=_dggce +1-_cfbf ;};_gfce +=_cfd ;};}else {_fgbb :=_edge ;var _dgca float64 ;if !_dddcf (_gdgd ,_fb .Floor (_gdgd )){if _eded ==1{_fgec :=_edge /2;if _gdgd > _fgec ||_dddcf (_gdgd ,_fgec ){_dgca =_gdgd -_fgec ;_gdgd =_fgec ;_dggce -=_dgca ;_fgbb ++;};};};if _eded !=0{_cefad -=_bceb (_cefad ,_gbdaf ,_edge ,_fgbb ,_gdgd ,_eded );};_gfce =_bceb (_cefad ,_gbdaf ,_edge ,_edge -_gdgd ,_dggce -_gdgd ,_eded );};return MakeNumberResult (_gfce );};const _cdegb =57348;

// MaxA is an implementation of the Excel MAXA() function.
func MaxA (args []Result )Result {return _eddd (args ,true )};

// Context is a formula execution context.  Formula evaluation uses the context
// to retreive information from sheets.
type Context interface{

// Cell returns the result of evaluating a cell.
Cell (_fabd string ,_dd Evaluator )Result ;

// Sheet returns an evaluation context for a given sheet name.  This is used
// when evaluating cells that pull data from other sheets (e.g. ='Sheet 2'!A1).
Sheet (_dfg string )Context ;

// GetEpoch returns the time epoch of the context's Workbook.
GetEpoch ()_bd .Time ;

// GetFilename returns the full filename of the context's Workbook.
GetFilename ()string ;

// GetWidth returns a worksheet's column width.
GetWidth (_gfd int )float64 ;

// GetFormat returns a cell's format.
GetFormat (_ffcc string )string ;

// GetLabelPrefix returns cell's label prefix dependent on cell horizontal alignment.
GetLabelPrefix (_fga string )string ;

// GetFormat returns if cell is protected.
GetLocked (_aff string )bool ;

// HasFormula returns if cell contains formula.
HasFormula (_fcc string )bool ;

// IsBool returns if cell contains boolean value.
IsBool (_cgf string )bool ;

// IsDBCS returns if workbook default language is among DBCS.
IsDBCS ()bool ;

// LastColumn returns the name of last column which contains data in range of context sheet's given rows.
LastColumn (_cca ,_dfb int )string ;

// LastRow returns the name of last row which contains data in range of context sheet's given columns.
LastRow (_cae string )int ;

// SetLocked returns sets cell's protected attribute.
SetLocked (_dgg string ,_cdg bool );

// NamedRange returns a named range.
NamedRange (_fae string )Reference ;

// SetOffset is used so that the Context can evaluate cell references
// differently when they are not absolute (e.g. not like '$A$5').  See the
// shared formula support in Cell for usage.
SetOffset (_cec ,_cbeg uint32 );};

// String returns an empty string for Error.
func (_ggb Error )String ()string {return ""};

// Days is an implementation of the Excel DAYS() function.
func Days (args []Result )Result {if len (args )!=2{return MakeErrorResult ("D\u0041\u0059\u0053\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f \u0061\u0072\u0067u\u006de\u006e\u0074\u0073");};var _fce ,_acfb float64 ;switch args [0].Type {case ResultTypeNumber :_acfb =args [0].ValueNumber ;case ResultTypeString :_fdad :=DateValue ([]Result {args [0]});if _fdad .Type ==ResultTypeError {return MakeErrorResult ("I\u006e\u0063\u006f\u0072\u0072\u0065c\u0074\u0020\u0065\u006e\u0064\u0020\u0064\u0061\u0074e\u0020\u0066\u006fr\u0020D\u0041\u0059\u0053");};_acfb =_fdad .ValueNumber ;default:return MakeErrorResult ("I\u006e\u0063\u006f\u0072\u0072\u0065c\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0020\u0066\u006fr\u0020D\u0041\u0059\u0053");};switch args [1].Type {case ResultTypeNumber :_fce =args [1].ValueNumber ;if _fce < 62&&_acfb >=62{_fce --;};case ResultTypeString :_efd :=DateValue ([]Result {args [1]});if _efd .Type ==ResultTypeError {return MakeErrorResult ("\u0049\u006ec\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0064\u0061\u0074\u0065\u0020\u0066\u006f\u0072\u0020DA\u0059\u0053");};_fce =_efd .ValueNumber ;default:return MakeErrorResult ("I\u006e\u0063\u006f\u0072\u0072\u0065c\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0020\u0066\u006fr\u0020D\u0041\u0059\u0053");};_afe :=float64 (int (_acfb -_fce ));return MakeNumberResult (_afe );};type parsedReplaceObject struct{_ceg string ;_cgbc int ;_ceef int ;_fcgg string ;};func _adcfe (_ebbb Result )Result {if _ebbb .Type ==ResultTypeEmpty {return _ebbb ;};_fgfa :=_ebbb .AsString ();if _fgfa .Type !=ResultTypeString {return MakeErrorResult ("\u004c\u004f\u0057\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0061\u0020\u0073\u0069\u006eg\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};if _ebbb .IsBoolean {if _fgfa .ValueString =="\u0031"{return MakeStringResult ("\u0074\u0072\u0075\u0065");}else if _fgfa .ValueString =="\u0030"{return MakeStringResult ("\u0066\u0061\u006cs\u0065");}else {return MakeErrorResult ("\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u004c\u004fW\u0045\u0052");};}else {return MakeStringResult (_bf .ToLower (_fgfa .ValueString ));};};func _eb (_bfe BinOpType ,_ec []Result ,_ffe Result )Result {_cee :=[]Result {};switch _ffe .Type {case ResultTypeNumber :_dfc :=_ffe .ValueNumber ;for _ebb :=range _ec {_ebc :=_ec [_ebb ].AsNumber ();if _ebc .Type !=ResultTypeNumber {return MakeErrorResult ("\u006e\u006f\u006e\u002d\u006e\u0075\u006e\u006d\u0065\u0072\u0069\u0063\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u006e\u0020\u0062\u0069n\u0061\u0072\u0079\u0020\u006fp\u0065\u0072a\u0074\u0069\u006f\u006e");};switch _bfe {case BinOpTypePlus :_cee =append (_cee ,MakeNumberResult (_ebc .ValueNumber +_dfc ));case BinOpTypeMinus :_cee =append (_cee ,MakeNumberResult (_ebc .ValueNumber -_dfc ));case BinOpTypeMult :_cee =append (_cee ,MakeNumberResult (_ebc .ValueNumber *_dfc ));case BinOpTypeDiv :if _dfc ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"");};_cee =append (_cee ,MakeNumberResult (_ebc .ValueNumber /_dfc ));case BinOpTypeExp :_cee =append (_cee ,MakeNumberResult (_fb .Pow (_ebc .ValueNumber ,_dfc )));case BinOpTypeLT :_cee =append (_cee ,MakeBoolResult (_ebc .ValueNumber < _dfc ));case BinOpTypeGT :_cee =append (_cee ,MakeBoolResult (_ebc .ValueNumber > _dfc ));case BinOpTypeEQ :_cee =append (_cee ,MakeBoolResult (_ebc .ValueNumber ==_dfc ));case BinOpTypeLEQ :_cee =append (_cee ,MakeBoolResult (_ebc .ValueNumber <=_dfc ));case BinOpTypeGEQ :_cee =append (_cee ,MakeBoolResult (_ebc .ValueNumber >=_dfc ));case BinOpTypeNE :_cee =append (_cee ,MakeBoolResult (_ebc .ValueNumber !=_dfc ));default:return MakeErrorResult (_c .Sprintf ("\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u006c\u0069\u0073\u0074\u0020\u0062\u0069\u006e\u0061\u0072\u0079\u0020\u006fp \u0025\u0073",_bfe ));};};case ResultTypeString :_ca :=_ffe .ValueString ;for _bdd :=range _ec {_bgd :=_ec [_bdd ].AsString ();if _bgd .Type !=ResultTypeString {return MakeErrorResult ("\u006e\u006f\u006e\u002d\u006e\u0075\u006e\u006d\u0065\u0072\u0069\u0063\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u006e\u0020\u0062\u0069n\u0061\u0072\u0079\u0020\u006fp\u0065\u0072a\u0074\u0069\u006f\u006e");};switch _bfe {case BinOpTypeLT :_cee =append (_cee ,MakeBoolResult (_bgd .ValueString < _ca ));case BinOpTypeGT :_cee =append (_cee ,MakeBoolResult (_bgd .ValueString > _ca ));case BinOpTypeEQ :_cee =append (_cee ,MakeBoolResult (_bgd .ValueString ==_ca ));case BinOpTypeLEQ :_cee =append (_cee ,MakeBoolResult (_bgd .ValueString <=_ca ));case BinOpTypeGEQ :_cee =append (_cee ,MakeBoolResult (_bgd .ValueString >=_ca ));case BinOpTypeNE :_cee =append (_cee ,MakeBoolResult (_bgd .ValueString !=_ca ));default:return MakeErrorResult (_c .Sprintf ("\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u006c\u0069\u0073\u0074\u0020\u0062\u0069\u006e\u0061\u0072\u0079\u0020\u006fp \u0025\u0073",_bfe ));};};default:return MakeErrorResult ("\u006e\u006f\u006e\u002d\u006e\u0075\u006e\u006d\u0065\u0072\u0069c\u0020\u0061\u006e\u0064\u0020\u006e\u006f\u006e-\u0073t\u0072\u0069\u006e\u0067\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u006e\u0020\u0062\u0069\u006e\u0061r\u0079\u0020\u006f\u0070\u0065\u0072\u0061\u0074\u0069\u006f\u006e");};return MakeListResult (_cee );};var _cece []byte =[]byte {0,1,2,1,11,1,12,1,13,1,14,1,15,1,16,1,17,1,18,1,19,1,20,1,21,1,22,1,23,1,24,1,25,1,26,1,27,1,28,1,29,1,30,1,31,1,32,1,33,1,34,1,35,1,36,1,37,1,38,1,39,1,40,1,41,1,42,1,43,2,0,1,2,3,4,2,3,5,2,3,6,2,3,7,2,3,8,2,3,9,2,3,10};type rmode byte ;const _dggd ="\u0028\u0020\u0028"+_ebg +"\u007c"+_dgb +"\u007c"+_cfag +"\u007c"+_acf +"\u0029\u0029\u003f\u0024";var _fbca =[]ri {{1000,"\u004d"},{950,"\u004c\u004d"},{900,"\u0043\u004d"},{500,"\u0044"},{450,"\u004c\u0044"},{400,"\u0043\u0044"},{100,"\u0043"},{95,"\u0056\u0043"},{90,"\u0058\u0043"},{50,"\u004c"},{45,"\u0056\u004c"},{40,"\u0058\u004c"},{10,"\u0058"},{9,"\u0049\u0058"},{5,"\u0056"},{4,"\u0049\u0056"},{1,"\u0049"}};func Unicode (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0055\u004e\u0049\u0043\u004fD\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020s\u0069\u006e\u0067\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dcbf :=args [0].AsString ();if _dcbf .Type !=ResultTypeString {return MakeErrorResult ("\u0055\u004e\u0049\u0043\u004fD\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020s\u0069\u006e\u0067\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if len (_dcbf .ValueString )==0{return MakeErrorResult ("\u0055\u004e\u0049\u0043\u004f\u0044\u0045 \u0072\u0065\u0071u\u0069\u0072\u0065\u0073 \u0061\u0020\u006e\u006f\u006e\u002d\u007a\u0065\u0072\u006f\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};return MakeNumberResult (float64 (_dcbf .ValueString [0]));};

// Update returns the same object as updating sheet references does not affect Error.
func (_fgg Error )Update (q *_aac .UpdateQuery )Expression {return _fgg };

// Pi is an implementation of the Excel Pi() function that just returns the Pi
// constant.
func Pi (args []Result )Result {if len (args )!=0{return MakeErrorResult ("\u0050I\u0028\u0029\u0020\u0061c\u0063\u0065\u0070\u0074\u0073 \u006eo\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074s");};return MakeNumberResult (_fb .Pi );};

// LastColumn returns empty string for the invalid reference context.
func (_dgae *ivr )LastColumn (rowFrom ,rowTo int )string {return ""};

// ISNUMBER is an implementation of the Excel ISNUMBER() function.
func IsNumber (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053NU\u004d\u0042\u0045R\u0028\u0029\u0020\u0061cce\u0070ts\u0020\u0061\u0020\u0073\u0069\u006e\u0067le\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};return MakeBoolResult (args [0].Type ==ResultTypeNumber );};func (_efag *ivr )Cell (ref string ,ev Evaluator )Result {return MakeErrorResult ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0066\u0065r\u0065\u006e\u0063\u0065");};

// Eval evaluates and returns the result of a constant array expression.
func (_dc ConstArrayExpr )Eval (ctx Context ,ev Evaluator )Result {_dag :=[][]Result {};for _ ,_bcf :=range _dc ._ge {_ae :=[]Result {};for _ ,_fg :=range _bcf {_ae =append (_ae ,_fg .Eval (ctx ,ev ));};_dag =append (_dag ,_ae );};return MakeArrayResult (_dag );};var _dgdb =[...]int {0};func _bfbc (_beded Result ,_becd ,_dfba string )(string ,Result ){switch _beded .Type {case ResultTypeString ,ResultTypeNumber ,ResultTypeEmpty :return _beded .Value (),_fbee ;default:return "",MakeErrorResult (_becd +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020"+_dfba +"\u0020t\u006f\u0020\u0062\u0065 \u0061\u0020\u006e\u0075\u006db\u0065r\u0020o\u0072\u0020\u0073\u0074\u0072\u0069\u006eg");};};

// Update returns the same object as updating sheet references does not affect Number.
func (_gbae Number )Update (q *_aac .UpdateQuery )Expression {return _gbae };const _ggfddf =57373;var _caa =[...]uint8 {0,16,29,43,56,68,80,91,102,113,125,137,148,163};

// Or is an implementation of the Excel OR() function and takes a variable
// number of arguments.
func Or (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u004f\u0052\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074 \u006f\u006e\u0065\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_bdba :=false ;for _ ,_bddec :=range args {switch _bddec .Type {case ResultTypeList ,ResultTypeArray :_ggec :=Or (_bddec .ListValues ());if _ggec .Type ==ResultTypeError {return _ggec ;};if _ggec .ValueNumber !=0{_bdba =true ;};case ResultTypeNumber :if _bddec .ValueNumber !=0{_bdba =true ;};case ResultTypeString :return MakeErrorResult ("\u004f\u0052 \u0064\u006f\u0065\u0073\u006e\u0027\u0074\u0020\u006f\u0070\u0065\u0072\u0061\u0074\u0065\u0020\u006f\u006e\u0020\u0073\u0074\u0072in\u0067\u0073");case ResultTypeError :return _bddec ;default:return MakeErrorResult ("\u0075\u006e\u0073u\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0069\u006e\u0020\u004f\u0052");};};return MakeBoolResult (_bdba );};const _fcabg =_bd .Millisecond *1000;func init (){RegisterFunction ("\u0043\u0048\u004f\u004f\u0053\u0045",Choose );RegisterFunction ("\u0043\u004f\u004c\u0055\u004d\u004e",Column );RegisterFunction ("\u0043O\u004c\u0055\u004d\u004e\u0053",Columns );RegisterFunction ("\u0049\u004e\u0044E\u0058",Index );RegisterFunctionComplex ("\u0049\u004e\u0044\u0049\u0052\u0045\u0043\u0054",Indirect );RegisterFunctionComplex ("\u004f\u0046\u0046\u0053\u0045\u0054",Offset );RegisterFunction ("\u004d\u0041\u0054C\u0048",Match );RegisterFunction ("\u0048L\u004f\u004f\u004b\u0055\u0050",HLookup );RegisterFunction ("\u004c\u0041\u0052G\u0045",Large );RegisterFunction ("\u004c\u004f\u004f\u004b\u0055\u0050",Lookup );RegisterFunction ("\u0052\u004f\u0057",Row );RegisterFunction ("\u0052\u004f\u0057\u0053",Rows );RegisterFunction ("\u0053\u004d\u0041L\u004c",Small );RegisterFunction ("\u0056L\u004f\u004f\u004b\u0055\u0050",VLookup );RegisterFunction ("\u0054R\u0041\u004e\u0053\u0050\u004f\u0053E",Transpose );};const (_beefe countMode =iota ;_bcadd ;_ebgf ;);func _deaa (){_daec =_cf .MustCompile ("\u005e\u0030\u002b\u0024");_badfd =_cf .MustCompile ("\u005e\u0028\u0028\u0023|0\u0029\u002b\u002c\u0029\u002b\u0028\u0023\u007c\u0030\u0029\u002b\u0028\u003b\u007c$\u0029");_bagd =_cf .MustCompile ("\u005e\u0028\u0023\u007c\u0030\u007c\u002c\u0029\u002a\u005f\u005c\u0029\u003b");_edgg =_cf .MustCompile ("\u005e\u0030\u002b\u005c\u002e\u0028\u0030\u002b\u0029\u0024");_dcea =_cf .MustCompile ("\u005e\u0028\u0028\u0023\u007c\u0030\u0029\u002b\u002c\u0029+\u0028\u0023\u007c\u0030\u0029\u002b\u005c.\u0028\u0030\u002b\u0029\u002e\u002a\u0028\u003b\u007c\u0024\u0029");_efcf =_cf .MustCompile ("^\u0028\u005f\u007c\u002d\u007c\u0020)\u002b\u005c\u002a\u0020\u0023\u002b\u002c\u0023\u002b0\u005c\u002e\u00280\u002b)\u002e\u002a\u003b");_acfg =_cf .MustCompile ("\u005e\u0028\u0028\u0023\u007c\u0030)\u002b\u002c\u0029\u002b\u0028\u0023\u007c\u0030\u0029\u002b\u005c\u002e\u0028(\u0023\u007c\u0030\u0029\u002b\u0029\u005f\\\u0029\u002e\u002a\u003b");_faebd =_cf .MustCompile ("\u005e\u0028\u0023\u007c0)\u002b\u005c\u002e\u0028\u0028\u0023\u007c\u0030\u0029\u002b\u0029\u0025\u0024");_edcb =_cf .MustCompile ("\u005c\u005b\u005c$\u005c\u0024\u002d\u002e+\u005c\u005d\u0028\u005c\u002a\u0020\u0029?\u0028\u0023\u007c\u0030\u0029\u002b\u002c\u0028\u0023\u007c\u0030\u0029\u002b\u003b");_dbca =_cf .MustCompile ("\u005c[\u005c\u0024\\\u0024\u002d\u002e+\u005c\u005d\u0028\u005c\u002a\u0020\u0029?\u0028\u0023\u007c\u0030\u0029\u002b,\u0028\u0023\u007c\u0030\u0029\u002b\u005c\u002e\u0028\u0028\u0023|\u0030\u007c\u002d\u0029\u002b\u0029\u002e\u002a\u003b");_eecgc =_cf .MustCompile ("\u005e(\u0028\u0023|\u0030\u0029\u002b,\u0029\u002b\u0028\u0023\u007c\u0030\u0029+\u0028\u005c\u002e\u0028\u0028\u0023|\u0030\u007c\u002d\u0029\u002b\u0029\u0029\u003f\u002e\u002b\u005c[\u005c\u0024\u002e\u002b\u005c\u005d\u002e\u002a\u003b");_ffdg =_cf .MustCompile ("\u005e\u004d\u002b(\u002f\u007c\u0020\u007c\u002c\u007c\u0022\u007c"+_bdcg +_bdcg +"\u0029\u002b\u0044\u002b\u0028\u002f\u007c\u0020\u007c\u002c\u007c\u0022\u007c"+_bdcg +_bdcg +"\u0029\u002b\u0059+\u0024");_daecf =_cf .MustCompile ("\u005e\u0044\u002b\u0028\u002f\u007c\u0020\u007c\u005c\u002e\u007c\u0022\u007c"+_bdcg +_bdcg +"\u0029\u002b\u004d\u002b\u0028\u002f\u007c\u0020\u007c\\\u002e\u007c\u0022\u007c"+_bdcg +_bdcg +"\u0029\u002b\u0059+\u0024");_gbcg =_cf .MustCompile ("\u005e\u0028\u0023|\u0030\u0029\u002b\u005c.\u0028\u0028\u0023\u007c\u0030\u0029\u002a)\u0045\u005c\u002b\u0028\u0023\u007c\u0030\u0029\u002b\u0028\u003b\u007c\u0024\u0029");_bbg =_cf .MustCompile ("\u005e.\u002a\u005f\u005c\u0029\u002e\u002a;");};func _ced (_aged []Result ,_bba string )(*couponArgs ,Result ){_aed :=len (_aged );if _aed !=3&&_aed !=4{return nil ,MakeErrorResult (_bba +"\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u006f\u0072\u0020\u0066o\u0075\u0072\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_aga ,_dbde ,_agge :=_aaf (_aged [0],_aged [1],_bba );if _agge .Type ==ResultTypeError {return nil ,_agge ;};if _aged [2].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_bba +"\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0066\u0072\u0065\u0071\u0075\u0065\u006e\u0063\u0079 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bbc :=_aged [2].ValueNumber ;if !_dcdd (_bbc ){return nil ,MakeErrorResult ("\u0049n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0066\u0072\u0065q\u0075\u0065\u006e\u0063\u0079\u0020\u0066\u006f\u0072\u0020"+_bba );};_effcf :=0;if _aed ==4&&_aged [3].Type !=ResultTypeEmpty {if _aged [3].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_bba +"\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020b\u0061\u0073\u0069\u0073\u0020\u0074\u006f\u0020b\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_effcf =int (_aged [3].ValueNumber );if !_fdgc (_effcf ){return nil ,MakeErrorResultType (ErrorTypeNum ,"\u0049\u006ec\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0062\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020fo\u0072\u0020"+_bba );};};return &couponArgs {_aga ,_dbde ,int (_bbc ),_effcf },_fbee ;};

// Mduration implements the Excel MDURATION function.
func Mduration (args []Result )Result {_agdc ,_gabe :=_eecd (args ,"\u004dD\u0055\u0052\u0041\u0054\u0049\u004fN");if _gabe .Type ==ResultTypeError {return _gabe ;};_bcbf :=_agdc ._eedc ;_fgdc :=_agdc ._decg ;_dfeb :=_agdc ._fbb ;_cbbb :=_agdc ._agag ;_ggfdd :=_agdc ._efed ;_ccbc :=_agdc ._gfgb ;_gfdd :=_faf (_bcbf ,_fgdc ,_dfeb ,_cbbb ,_ggfdd ,_ccbc );if _gfdd .Type ==ResultTypeError {return _gfdd ;};_cggc :=_gfdd .ValueNumber /(1.0+_cbbb /_ggfdd );return MakeNumberResult (_cggc );};

// MinIfs implements the MINIFS function.
func MinIfs (args []Result )Result {_gddf :=_ffdd (args ,true ,"\u004d\u0049\u004e\u0049\u0046\u0053");if _gddf .Type !=ResultTypeEmpty {return _gddf ;};_dbab :=_ggab (args [1:]);_dgcbb :=_fb .MaxFloat64 ;_fedabb :=_eabdb (args [0]);for _ ,_adgg :=range _dbab {_bdda :=_fedabb [_adgg ._adfac ][_adgg ._dbcad ].ValueNumber ;if _dgcbb > _bdda {_dgcbb =_bdda ;};};if _dgcbb ==_fb .MaxFloat64 {_dgcbb =0;};return MakeNumberResult (float64 (_dgcbb ));};const _bacf =57371;

// IfNA is an implementation of the Excel IFNA() function. It takes two arguments.
func IfNA (args []Result )Result {if len (args )!=2{return MakeErrorResult ("I\u0046\u004e\u0041\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f \u0061\u0072\u0067u\u006de\u006e\u0074\u0073");};if args [0].Type ==ResultTypeError &&args [0].ValueString =="\u0023\u004e\u002f\u0041"{return args [1];};return args [0];};

// Reference returns an invalid reference for ConstArrayExpr.
func (_ged ConstArrayExpr )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };

// NewEmptyExpr constructs a new empty expression.
func NewEmptyExpr ()Expression {return EmptyExpr {}};var _gddb float64 =25569.0;

// Eomonth is an implementation of the Excel EOMONTH() function.
func Eomonth (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0045\u004f\u004d\u004f\u004e\u0054\u0048\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074w\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074 \u0066\u006f\u0072\u0020\u0045\u004f\u004d\u004f\u004e\u0054\u0048");};_dace :=args [1].ValueNumber ;_daga :=args [0];var _caee float64 ;switch _daga .Type {case ResultTypeEmpty :_caee =0;case ResultTypeNumber :_caee =_daga .ValueNumber ;case ResultTypeString :_efc :=DateValue ([]Result {args [0]});if _efc .Type ==ResultTypeError {return MakeErrorResult ("\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074 \u0066\u006f\u0072\u0020\u0045\u004f\u004d\u004f\u004e\u0054\u0048");};_caee =_efc .ValueNumber ;default:return MakeErrorResult ("\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074 \u0066\u006f\u0072\u0020\u0045\u004f\u004d\u004f\u004e\u0054\u0048");};_adec :=_edgb (_caee );_fdf :=_adec .AddDate (0,int (_dace +1),0);_eaeg ,_beg ,_ :=_fdf .Date ();_afd :=_ebe (_eaeg ,int (_beg ),0);if _afd < 1{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074 \u0066\u006f\u0072\u0020\u0045\u004f\u004d\u004f\u004e\u0054\u0048");};if _eaeg ==1900&&_beg ==3{_afd --;};return MakeNumberResult (_afd );};func _ade ()evCache {_cga :=evCache {};_cga ._cge =make (map[string ]Result );_cga ._adc =&_af .Mutex {};return _cga ;};

// Transpose implements the TRANSPOSE function that transposes a cell range.
func Transpose (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0054\u0052AN\u0053\u0050\u004fS\u0045\u0020\u0072\u0065qui\u0072es\u0020\u0061\u0020\u0073\u0069\u006e\u0067le\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};if args [0].Type !=ResultTypeArray &&args [0].Type !=ResultTypeList {return MakeErrorResult ("T\u0052\u0041\u004e\u0053\u0050\u004fS\u0045\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0061\u0020\u0072a\u006e\u0067\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_adcfa :=args [0];if _adcfa .Type ==ResultTypeList {_afffg :=[][]Result {};for _ ,_dbdf :=range _adcfa .ValueList {_afffg =append (_afffg ,[]Result {_dbdf });};return MakeArrayResult (_afffg );};_dgcf :=make ([][]Result ,len (_adcfa .ValueArray [0]));for _ ,_ddbcd :=range _adcfa .ValueArray {for _dcgd ,_cdbd :=range _ddbcd {_dgcf [_dcgd ]=append (_dgcf [_dcgd ],_cdbd );};};return MakeArrayResult (_dgcf );};type ri struct{_bfga float64 ;_cacf string ;};

// FunctionComplex is a function whose result  depends on its arguments and the
// context that it's in.  As an example, INDIRECT is a complex function so that
// INDIRECT("A1") which returns the value of the "A1" cell in a sheet can use
// the context to reach into the sheet and pull out required values.
type FunctionComplex func (_gfbcf Context ,_gcae Evaluator ,_gfcc []Result )Result ;

// Reference returns an invalid reference for EmptyExpr.
func (_caf EmptyExpr )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };

// Eval evaluates and returns the result of the NamedRangeRef reference.
func (_ceccf NamedRangeRef )Eval (ctx Context ,ev Evaluator )Result {_eccc :=ctx .NamedRange (_ceccf ._acdfe );_fbeea :=_eccc .Value ;if _ddge ,_eeeg :=ev .GetFromCache (_fbeea );_eeeg {return _ddge ;};_eaga :=_bf .Split (_fbeea ,"\u0021");if len (_eaga )!=2{return MakeErrorResult (_c .Sprintf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u006e\u0061\u006de\u0064 \u0072\u0061\u006e\u0067\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0025\u0073",_fbeea ));};_dfce :=ctx .Sheet (_eaga [0]);_adebd :=_bf .Split (_eaga [1],"\u003a");switch len (_adebd ){case 1:_ffbf :=ev .Eval (_dfce ,_adebd [0]);ev .SetCache (_fbeea ,_ffbf );return _ffbf ;case 2:_cadc :=_egfc (_dfce ,ev ,_adebd [0],_adebd [1]);ev .SetCache (_fbeea ,_cadc );return _cadc ;};return MakeErrorResult (_c .Sprintf ("\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0074\u0079\u0070e \u0025\u0073",_eccc .Type ));};

// Update returns the same object as updating sheet references does not affect SheetPrefixExpr.
func (_bcafg SheetPrefixExpr )Update (q *_aac .UpdateQuery )Expression {return _bcafg };type noCache struct{};const _fcdf =57378;

// Range is a range expression that when evaluated returns a list of Results.
type Range struct{_bcged ,_bcec Expression };func init (){_deaa ();RegisterFunction ("\u004e\u0041",NA );RegisterFunction ("\u0049S\u0042\u004c\u0041\u004e\u004b",IsBlank );RegisterFunction ("\u0049\u0053\u0045R\u0052",IsErr );RegisterFunction ("\u0049S\u0045\u0052\u0052\u004f\u0052",IsError );RegisterFunction ("\u0049\u0053\u0045\u0056\u0045\u004e",IsEven );RegisterFunctionComplex ("\u005fx\u006cf\u006e\u002e\u0049\u0053\u0046\u004f\u0052\u004d\u0055\u004c\u0041",IsFormula );RegisterFunctionComplex ("\u004fR\u0047\u002e\u004f\u0050E\u004e\u004f\u0046\u0046\u0049C\u0045.\u0049S\u004c\u0045\u0041\u0050\u0059\u0045\u0041R",IsLeapYear );RegisterFunctionComplex ("\u0049S\u004c\u004f\u0047\u0049\u0043\u0041L",IsLogical );RegisterFunction ("\u0049\u0053\u004e\u0041",IsNA );RegisterFunction ("\u0049S\u004e\u004f\u004e\u0054\u0045\u0058T",IsNonText );RegisterFunction ("\u0049\u0053\u004e\u0055\u004d\u0042\u0045\u0052",IsNumber );RegisterFunction ("\u0049\u0053\u004fD\u0044",IsOdd );RegisterFunctionComplex ("\u0049\u0053\u0052E\u0046",IsRef );RegisterFunction ("\u0049\u0053\u0054\u0045\u0058\u0054",IsText );RegisterFunctionComplex ("\u0043\u0045\u004c\u004c",Cell );};

// Accrintm implements the Excel ACCRINTM function.
func Accrintm (args []Result )Result {_gfgg :=len (args );if _gfgg !=4&&_gfgg !=5{return MakeErrorResult ("A\u0043\u0043\u0052\u0049\u004e\u0054\u004d\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066o\u0075\u0072\u0020\u006f\u0072\u0020\u0066\u0069\u0076\u0065 a\u0072\u0067\u0075m\u0065n\u0074\u0073");};_dgaba ,_abde :=_ddg (args [0],"\u0069\u0073\u0073\u0075\u0065\u0020\u0064\u0061\u0074\u0065","\u0041\u0043\u0043\u0052\u0049\u004e\u0054\u004d");if _abde .Type ==ResultTypeError {return _abde ;};_ccab ,_abde :=_ddg (args [1],"\u0073e\u0074t\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0064\u0061\u0074\u0065","\u0041\u0043\u0043\u0052\u0049\u004e\u0054\u004d");if _abde .Type ==ResultTypeError {return _abde ;};if _dgaba >=_ccab {return MakeErrorResultType (ErrorTypeNum ,"\u0049\u0073\u0073\u0075\u0065\u0020d\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0065\u0061\u0072\u006c\u0069\u0065r\u0020\u0074\u0068\u0061\u006e\u0020\u0073\u0065\u0074\u0074\u006c\u0065\u006d\u0065n\u0074 \u0064\u0061\u0074\u0065");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0041C\u0043\u0052I\u004e\u0054\u004d\u0020r\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020to\u0020\u0062\u0065 \u006e\u0075m\u0062\u0065\u0072\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};_afbbf :=args [2].ValueNumber ;if _afbbf <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0041\u0043\u0043\u0052\u0049\u004e\u0054\u004d\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061t\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0041\u0043\u0043\u0052\u0049\u004e\u0054M\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s\u0020\u0070\u0061\u0072\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_degc :=args [3].ValueNumber ;if _degc <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0041\u0043C\u0052\u0049\u004e\u0054\u004d \u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0070\u0061\u0072\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cbcg :=0;if _gfgg ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0041C\u0043\u0052I\u004e\u0054\u004d \u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0062\u0061\u0073\u0069\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cbcg =int (args [4].ValueNumber );if !_fdgc (_cbcg ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006ec\u006f\u0072\u0072\u0065c\u0074\u0020b\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074\u0020\u0066\u006f\u0072\u0020\u0041\u0043\u0043R\u0049\u004e\u0054\u004d");};};_edaf ,_abde :=_gbab (_dgaba ,_ccab ,_cbcg );if _abde .Type ==ResultTypeError {return _abde ;};return MakeNumberResult (_degc *_afbbf *_edaf );};

// Char is an implementation of the Excel CHAR function that takes an integer in
// the range [0,255] and returns the corresponding ASCII character.
func Char (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0043\u0048\u0041\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0061\u0020\u0073\u0069\u006e\u0067l\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_dccg :=args [0].AsNumber ();if _dccg .Type !=ResultTypeNumber {return MakeErrorResult ("\u0043\u0048\u0041\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0061\u0020\u0073\u0069\u006e\u0067l\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_fafgb :=int (_dccg .ValueNumber );if _fafgb < 0||_fafgb > 255{return MakeErrorResult ("\u0043H\u0041\u0052 \u0072\u0065\u0071\u0075i\u0072\u0065\u0073 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073 i\u006e\u0020\u0074h\u0065\u0020r\u0061\u006e\u0067\u0065\u0020\u005b0\u002c\u00325\u0035\u005d");};return MakeStringResult (_c .Sprintf ("\u0025\u0063",_fafgb ));};

// Reference returns an invalid reference for BinaryExpr.
func (_be BinaryExpr )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };func (_fgffa node )String ()string {return _c .Sprintf ("\u007b%\u0073\u0020\u0025\u0073\u007d",_fgffa ._egagd ,_ebgg (string (_fgffa ._fbbga )));};const _dafe =57360;

// Concat is an implementation of the Excel CONCAT() and deprecated CONCATENATE() function.
func Concat (args []Result )Result {_fcdab :=_fd .Buffer {};for _ ,_edgc :=range args {switch _edgc .Type {case ResultTypeString :_fcdab .WriteString (_edgc .ValueString );case ResultTypeNumber :var _gdegb string ;if _edgc .IsBoolean {if _edgc .ValueNumber ==0{_gdegb ="\u0046\u0041\u004cS\u0045";}else {_gdegb ="\u0054\u0052\u0055\u0045";};}else {_gdegb =_edgc .AsString ().ValueString ;};_fcdab .WriteString (_gdegb );default:return MakeErrorResult ("\u0043\u004f\u004e\u0043\u0041T\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0073");};};return MakeStringResult (_fcdab .String ());};

// SumIf implements the SUMIF function.
func SumIf (args []Result )Result {if len (args )< 3{return MakeErrorResult ("\u0053\u0055\u004d\u0049\u0046\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0074\u0068\u0072e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_baag :=args [0];if _baag .Type !=ResultTypeArray &&_baag .Type !=ResultTypeList {return MakeErrorResult ("\u0053\u0055\u004d\u0049\u0046\u0020\u0072e\u0071\u0075\u0069r\u0065\u0073\u0020\u0066i\u0072\u0073\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_cacb :=_eabdb (_baag );_ageaf :=args [2];if _ageaf .Type !=ResultTypeArray &&_ageaf .Type !=ResultTypeList {return MakeErrorResult ("\u0053\u0055\u004dI\u0046\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006c\u0061\u0073\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074y\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_bdgbd :=_eabdb (_ageaf );_edef :=_cdadc (args [1]);_fcccb :=0.0;for _afgg ,_efeff :=range _cacb {for _acaef ,_cedgd :=range _efeff {if _gdeg (_cedgd ,_edef ){_fcccb +=_bdgbd [_afgg ][_acaef ].ValueNumber ;};};};return MakeNumberResult (_fcccb );};func _faf (_eab ,_bea ,_ebcb ,_fbff ,_babe float64 ,_ceec int )Result {_bda ,_gae :=_gbab (_eab ,_bea ,_ceec );if _gae .Type ==ResultTypeError {return _gae ;};_eefb ,_efcc :=_agfd (_eab ,_bea ,int (_babe ),_ceec );if _efcc .Type ==ResultTypeError {return _efcc ;};_gdff :=0.0;_dab :=0.0;_ebcb *=100/_babe ;_fbff /=_babe ;_fbff ++;_gdfg :=_bda *_babe -_eefb ;for _afdd :=1.0;_afdd < _eefb ;_afdd ++{_ecf :=_afdd +_gdfg ;_fcdb :=_ebcb /_fb .Pow (_fbff ,_ecf );_dab +=_fcdb ;_gdff +=_ecf *_fcdb ;};_faadf :=(_ebcb +100)/_fb .Pow (_fbff ,_eefb +_gdfg );_dab +=_faadf ;_gdff +=(_eefb +_gdfg )*_faadf ;_gdff /=_dab ;_gdff /=_babe ;return MakeNumberResult (_gdff );};

// Averagea implements the AVERAGEA function, AVERAGEA counts cells that contain
// text as a zero where AVERAGE ignores them entirely.
func Averagea (args []Result )Result {_bgcea ,_cbabc :=_gcfgf (args ,true );if _cbabc ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"\u0041\u0056\u0045\u0052AG\u0045\u0020\u0064\u0069\u0076\u0069\u0064\u0065\u0020\u0062\u0079\u0020\u007a\u0065r\u006f");};return MakeNumberResult (_bgcea /_cbabc );};type criteriaParsed struct{_efega bool ;_dgcbf float64 ;_agdda string ;_ddfe *criteriaRegex ;};type yyParser interface{Parse (yyLexer )int ;Lookahead ()int ;};func _cbcc (_ddab ,_gdded []float64 ,_bdded float64 )float64 {_aadf :=_bdded +1;_aedgg :=_ddab [0];_fdag :=len (_ddab );_gfdgd :=_gdded [0];for _ggbd :=1;_ggbd < _fdag ;_ggbd ++{_aedgg +=_ddab [_ggbd ]/_fb .Pow (_aadf ,(_gdded [_ggbd ]-_gfdgd )/365);};return _aedgg ;};var _dfab =[...]int {-1,1,1,-1,-2,0};func _bdff (_gdcd _bd .Time )_bd .Time {_gdcd =_gdcd .UTC ();return _bd .Date (_gdcd .Year (),_gdcd .Month (),_gdcd .Day (),_gdcd .Hour (),_gdcd .Minute (),_gdcd .Second (),_gdcd .Nanosecond (),_bd .Local );};

// Rept is an implementation of the Excel REPT function that returns n copies of
// a string.
func Rept (args []Result )Result {if len (args )!=2{return MakeErrorResult ("R\u0045\u0050\u0054\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f \u0061\u0072\u0067u\u006de\u006e\u0074\u0073");};_adaf :=args [0].AsString ();if _adaf .Type !=ResultTypeString {return MakeErrorResult ("\u0050R\u004f\u0050E\u0052\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020f\u0069\u0072\u0073\u0074\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062e\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067");};_cafab :=args [1].AsNumber ();if _cafab .Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0052O\u0050\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _cafab .ValueNumber < 0{return MakeErrorResult ("\u0050\u0052\u004fP\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074o\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030");};if _cafab .ValueNumber ==0{return MakeStringResult ("");};_adggc :=_fd .Buffer {};for _gefg :=0;_gefg < int (_cafab .ValueNumber );_gefg ++{_adggc .WriteString (_adaf .ValueString );};return MakeStringResult (_adggc .String ());};const _ddba =16;var _ecbg =[...]int {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36};var _dafff =[]ri {{1000,"\u004d"},{990,"\u0058\u004d"},{950,"\u004c\u004d"},{900,"\u0043\u004d"},{500,"\u0044"},{490,"\u0058\u0044"},{450,"\u004c\u0044"},{400,"\u0043\u0044"},{100,"\u0043"},{99,"\u0049\u0043"},{90,"\u0058\u0043"},{50,"\u004c"},{45,"\u0056\u004c"},{40,"\u0058\u004c"},{10,"\u0058"},{9,"\u0049\u0058"},{5,"\u0056"},{4,"\u0049\u0056"},{1,"\u0049"}};func _aca (_cfce []Result ,_bge string )(*amorArgs ,Result ){_efb :=len (_cfce );if _efb !=6&&_efb !=7{return nil ,MakeErrorResult (_bge +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0069\u0078\u0020\u006fr\u0020s\u0065\u0076\u0065\u006e\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if _cfce [0].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_bge +"\u0020\u0072eq\u0075\u0069\u0072e\u0073\u0020\u0063\u006fst \u0074o \u0062\u0065\u0020\u006e\u0075\u006d\u0062er\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_bbbd :=_cfce [0].ValueNumber ;if _bbbd < 0{return nil ,MakeErrorResultType (ErrorTypeNum ,_bge +"\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0063\u006f\u0073\u0074\u0020\u0074\u006f\u0020\u0062\u0065 \u006e\u006f\u006e\u0020\u006e\u0065\u0067a\u0074\u0069\u0076\u0065");};_bebg ,_bdf :=_ddg (_cfce [1],"\u0064\u0061\u0074\u0065\u0020\u0070\u0075\u0072\u0063h\u0061\u0073\u0065\u0064",_bge );if _bdf .Type ==ResultTypeError {return nil ,_bdf ;};_gfea ,_bdf :=_ddg (_cfce [2],"\u0066\u0069\u0072s\u0074\u0020\u0070\u0065\u0072\u0069\u006f\u0064",_bge );if _bdf .Type ==ResultTypeError {return nil ,_bdf ;};if _gfea < _bebg {return nil ,MakeErrorResultType (ErrorTypeNum ,_bge +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0069\u0072\u0073\u0074 \u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020l\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0064\u0061te\u0020\u0070\u0075\u0072\u0063\u0068\u0061\u0073\u0065\u0064");};if _cfce [3].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_bge +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0061\u006cv\u0061\u0067\u0065\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_dgaa :=_cfce [3].ValueNumber ;if _dgaa < 0||_dgaa > _bbbd {return nil ,MakeErrorResultType (ErrorTypeNum ,_bge +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0061\u006c\u0076\u0061g\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0062\u0065\u0074\u0077\u0065e\u006e\u0020\u0030\u0020\u0061\u006e\u0064\u0020\u0074\u0068\u0065\u0020in\u0069\u0074\u0069\u0061\u006c\u0020\u0063\u006f\u0073\u0074");};if _cfce [4].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_bge +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_acae :=int (_cfce [4].ValueNumber );if _acae < 0{return nil ,MakeErrorResultType (ErrorTypeNum ,_bge +" \u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0070\u0065\u0072\u0069o\u0064\u0020\u0074\u006f\u0020\u0062\u0065 \u006e\u006f\u006e\u002d\u006e\u0065\u0067\u0061\u0074\u0069v\u0065");};if _cfce [5].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_bge +"\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0064\u0065\u0070\u0072\u0065\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u0020\u0072\u0061\u0074\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_ddf :=_cfce [5].ValueNumber ;if _ddf < 0{return nil ,MakeErrorResultType (ErrorTypeNum ,_bge +"\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073 d\u0065\u0070\u0072\u0065\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u0020\u0072\u0061t\u0065\u0020t\u006f\u0020\u0062e\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u0020\u0061\u006e\u0064 \u006c\u0065ss\u0020\u0074\u0068a\u006e\u0020\u0030\u002e\u0035");};_aefcc :=0;if _efb ==7&&_cfce [6].Type !=ResultTypeEmpty {if _cfce [6].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_bge +"\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020b\u0061\u0073\u0069\u0073\u0020\u0074\u006f\u0020b\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_aefcc =int (_cfce [6].ValueNumber );if !_fdgc (_aefcc )||_aefcc ==2{return nil ,MakeErrorResultType (ErrorTypeNum ,"\u0049\u006ec\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0062\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020fo\u0072\u0020"+_bge );};};return &amorArgs {_bbbd ,_bebg ,_gfea ,_dgaa ,_acae ,_ddf ,_aefcc },_fbee ;};

// CellRef is a reference to a single cell
type CellRef struct{_abe string };

// Substitute is an implementation of the Excel SUBSTITUTE function.
func Substitute (args []Result )Result {_eeeb :=len (args );if _eeeb !=3&&_eeeb !=4{return MakeErrorResult ("\u0053\u0055\u0042\u0053\u0054\u0049\u0054U\u0054\u0045\u0020r\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u006f\u0072\u0020\u0066\u006f\u0075\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_cgeea ,_dafc :=_bfbc (args [0],"\u0053\u0055\u0042\u0053\u0054\u0049\u0054\u0055\u0054\u0045","\u0074\u0065\u0078\u0074");if _dafc .Type ==ResultTypeError {return _dafc ;};_bgfd ,_dafc :=_bfbc (args [1],"\u0053\u0055\u0042\u0053\u0054\u0049\u0054\u0055\u0054\u0045","\u006f\u006c\u0064\u0020\u0074\u0065\u0078\u0074");if _dafc .Type ==ResultTypeError {return _dafc ;};_gfaae ,_dafc :=_bfbc (args [2],"\u0053\u0055\u0042\u0053\u0054\u0049\u0054\u0055\u0054\u0045","\u006e\u0065\u0077\u0020\u0074\u0065\u0078\u0074");if _dafc .Type ==ResultTypeError {return _dafc ;};_dcgbb :=0;if _eeeb ==3{return MakeStringResult (_bf .Replace (_cgeea ,_bgfd ,_gfaae ,-1));}else {_afcdd ,_fad :=_gfbg (args [3],"\u0053\u0055\u0042\u0053\u0054\u0049\u0054\u0055\u0054\u0045","\u0069\u006e\u0073t\u0061\u006e\u0063\u0065\u005f\u006e\u0075\u006d");if _fad .Type ==ResultTypeError {return _fad ;};_dcgbb =int (_afcdd );if _dcgbb < 1{return MakeErrorResult ("\u0069\u006es\u0074\u0061\u006e\u0063e\u005f\u006eu\u006d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u007a\u0065\u0072\u006f");};_gabgeg :=_cgeea ;_bgfde :=_dcgbb ;_dfbg :=-1;_fcbbd :=len (_bgfd );_gfcdb :=0;for {_bgfde --;_ceegb :=_bf .Index (_gabgeg ,_bgfd );if _ceegb ==-1{_dfbg =-1;break ;}else {_dfbg =_ceegb +_gfcdb ;if _bgfde ==0{break ;};_edfb :=_fcbbd +_ceegb ;_gfcdb +=_edfb ;_gabgeg =_gabgeg [_edfb :];};};if _dfbg ==-1{return MakeStringResult (_cgeea );}else {_dbede :=_cgeea [:_dfbg ];_dafgd :=_cgeea [_dfbg +_fcbbd :];return MakeStringResult (_dbede +_gfaae +_dafgd );};};};func init (){RegisterFunction ("\u0041\u004e\u0044",And );RegisterFunction ("\u0046\u0041\u004cS\u0045",False );RegisterFunction ("\u0049\u0046",If );RegisterFunction ("\u0049F\u0045\u0052\u0052\u004f\u0052",IfError );RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0049\u0046\u004e\u0041",IfNA );RegisterFunction ("\u0049\u0046\u0053",Ifs );RegisterFunction ("\u005fx\u006c\u0066\u006e\u002e\u0049\u0046S",Ifs );RegisterFunction ("\u004e\u004f\u0054",Not );RegisterFunction ("\u004f\u0052",Or );RegisterFunction ("\u0054\u0052\u0055\u0045",True );RegisterFunction ("\u005fx\u006c\u0066\u006e\u002e\u0058\u004fR",Xor );};

// PrefixVerticalRange is a range expression that when evaluated returns a list of Results from references like Sheet1!AA:IJ (all cells from columns AA to IJ of sheet 'Sheet1').
type PrefixVerticalRange struct{_egbff Expression ;_gfgff ,_agceg string ;};

// Reference returns an invalid reference for Number.
func (_cagfb Number )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };

// Row implements the Excel ROW function.
func Row (args []Result )Result {if len (args )< 1{return MakeErrorResult ("\u0052O\u0057\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073 \u006fn\u0065 \u0061\u0072\u0067\u0075\u006d\u0065\u006et");};_ggag :=args [0].Ref ;if _ggag .Type !=ReferenceTypeCell {return MakeErrorResult ("\u0052\u004f\u0057\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073 a\u006e\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u0074\u0079p\u0065\u0020\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065");};_gcac ,_dbfea :=_d .ParseCellReference (_ggag .Value );if _dbfea !=nil {return MakeErrorResult ("I\u006e\u0063\u006f\u0072re\u0063t\u0020\u0072\u0065\u0066\u0065r\u0065\u006e\u0063\u0065\u003a\u0020"+_ggag .Value );};return MakeNumberResult (float64 (_gcac .RowIdx ));};func _ee (_ff Result )bool {if _ff .Type ==ResultTypeString {return _ff .ValueString =="";};return _ff .ValueNumber ==0;};

// Oddlprice implements the Excel ODDLPRICE function.
func Oddlprice (args []Result )Result {if len (args )!=8&&len (args )!=9{return MakeErrorResult ("\u004f\u0044\u0044L\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0065\u0069\u0067\u0068\u0074\u0020\u006f\u0072\u0020\u006e\u0069\u006e\u0065\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_beab ,_fcaa ,_beaf :=_aaf (args [0],args [1],"\u004fD\u0044\u004c\u0050\u0052\u0049\u0043E");if _beaf .Type ==ResultTypeError {return _beaf ;};_ggaa ,_beaf :=_ddg (args [2],"\u0069\u0073\u0073\u0075\u0065\u0020\u0064\u0061\u0074\u0065","\u004fD\u0044\u004c\u0050\u0052\u0049\u0043E");if _beaf .Type ==ResultTypeError {return _beaf ;};if _ggaa >=_beab {return MakeErrorResultType (ErrorTypeNum ,"\u004c\u0061\u0073\u0074\u0020i\u006e\u0074\u0065\u0072\u0065\u0073\u0074\u0020\u0064\u0061\u0074\u0065\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0062\u0065\u0066\u006f\u0072\u0065\u0020\u0073\u0065\u0074\u0074\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0064\u0061\u0074e");};_ceag :=args [3];if _ceag .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0044\u0044\u004c\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020o\u0066\u0020\u0074\u0079\u0070e\u0020\u006eu\u006d\u0062\u0065\u0072");};_ceead :=_ceag .ValueNumber ;if _ceead < 0{return MakeErrorResultType (ErrorTypeNum ,"R\u0061\u0074\u0065\u0020\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u006e\u006fn\u0020\u006e\u0065g\u0061t\u0069\u0076\u0065");};_ffac :=args [4];if _ffac .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0044\u0044\u004c\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0079i\u0065\u006c\u0064\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006eu\u006d\u0062\u0065\u0072");};_afcg :=_ffac .ValueNumber ;if _afcg < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0059\u0069\u0065\u006cd\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065 \u006eo\u006e\u0020\u006e\u0065\u0067\u0061\u0074i\u0076\u0065");};_cgaf :=args [5];if _cgaf .Type !=ResultTypeNumber {return MakeErrorResult ("\u004fD\u0044\u004cP\u0052\u0049\u0043\u0045 \u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0064\u0065mp\u0074\u0069\u006fn\u0020\u006ff\u0020\u0074\u0079\u0070\u0065\u0020n\u0075\u006db\u0065\u0072");};_ccef :=_cgaf .ValueNumber ;if _ccef < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0059\u0069\u0065\u006cd\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065 \u006eo\u006e\u0020\u006e\u0065\u0067\u0061\u0074i\u0076\u0065");};_fdaa :=args [6];if _fdaa .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0044\u0044\u004c\u0050\u0052\u0049C\u0045\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0066\u0072\u0065\u0071\u0075\u0065\u006e\u0063\u0079\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_ffad :=float64 (int (_fdaa .ValueNumber ));if !_dcdd (_ffad ){return MakeErrorResultType (ErrorTypeNum ,"\u0049n\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0066\u0072e\u0071u\u0065n\u0063\u0065\u0020\u0076\u0061\u006c\u0075e");};_dccdd :=0;if len (args )==8&&args [7].Type !=ResultTypeEmpty {_cedge :=args [7];if _cedge .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0044\u0044\u004c\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0062a\u0073\u0069\u0073\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006eu\u006d\u0062\u0065\u0072");};_dccdd =int (_cedge .ValueNumber );if !_fdgc (_dccdd ){return MakeErrorResultType (ErrorTypeNum ,"I\u006e\u0063\u006f\u0072\u0072\u0065c\u0074\u0020\u0062\u0061\u0073\u0069s\u0020\u0076\u0061\u006c\u0075\u0065\u0020f\u006f\u0072\u0020\u004f\u0044\u0044\u004c\u0050\u0052\u0049C\u0045");};};_gdea ,_beaf :=_gbab (_ggaa ,_fcaa ,_dccdd );if _beaf .Type ==ResultTypeError {return _beaf ;};_gdea *=_ffad ;_abga ,_beaf :=_gbab (_beab ,_fcaa ,_dccdd );if _beaf .Type ==ResultTypeError {return _beaf ;};_abga *=_ffad ;_bdgcg ,_beaf :=_gbab (_ggaa ,_beab ,_dccdd );if _beaf .Type ==ResultTypeError {return _beaf ;};_bdgcg *=_ffad ;_gedd :=_ccef +_gdea *100*_ceead /_ffad ;_gedd /=_abga *_afcg /_ffad +1;_gedd -=_bdgcg *100*_ceead /_ffad ;return MakeNumberResult (_gedd );};var ReferenceInvalid =Reference {Type :ReferenceTypeInvalid };func _gdfdc (_dabd []Result )(float64 ,float64 ,Result ){_cafcd :=0.0;_ffbb :=1.0;for _ ,_beeg :=range _dabd {switch _beeg .Type {case ResultTypeNumber :_cafcd +=_beeg .ValueNumber ;_ffbb *=_cefdb (_beeg .ValueNumber );case ResultTypeList ,ResultTypeArray :_feef ,_baee ,_fbcf :=_gdfdc (_beeg .ListValues ());_cafcd +=_feef ;_ffbb *=_cefdb (_baee );if _fbcf .Type ==ResultTypeError {return 0,0,_fbcf ;};case ResultTypeString :return 0,0,MakeErrorResult ("M\u0055\u004c\u0054\u0049\u004e\u004f\u004d\u0049\u0041\u004c\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063 a\u0072\u0067\u0075m\u0065n\u0074\u0073");case ResultTypeError :return 0,0,_beeg ;};};return _cafcd ,_ffbb ,_fbee ;};func _aebf (_baeec Reference ,_aaga Context )bool {return _aaga .Sheet (_baeec .Value )==InvalidReferenceContext ;};type criteriaRegex struct{_dgcc byte ;_ecebb string ;};

// NewPrefixExpr constructs an expression with prefix.
func NewPrefixExpr (pfx ,exp Expression )Expression {return &PrefixExpr {_cfdf :pfx ,_gfgd :exp }};

//go:generate ragel -G2 -Z lexer.rl
//go:generate goimports -w lexer.go
type Lexer struct{_ddgcb chan *node ;_fffb _af .Mutex ;_fcdd []chan *node ;_bcae []*node ;};

// Munit is an implementation of the Excel MUNIT function that returns an
// identity matrix.
func Munit (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u004d\u0055\u004eIT\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073 \u006fn\u0065 \u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0069\u006e\u0070\u0075\u0074");};_fbba :=args [0].AsNumber ();if _fbba .Type !=ResultTypeNumber {return MakeErrorResult ("\u004d\u0055\u004eIT\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073 \u006fn\u0065 \u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0069\u006e\u0070\u0075\u0074");};_egfab :=int (_fbba .ValueNumber );_ebdd :=make ([][]Result ,0,_egfab );for _dbcde :=0;_dbcde < _egfab ;_dbcde ++{_bdgf :=make ([]Result ,_egfab );for _acdae :=0;_acdae < _egfab ;_acdae ++{if _dbcde ==_acdae {_bdgf [_acdae ]=MakeNumberResult (1.0);}else {_bdgf [_acdae ]=MakeNumberResult (0.0);};};_ebdd =append (_ebdd ,_bdgf );};return MakeArrayResult (_ebdd );};var _aebe =[]int {31,28,31,30,31,30,31,31,30,31,30,31};

// Count implements the COUNT function.
func Count (args []Result )Result {return MakeNumberResult (_cgeb (args ,_beefe ))};func _egfd (_eggab []Result ,_dgbef bool )Result {_bccef :="\u004d\u0049\u004e";if _dgbef {_bccef ="\u004d\u0049\u004e\u0041";};if len (_eggab )==0{return MakeErrorResult (_bccef +"\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s\u0020\u0061\u0074\u0020\u006c\u0065\u0061s\u0074\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_eefeb :=_fb .MaxFloat64 ;for _ ,_gdgc :=range _eggab {switch _gdgc .Type {case ResultTypeNumber :if (_dgbef ||!_gdgc .IsBoolean )&&_gdgc .ValueNumber < _eefeb {_eefeb =_gdgc .ValueNumber ;};case ResultTypeList ,ResultTypeArray :_cada :=_egfd (_gdgc .ListValues (),_dgbef );if _cada .ValueNumber < _eefeb {_eefeb =_cada .ValueNumber ;};case ResultTypeEmpty :case ResultTypeString :_efcfa :=0.0;if _dgbef {_efcfa =_gdgc .AsNumber ().ValueNumber ;};if _efcfa < _eefeb {_eefeb =_efcfa ;};default:_ce .Log ("\u0075\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020"+_bccef +"\u0028\u0029\u0020\u0061rg\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_gdgc .Type );};};if _eefeb ==_fb .MaxFloat64 {_eefeb =0;};return MakeNumberResult (_eefeb );};type tokenType int ;func init (){_geede =_ab .New (_ab .NewSource (_bd .Now ().UnixNano ()));RegisterFunction ("\u0041\u0042\u0053",_dbgb ("\u0041\u0053\u0049\u004e",_fb .Abs ));RegisterFunction ("\u0041\u0043\u004f\u0053",_dbgb ("\u0041\u0053\u0049\u004e",_fb .Acos ));RegisterFunction ("\u0041\u0043\u004fS\u0048",_dbgb ("\u0041\u0053\u0049\u004e",_fb .Acosh ));RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0041\u0043\u004f\u0054",_dbgb ("\u0041\u0043\u004f\u0054",func (_ggee float64 )float64 {return _fb .Pi /2-_fb .Atan (_ggee )}));RegisterFunction ("_\u0078\u006c\u0066\u006e\u002e\u0041\u0043\u004f\u0054\u0048",_dbgb ("\u0041\u0043\u004fT\u0048",func (_fbefb float64 )float64 {return _fb .Atanh (1/_fbefb )}));RegisterFunction ("\u005f\u0078\u006cf\u006e\u002e\u0041\u0052\u0041\u0042\u0049\u0043",Arabic );RegisterFunction ("\u0041\u0053\u0049\u004e",_dbgb ("\u0041\u0053\u0049\u004e",_fb .Asin ));RegisterFunction ("\u0041\u0053\u0049N\u0048",_dbgb ("\u0041\u0053\u0049N\u0048",_fb .Asinh ));RegisterFunction ("\u0041\u0054\u0041\u004e",_dbgb ("\u0041\u0054\u0041\u004e",_fb .Atan ));RegisterFunction ("\u0041\u0054\u0041N\u0048",_dbgb ("\u0041\u0054\u0041N\u0048",_fb .Atanh ));RegisterFunction ("\u0041\u0054\u0041N\u0032",Atan2 );RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0042\u0041\u0053\u0045",Base );RegisterFunction ("\u0043E\u0049\u004c\u0049\u004e\u0047",Ceiling );RegisterFunction ("\u005fx\u006cf\u006e\u002e\u0043\u0045\u0049L\u0049\u004eG\u002e\u004d\u0041\u0054\u0048",CeilingMath );RegisterFunction ("_\u0078\u006c\u0066\u006e.C\u0045I\u004c\u0049\u004e\u0047\u002eP\u0052\u0045\u0043\u0049\u0053\u0045",CeilingPrecise );RegisterFunction ("\u0043\u004f\u004d\u0042\u0049\u004e",Combin );RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0043\u004f\u004d\u0042\u0049\u004e\u0041",Combina );RegisterFunction ("\u0043\u004f\u0053",_dbgb ("\u0043\u004f\u0053",_fb .Cos ));RegisterFunction ("\u0043\u004f\u0053\u0048",_dbgb ("\u0043\u004f\u0053\u0048",_fb .Cosh ));RegisterFunction ("\u005fx\u006c\u0066\u006e\u002e\u0043\u004fT",_fbbbb ("\u0043\u004f\u0054",_fb .Tan ));RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0043\u004f\u0054\u0048",_fbbbb ("\u0043\u004f\u0054\u0048",_fb .Tanh ));RegisterFunction ("\u005fx\u006c\u0066\u006e\u002e\u0043\u0053C",_fbbbb ("\u0043\u0053\u0043",_fb .Sin ));RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0043\u0053\u0043\u0048",_fbbbb ("\u0043\u0053\u0043",_fb .Sinh ));RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0044\u0045\u0043\u0049\u004d\u0041\u004c",Decimal );RegisterFunction ("\u0044E\u0047\u0052\u0045\u0045\u0053",Degrees );RegisterFunction ("\u0045\u0056\u0045\u004e",Even );RegisterFunction ("\u0045\u0058\u0050",_dbgb ("\u0045\u0058\u0050",_fb .Exp ));RegisterFunction ("\u0046\u0041\u0043\u0054",Fact );RegisterFunction ("\u0046\u0041\u0043\u0054\u0044\u004f\u0055\u0042\u004c\u0045",FactDouble );RegisterFunction ("\u0046\u004c\u004fO\u0052",Floor );RegisterFunction ("\u005f\u0078l\u0066\u006e\u002eF\u004c\u004f\u004f\u0052\u002e\u004d\u0041\u0054\u0048",FloorMath );RegisterFunction ("\u005f\u0078\u006c\u0066n.\u0046\u004c\u004f\u004f\u0052\u002e\u0050\u0052\u0045\u0043\u0049\u0053\u0045",FloorPrecise );RegisterFunction ("\u0047\u0043\u0044",GCD );RegisterFunction ("\u0049\u004e\u0054",Int );RegisterFunction ("I\u0053\u004f\u002e\u0043\u0045\u0049\u004c\u0049\u004e\u0047",CeilingPrecise );RegisterFunction ("\u004c\u0043\u004d",LCM );RegisterFunction ("\u004c\u004e",_dbgb ("\u004c\u004e",_fb .Log ));RegisterFunction ("\u004c\u004f\u0047",Log );RegisterFunction ("\u004c\u004f\u00471\u0030",_dbgb ("\u004c\u004f\u00471\u0030",_fb .Log10 ));RegisterFunction ("\u004dD\u0045\u0054\u0045\u0052\u004d",MDeterm );RegisterFunction ("\u004d\u004f\u0044",Mod );RegisterFunction ("\u004d\u0052\u004f\u0055\u004e\u0044",Mround );RegisterFunction ("M\u0055\u004c\u0054\u0049\u004e\u004f\u004d\u0049\u0041\u004c",Multinomial );RegisterFunction ("_\u0078\u006c\u0066\u006e\u002e\u004d\u0055\u004e\u0049\u0054",Munit );RegisterFunction ("\u004f\u0044\u0044",Odd );RegisterFunction ("\u0050\u0049",Pi );RegisterFunction ("\u0050\u004f\u0057E\u0052",Power );RegisterFunction ("\u0050R\u004f\u0044\u0055\u0043\u0054",Product );RegisterFunction ("\u0051\u0055\u004f\u0054\u0049\u0045\u004e\u0054",Quotient );RegisterFunction ("\u0052A\u0044\u0049\u0041\u004e\u0053",Radians );RegisterFunction ("\u0052\u0041\u004e\u0044",Rand );RegisterFunction ("R\u0041\u004e\u0044\u0042\u0045\u0054\u0057\u0045\u0045\u004e",RandBetween );RegisterFunction ("\u0052\u004f\u004dA\u004e",Roman );RegisterFunction ("\u0052\u004f\u0055N\u0044",Round );RegisterFunction ("\u0052O\u0055\u004e\u0044\u0044\u004f\u0057N",RoundDown );RegisterFunction ("\u0052O\u0055\u004e\u0044\u0055\u0050",RoundUp );RegisterFunction ("\u005fx\u006c\u0066\u006e\u002e\u0053\u0045C",_fbbbb ("\u0053\u0045\u0043",_fb .Cos ));RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0053\u0045\u0043\u0048",_fbbbb ("\u0053\u0045\u0043\u0048",_fb .Cosh ));RegisterFunction ("\u0053E\u0052\u0049\u0045\u0053\u0053\u0055M",SeriesSum );RegisterFunction ("\u0053\u0049\u0047\u004e",Sign );RegisterFunction ("\u0053\u0049\u004e",_dbgb ("\u0053\u0049\u004e",_fb .Sin ));RegisterFunction ("\u0053\u0049\u004e\u0048",_dbgb ("\u0053\u0049\u004e\u0048",_fb .Sinh ));RegisterFunction ("\u0053\u0051\u0052\u0054",_dbgb ("\u0053\u0051\u0052\u0054",_fb .Sqrt ));RegisterFunction ("\u0053\u0051\u0052\u0054\u0050\u0049",_dbgb ("\u0053\u0051\u0052\u0054\u0050\u0049",func (_eafe float64 )float64 {return _fb .Sqrt (_eafe *_fb .Pi )}));RegisterFunction ("\u0053\u0055\u004d",Sum );RegisterFunction ("\u0053\u0055\u004dI\u0046",SumIf );RegisterFunction ("\u0053\u0055\u004d\u0049\u0046\u0053",SumIfs );RegisterFunction ("\u0053\u0055\u004d\u0050\u0052\u004f\u0044\u0055\u0043\u0054",SumProduct );RegisterFunction ("\u0053\u0055\u004dS\u0051",SumSquares );RegisterFunction ("\u0054\u0041\u004e",_dbgb ("\u0054\u0041\u004e",_fb .Tan ));RegisterFunction ("\u0054\u0041\u004e\u0048",_dbgb ("\u0054\u0041\u004e\u0048",_fb .Tanh ));RegisterFunction ("\u0054\u0052\u0055N\u0043",Trunc );};func (_ggddg Result )AsString ()Result {switch _ggddg .Type {case ResultTypeNumber :return MakeStringResult (_ggddg .Value ());default:return _ggddg ;};};func _eea (_bcc BinOpType ,_cfa ,_cef []Result )Result {_fda :=[]Result {};for _dg :=range _cfa {_ga :=_cfa [_dg ].AsNumber ();_bac :=_cef [_dg ].AsNumber ();if _ga .Type !=ResultTypeNumber ||_bac .Type !=ResultTypeNumber {return MakeErrorResult ("\u006e\u006f\u006e\u002d\u006e\u0075\u006e\u006d\u0065\u0072\u0069\u0063\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u006e\u0020\u0062\u0069n\u0061\u0072\u0079\u0020\u006fp\u0065\u0072a\u0074\u0069\u006f\u006e");};switch _bcc {case BinOpTypePlus :_fda =append (_fda ,MakeNumberResult (_ga .ValueNumber +_bac .ValueNumber ));case BinOpTypeMinus :_fda =append (_fda ,MakeNumberResult (_ga .ValueNumber -_bac .ValueNumber ));case BinOpTypeMult :_fda =append (_fda ,MakeNumberResult (_ga .ValueNumber *_bac .ValueNumber ));case BinOpTypeDiv :if _bac .ValueNumber ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"");};_fda =append (_fda ,MakeNumberResult (_ga .ValueNumber /_bac .ValueNumber ));case BinOpTypeExp :_fda =append (_fda ,MakeNumberResult (_fb .Pow (_ga .ValueNumber ,_bac .ValueNumber )));case BinOpTypeLT :_fda =append (_fda ,MakeBoolResult (_ga .ValueNumber < _bac .ValueNumber ));case BinOpTypeGT :_fda =append (_fda ,MakeBoolResult (_ga .ValueNumber > _bac .ValueNumber ));case BinOpTypeEQ :_fda =append (_fda ,MakeBoolResult (_ga .ValueNumber ==_bac .ValueNumber ));case BinOpTypeLEQ :_fda =append (_fda ,MakeBoolResult (_ga .ValueNumber <=_bac .ValueNumber ));case BinOpTypeGEQ :_fda =append (_fda ,MakeBoolResult (_ga .ValueNumber >=_bac .ValueNumber ));case BinOpTypeNE :_fda =append (_fda ,MakeBoolResult (_ga .ValueNumber !=_bac .ValueNumber ));default:return MakeErrorResult (_c .Sprintf ("\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u006c\u0069\u0073\u0074\u0020\u0062\u0069\u006e\u0061\u0072\u0079\u0020\u006fp \u0025\u0073",_bcc ));};};return MakeListResult (_fda );};type ivr struct{};

// Max is an implementation of the Excel MAX() function.
func Max (args []Result )Result {return _eddd (args ,false )};const (_ byte =iota ;_eagb ;_gagg ;_ggaf ;_ddgf ;_eefcf ;);func _fbc (_bbaf ,_ccg ,_cbfdf ,_aabb ,_edc float64 ,_eecg int )float64 {_adfa :=_gegf (_bbaf ,_cbfdf ,_aabb ,_edc ,_eecg );var _cfca float64 ;if _ccg ==1{if _eecg ==1{_cfca =0;}else {_cfca =-_aabb ;};}else {if _eecg ==1{_cfca =_ccaf (_bbaf ,_ccg -2,_adfa ,_aabb ,1)-_adfa ;}else {_cfca =_ccaf (_bbaf ,_ccg -1,_adfa ,_aabb ,0);};};return _cfca *_bbaf ;};

// Lower is an implementation of the Excel LOWER function that returns a lower
// case version of a string.
func Lower (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u004c\u004f\u0057\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0061\u0020\u0073\u0069\u006eg\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_cddb :=args [0];switch _cddb .Type {case ResultTypeError :return _cddb ;case ResultTypeNumber ,ResultTypeString :return _adcfe (args [0]);case ResultTypeList :_bdcga :=_cddb .ValueList ;_gdbg :=[]Result {};for _ ,_bcdb :=range _bdcga {_fcbbf :=_adcfe (_bcdb );if _fcbbf .Type ==ResultTypeError {return _fcbbf ;};_gdbg =append (_gdbg ,_fcbbf );};return MakeListResult (_gdbg );case ResultTypeArray :_cgcgb :=_cddb .ValueArray ;_febb :=[][]Result {};for _ ,_abcd :=range _cgcgb {_abdfb :=[]Result {};for _ ,_baega :=range _abcd {_daba :=_adcfe (_baega );if _daba .Type ==ResultTypeError {return _daba ;};_abdfb =append (_abdfb ,_daba );};_febb =append (_febb ,_abdfb );};return MakeArrayResult (_febb );default:return MakeErrorResult ("\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u004c\u004fW\u0045\u0052");};};func _cgeb (_eabc []Result ,_gdba countMode )float64 {_ecfdf :=0.0;for _ ,_gdcce :=range _eabc {switch _gdcce .Type {case ResultTypeNumber :if _gdba ==_bcadd ||(_gdba ==_beefe &&!_gdcce .IsBoolean ){_ecfdf ++;};case ResultTypeList ,ResultTypeArray :_ecfdf +=_cgeb (_gdcce .ListValues (),_gdba );case ResultTypeString :if _gdba ==_bcadd {_ecfdf ++;};case ResultTypeEmpty :if _gdba ==_ebgf {_ecfdf ++;};};};return _ecfdf ;};func _gfbg (_bedg Result ,_gegdea ,_aafe string )(float64 ,Result ){switch _bedg .Type {case ResultTypeEmpty :return 0,_fbee ;case ResultTypeNumber :return _bedg .ValueNumber ,_fbee ;case ResultTypeString :_degb ,_fccgd :=_ad .ParseFloat (_bedg .ValueString ,64);if _fccgd !=nil {return 0,MakeErrorResult (_aafe +"\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u006f\u0072\u0020"+_gegdea );};return _degb ,_fbee ;default:return 0,MakeErrorResult (_gegdea +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020"+_aafe +"\u0020t\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006f\u0072\u0020\u0065\u006d\u0070\u0074\u0079");};};func (_fedag *ivr )Sheet (name string )Context {return _fedag };func _eddd (_cecdd []Result ,_fgcg bool )Result {_beece :="\u004d\u0041\u0058";if _fgcg {_beece ="\u004d\u0041\u0058\u0041";};if len (_cecdd )==0{return MakeErrorResult (_beece +"\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s\u0020\u0061\u0074\u0020\u006c\u0065\u0061s\u0074\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_abbf :=-_fb .MaxFloat64 ;for _ ,_eeaad :=range _cecdd {switch _eeaad .Type {case ResultTypeNumber :if (_fgcg ||!_eeaad .IsBoolean )&&_eeaad .ValueNumber > _abbf {_abbf =_eeaad .ValueNumber ;};case ResultTypeList ,ResultTypeArray :_dgfba :=_eddd (_eeaad .ListValues (),_fgcg );if _dgfba .ValueNumber > _abbf {_abbf =_dgfba .ValueNumber ;};case ResultTypeEmpty :case ResultTypeString :_gfbde :=0.0;if _fgcg {_gfbde =_eeaad .AsNumber ().ValueNumber ;};if _gfbde > _abbf {_abbf =_gfbde ;};default:_ce .Log ("\u0075\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020"+_beece +"\u0028\u0029\u0020\u0061rg\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_eeaad .Type );};};if _abbf ==-_fb .MaxFloat64 {_abbf =0;};return MakeNumberResult (_abbf );};

// Reference returns a string reference value to a cell.
func (_age CellRef )Reference (ctx Context ,ev Evaluator )Reference {return Reference {Type :ReferenceTypeCell ,Value :_age ._abe };};

// Decimal is an implementation of the Excel function DECIMAL() that parses a string
// in a given base and returns the numeric result.
func Decimal (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0044\u0045\u0043\u0049\u004d\u0041\u004c\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069r\u0065s\u0020\u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_bdfc :=args [0].AsString ();if _bdfc .Type !=ResultTypeString {return MakeErrorResult ("D\u0045\u0043\u0049\u004d\u0041\u004c\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0066\u0069\u0072\u0073t \u0061\u0072\u0067u\u006de\u006e\u0074");};_begb :=args [1].AsNumber ();if _begb .Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0045\u0043\u0049\u004dA\u004c\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ffdee :=_bdfc .ValueString ;if len (_ffdee )> 2&&(_bf .HasPrefix (_ffdee ,"\u0030\u0078")||_bf .HasPrefix (_ffdee ,"\u0030\u0058")){_ffdee =_ffdee [2:];};_dcaf ,_fcde :=_ad .ParseInt (_ffdee ,int (_begb .ValueNumber ),64);if _fcde !=nil {return MakeErrorResult ("\u0044\u0045C\u0049\u004d\u0041\u004c\u0028\u0029\u0020\u0065\u0072\u0072\u006f\u0072\u0020\u0069\u006e\u0020\u0063\u006f\u006e\u0076\u0065\u0072si\u006f\u006e");};return MakeNumberResult (float64 (_dcaf ));};

// Minute is an implementation of the Excel MINUTE() function.
func Minute (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u004d\u0049\u004e\u0055T\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u006fn\u0065\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_cac :=args [0];switch _cac .Type {case ResultTypeEmpty :return MakeNumberResult (0);case ResultTypeNumber :_dfaa :=_edgb (_cac .ValueNumber );return MakeNumberResult (float64 (_dfaa .Minute ()));case ResultTypeString :_cdfc :=_bf .ToLower (_cac .ValueString );if !_gbgg (_cdfc ){_ ,_ ,_ ,_cdb ,_bag :=_cfbgc (_cdfc );if _bag .Type ==ResultTypeError {_bag .ErrorMessage ="\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074s\u0020\u0066\u006f\u0072\u0020\u004d\u0049\u004e\u0055\u0054\u0045";return _bag ;};if _cdb {return MakeNumberResult (0);};};_ ,_cfef ,_ ,_ ,_ ,_cfba :=_fgad (_cdfc );if _cfba .Type ==ResultTypeError {return _cfba ;};return MakeNumberResult (float64 (_cfef ));default:return MakeErrorResult ("\u0049\u006ec\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0066\u006f\u0072\u0020\u004d\u0049NU\u0054\u0045");};};func (_efe *evCache )SetCache (key string ,value Result ){_efe ._adc .Lock ();_efe ._cge [key ]=value ;_efe ._adc .Unlock ();};var _adebf =map[string ]Function {};type cmpResult int8 ;var _agda =[...]int {123,-1000,-1000,74,163,103,163,163,-1000,-1000,-1000,-1000,163,-1000,-1000,-1000,-1000,-1000,-12,106,-1000,-1000,143,-1000,-1000,-1000,-1000,-1000,163,163,163,163,163,163,163,163,163,163,163,163,74,163,163,6,-28,74,-15,-15,60,10,-14,-1000,-1000,-1000,7,-1000,74,-15,-15,-23,-23,-1000,-8,-8,-8,-8,-8,-8,-4,33,-1000,163,163,-1000,-1000,10,-1000,163,-1000,-28,74,-1000,-1000,74};func _eebec (_ffag []Result )[]float64 {_gfa :=make ([]float64 ,0);for _ ,_bebd :=range _ffag {if _bebd .Type ==ResultTypeEmpty {continue ;};_bebd =_bebd .AsNumber ();switch _bebd .Type {case ResultTypeNumber :if !_bebd .IsBoolean {_gfa =append (_gfa ,_bebd .ValueNumber );};case ResultTypeList ,ResultTypeArray :_gfa =append (_gfa ,_eebec (_bebd .ListValues ())...);case ResultTypeString :default:_ce .Log ("\u0075\u006e\u0068\u0061\u006ed\u006c\u0065\u0064\u0020\u0065\u0078\u0074\u0072\u0061\u0063\u0074\u004e\u0075m\u0062\u0065\u0072\u0073\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_bebd .Type );};};return _gfa ;};

// ISEVEN is an implementation of the Excel ISEVEN() function.
func IsEven (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053\u0045VE\u004e\u0028\u0029\u0020\u0061\u0063\u0063\u0065\u0070t\u0073 \u0061 \u0073i\u006e\u0067\u006c\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0053\u0045\u0056\u0045\u004e \u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u006e\u0075\u006de\u0072\u0069\u0063\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_gaed :=int (args [0].ValueNumber );return MakeBoolResult (_gaed ==_gaed /2*2);};

// Searchb is an implementation of the Excel SEARCHB().
func Searchb (ctx Context ,ev Evaluator ,args []Result )Result {if !ctx .IsDBCS (){return Search (args );};_ggfg ,_geadd :=_cace ("\u0046\u0049\u004e\u0044",args );if _geadd .Type !=ResultTypeEmpty {return _geadd ;};_bcfb :=_bf .ToLower (_ggfg ._ebdbd );_gcfdd :=_bf .ToLower (_ggfg ._eegd );if _bcfb ==""{return MakeNumberResult (1.0);};_dffb :=_ggfg ._edfc -1;_ffge :=1;_gfaa :=0;for _fafa :=range _gcfdd {if _fafa !=0{_edae :=1;if _fafa -_gfaa > 1{_edae =2;};_ffge +=_edae ;};if _ffge > _dffb {_cbebe :=_bc .Index (_bcfb ,_gcfdd [_fafa :]);if _cbebe ==0{return MakeNumberResult (float64 (_ffge ));};};_gfaa =_fafa ;};return MakeErrorResultType (ErrorTypeValue ,"\u004eo\u0074\u0020\u0066\u006f\u0075\u006ed");};func _gfdg (_bfbg ,_cce _bd .Time ,_gdgg int )_bd .Time {_edfd :=_bd .Date (_bfbg .Year (),_cce .Month (),_cce .Day (),0,0,0,0,_bd .UTC );if _edfd .After (_bfbg ){_edfd =_edfd .AddDate (-1,0,0);};for !_edfd .After (_bfbg ){_edfd =_edfd .AddDate (0,12/_gdgg ,0);};return _edfd ;};

// DateValue is an implementation of the Excel DATEVALUE() function.
func DateValue (args []Result )Result {if len (args )!=1||args [0].Type !=ResultTypeString {return MakeErrorResult ("\u0044A\u0054\u0045V\u0041\u004c\u0055\u0045 \u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069ng\u006c\u0065\u0020s\u0074\u0072i\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065n\u0074\u0073");};_dcb :=_bf .ToLower (args [0].ValueString );if !_gbc (_dcb ){_ ,_ ,_ ,_ ,_edfee ,_dfee :=_fgad (_dcb );if _dfee .Type ==ResultTypeError {_dfee .ErrorMessage ="\u0049\u006e\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020f\u006f\u0072\u0020\u0044\u0041\u0054\u0045V\u0041\u004c\u0055\u0045";return _dfee ;};if _edfee {return MakeNumberResult (0);};};_dfdc ,_egf ,_faaa ,_ ,_ebea :=_cfbgc (_dcb );if _ebea .Type ==ResultTypeError {return _ebea ;};return MakeNumberResult (_ebe (_dfdc ,_egf ,_faaa ));};func _fecd ()yyParser {return &yyParserImpl {}};

// IsDBCS returns false for the invalid reference context.
func (_dcdfg *ivr )IsDBCS ()bool {return false };func _fcdbe (_beba _bd .Time )bool {return _bd .Now ().Sub (_beba )>=_fcabg };func _egfc (_cbcgb Context ,_cdefb Evaluator ,_fcfcd ,_fdff string )Result {_ffcae ,_cfcae :=_d .ParseCellReference (_fcfcd );if _cfcae !=nil {return MakeErrorResult (_c .Sprintf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0070\u0061\u0072\u0073e\u0020r\u0061n\u0067e\u0020\u0025\u0073\u003a\u0020\u0065\u0072\u0072\u006f\u0072\u0020\u0025\u0073",_fcfcd ,_cfcae .Error ()));};_dedg ,_daebb :=_ffcae .ColumnIdx ,_ffcae .RowIdx ;_gcbef ,_egeda :=_d .ParseCellReference (_fdff );if _egeda !=nil {return MakeErrorResult (_c .Sprintf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0070\u0061\u0072\u0073e\u0020r\u0061n\u0067e\u0020\u0025\u0073\u003a\u0020\u0065\u0072\u0072\u006f\u0072\u0020\u0025\u0073",_fdff ,_egeda .Error ()));};_baeba ,_gdgag :=_gcbef .ColumnIdx ,_gcbef .RowIdx ;_gfac :=[][]Result {};for _gdffb :=_daebb ;_gdffb <=_gdgag ;_gdffb ++{_bcgafd :=[]Result {};for _fffd :=_dedg ;_fffd <=_baeba ;_fffd ++{_efdad :=_cbcgb .Cell (_c .Sprintf ("\u0025\u0073\u0025\u0064",_d .IndexToColumn (_fffd ),_gdffb ),_cdefb );_bcgafd =append (_bcgafd ,_efdad );};_gfac =append (_gfac ,_bcgafd );};if len (_gfac )==1{if len (_gfac [0])==1{return _gfac [0][0];};return MakeListResult (_gfac [0]);};return MakeArrayResult (_gfac );};

// MDeterm is an implementation of the Excel MDETERM which finds the determinant
// of a matrix.
func MDeterm (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u004d\u0044\u0045T\u0045\u0052\u004d\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0061\u0072\u0072\u0061\u0079 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_eacd :=args [0];if _eacd .Type !=ResultTypeArray {return MakeErrorResult ("\u004d\u0044\u0045T\u0045\u0052\u004d\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0061\u0072\u0072\u0061\u0079 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_fcg :=len (_eacd .ValueArray );for _ ,_gbgb :=range _eacd .ValueArray {if len (_gbgb )!=_fcg {return MakeErrorResult ("\u004d\u0044\u0045TE\u0052\u004d\u0028\u0029\u0020\u0072\u0065\u0071\u0075i\u0072e\u0073 \u0061 \u0073\u0071\u0075\u0061\u0072\u0065\u0020\u006d\u0061\u0074\u0072\u0069\u0078");};};return MakeNumberResult (_eecgf (_eacd .ValueArray ));};

// Eval evaluates and returns the result of a formula.
func (_edd *defEval )Eval (ctx Context ,formula string )Result {_cbd :=ParseString (formula );_cda :=make (chan Result );go func (){if _cbd ==nil {_cda <-MakeErrorResult (_c .Sprintf ("\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0070a\u0072\u0073\u0065\u0020\u0066\u006f\u0072\u006d\u0075\u006ca\u0020\u0025\u0073",formula ));}else {_edd .checkLastEvalIsRef (ctx ,_cbd );_cda <-_cbd .Eval (ctx ,_edd );};}();select{case _bad :=<-_cda :return _bad ;case <-_bd .After (_ece ):_ce .Log ("\u0055\u006e\u0069\u004ff\u0066\u0069\u0063\u0065\u0020\u0065\u0076\u0061\u006c\u0075a\u0074i\u006f\u006e\u0020\u0074\u0069\u006d\u0065o\u0075\u0074");return MakeNumberResult (0);};};func _bcfge (_dcdb string ,_cbceb _bd .Time )(_bd .Time ,error ){_dfcad ,_ ,_bcga :=_bg .ParseFloat (_dcdb ,10,128,_bg .ToNearestEven );if _bcga !=nil {return _bd .Time {},_bcga ;};_cgeee :=new (_bg .Float );_cgeee .SetUint64 (uint64 (24*_bd .Hour ));_dfcad .Mul (_dfcad ,_cgeee );_facc ,_ :=_dfcad .Uint64 ();_feec :=_cbceb .Add (_bd .Duration (_facc ));return _bdff (_feec ),nil ;};

// ISODD is an implementation of the Excel ISODD() function.
func IsOdd (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053\u004f\u0044\u0044\u0028)\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0053\u004f\u0044\u0044\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061 \u006eu\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_fegf :=int (args [0].ValueNumber );return MakeBoolResult (_fegf !=_fegf /2*2);};var _ceeg =map[string ]*_cf .Regexp {};

// Update updates references in the Range after removing a row/column.
func (_ebba Range )Update (q *_aac .UpdateQuery )Expression {_fcgbd :=_ebba ;if q .UpdateCurrentSheet {_fcgbd ._bcged =_ebba ._bcged .Update (q );_fcgbd ._bcec =_ebba ._bcec .Update (q );};return _fcgbd ;};var _ffeac =[...]string {};

// RoundUp is an implementation of the Excel ROUNDUP function that rounds a number
// up to a specified number of digits.
func RoundUp (args []Result )Result {return _gfdf (args ,_eecc )};var _ffee =[...]int {0,7,3,3,3,8,8,8,8,1,1,1,2,2,2,2,2,14,15,15,17,17,4,4,4,13,5,6,6,6,6,6,6,6,12,12,12,12,12,12,12,12,12,12,12,12,9,9,9,16,16,11,10,10};func (_bdca *yyParserImpl )Lookahead ()int {return _bdca ._eabfc };

// Yielddisc implements the Excel YIELDDISC function.
func Yielddisc (args []Result )Result {_ffde :=len (args );if _ffde !=4&&_ffde !=5{return MakeErrorResult ("\u0059\u0049\u0045\u004c\u0044D\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020f\u006f\u0075\u0072\u0020\u006f\u0072\u0020\u0066\u0069\u0076\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_gacb ,_begc ,_aede :=_aaf (args [0],args [1],"\u0059I\u0045\u004c\u0044\u0044\u0049\u0053C");if _aede .Type ==ResultTypeError {return _aede ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0049\u0045\u004c\u0044\u0044\u0049S\u0043\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0070\u0072\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dgef :=args [2].ValueNumber ;if _dgef <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0059\u0049E\u004c\u0044\u0044\u0049\u0053C\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0070\u0072\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0049\u0045\u004c\u0044D\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020r\u0065\u0064\u0065\u006d\u0070\u0074\u0069\u006f\u006e\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et");};_decc :=args [3].ValueNumber ;if _decc <=0{return MakeErrorResultType (ErrorTypeNum ,"YI\u0045\u004cD\u0044\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0072\u0065\u0064\u0065\u006d\u0070\u0074\u0069\u006f\u006e\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076e\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072g\u0075m\u0065\u006et");};_gdfe :=0;if _ffde ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0049E\u004c\u0044\u0044\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0062\u0061\u0073\u0069\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gdfe =int (args [4].ValueNumber );if !_fdgc (_gdfe ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0062\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074 \u0066\u006f\u0072\u0020\u0059I\u0045\u004cD\u0044\u0049\u0053\u0043");};};_eaagg ,_aede :=_gbab (_gacb ,_begc ,_gdfe );if _aede .Type ==ResultTypeError {return _aede ;};return MakeNumberResult ((_decc /_dgef -1)/_eaagg );};

// T is an implementation of the Excel T function that returns whether the
// argument is text.
func T (args []Result )Result {if len (args )!=1{return MakeErrorResult ("T\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0061\u0020\u0073i\u006e\u0067\u006c\u0065\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_cbac :=args [0];if _cbac .Type ==ResultTypeError ||_cbac .Type ==ResultTypeString {return _cbac ;};return _fbee ;};

// Reference returns a string reference value to a vertical range with prefix.
func (_debdd PrefixVerticalRange )Reference (ctx Context ,ev Evaluator )Reference {_ccgbe :=_debdd ._egbff .Reference (ctx ,ev );return Reference {Type :ReferenceTypeVerticalRange ,Value :_debdd .verticalRangeReference (_ccgbe .Value )};};

// MakeEmptyResult is ued when parsing an empty argument.
func MakeEmptyResult ()Result {return Result {Type :ResultTypeEmpty }};

// SeriesSum implements the Excel SERIESSUM function.
func SeriesSum (args []Result )Result {if len (args )!=4{return MakeErrorResult ("\u0053\u0045\u0052\u0049\u0045\u0053\u0053\u0055\u004d\u0028\u0029\u0020\u0072\u0065\u0071u\u0069r\u0065\u0073\u0020\u0034\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_eefd :=args [0].AsNumber ();_cdabc :=args [1].AsNumber ();_fgcc :=args [2].AsNumber ();_cbgd :=args [3].ListValues ();if _eefd .Type !=ResultTypeNumber ||_cdabc .Type !=ResultTypeNumber ||_fgcc .Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u0045\u0052\u0049\u0045\u0053S\u0055\u004d\u0028)\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0069\u0072\u0073t\u0020\u0074\u0068\u0072\u0065e \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063");};_bfbdb :=float64 (0);for _eged ,_egbe :=range _cbgd {_bfbdb +=_egbe .ValueNumber *_fb .Pow (_eefd .ValueNumber ,_cdabc .ValueNumber +float64 (_eged )*_fgcc .ValueNumber );};return MakeNumberResult (_bfbdb );};

// Match implements the MATCH function.
func Match (args []Result )Result {_acg :=len (args );if _acg !=2&&_acg !=3{return MakeErrorResult ("\u004d\u0041T\u0043\u0048\u0020\u0072e\u0071\u0075i\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020o\u0072\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_eddg :=1;if _acg ==3&&args [2].Type !=ResultTypeEmpty {if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u004d\u0041\u0054\u0043\u0048\u0020\u0072\u0065q\u0075\u0069\u0072es\u0020\u0074\u0068\u0065\u0020\u0074h\u0069\u0072\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f \u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006db\u0065\u0072");};_fcdc :=args [2].ValueNumber ;if _fcdc ==-1||_fcdc ==0{_eddg =int (_fcdc );};};_gbdc :=args [1];var _bdag []Result ;switch _gbdc .Type {case ResultTypeList :_bdag =_gbdc .ValueList ;case ResultTypeArray :_eafg :=_gbdc .ValueArray ;for _ ,_cdeg :=range _eafg {if len (_cdeg )!=1{return MakeErrorResult ("\u004d\u0041\u0054\u0043\u0048\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068e\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006f\u006e\u0065\u002dd\u0069\u006d\u0065\u006e\u0073\u0069o\u006e\u0061l\u0020\u0072a\u006eg\u0065");};_bdag =append (_bdag ,_cdeg [0]);};default:return MakeErrorResult ("\u004d\u0041\u0054\u0043\u0048\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068e\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006f\u006e\u0065\u002dd\u0069\u006d\u0065\u006e\u0073\u0069o\u006e\u0061l\u0020\u0072a\u006eg\u0065");};_aeea :=_cdadc (args [0]);switch _eddg {case 0:for _efgcg ,_cabg :=range _bdag {if _faec (_cabg ,_aeea ){return MakeNumberResult (float64 (_efgcg +1));};};case -1:for _gccc :=0;_gccc < len (_bdag );_gccc ++{if _faec (_bdag [_gccc ],_aeea ){return MakeNumberResult (float64 (_gccc +1));};if _aeea ._efega &&(_bdag [_gccc ].ValueNumber < _aeea ._dgcbf ){if _gccc ==0{return MakeErrorResultType (ErrorTypeNA ,"");};return MakeNumberResult (float64 (_gccc ));};};case 1:for _cdgg :=0;_cdgg < len (_bdag );_cdgg ++{if _faec (_bdag [_cdgg ],_aeea ){return MakeNumberResult (float64 (_cdgg +1));};if _aeea ._efega &&(_bdag [_cdgg ].ValueNumber > _aeea ._dgcbf ){if _cdgg ==0{return MakeErrorResultType (ErrorTypeNA ,"");};return MakeNumberResult (float64 (_cdgg ));};};};return MakeErrorResultType (ErrorTypeNA ,"");};type countMode byte ;func _egfda (_dcbfd ,_bfed Expression )(Expression ,Expression ,error ){_egcdb ,_gage :=_dcbfd .(CellRef );if !_gage {return nil ,nil ,_b .New (_c .Sprintf ("\u0049\u006e\u0063\u006frr\u0065\u0063\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020%\u0073",_dcbfd .String ()));};_bbded ,_gage :=_bfed .(CellRef );if !_gage {return nil ,nil ,_b .New (_c .Sprintf ("\u0049\u006e\u0063\u006frr\u0065\u0063\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020%\u0073",_bfed .String ()));};_cceg ,_acgd :=_d .ParseCellReference (_egcdb ._abe );if _acgd !=nil {return nil ,nil ,_acgd ;};_decag ,_baff :=_d .ParseCellReference (_bbded ._abe );if _baff !=nil {return nil ,nil ,_baff ;};_cfceb :=false ;if _cceg .RowIdx > _decag .RowIdx {_cfceb =true ;_cceg .RowIdx ,_decag .RowIdx =_decag .RowIdx ,_cceg .RowIdx ;};if _cceg .ColumnIdx > _decag .ColumnIdx {_cfceb =true ;_cceg .ColumnIdx ,_decag .ColumnIdx =_decag .ColumnIdx ,_cceg .ColumnIdx ;_cceg .Column ,_decag .Column =_decag .Column ,_cceg .Column ;};if _cfceb {return NewCellRef (_cceg .String ()),NewCellRef (_decag .String ()),nil ;};return _dcbfd ,_bfed ,nil ;};

// ISREF is an implementation of the Excel ISREF() function.
func IsRef (ctx Context ,ev Evaluator ,args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053\u0052\u0045\u0046\u0028)\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};return MakeBoolResult (ev .LastEvalIsRef ());};

// NewBool constructs a new boolean expression.
func NewBool (v string )Expression {_aad ,_bef :=_ad .ParseBool (v );if _bef !=nil {_ce .Log ("\u0065\u0072\u0072\u006f\u0072\u0020p\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0075\u006ca\u0020\u0062\u006f\u006f\u006c\u0020\u0025s\u003a\u0020\u0025\u0073",v ,_bef );};return Bool {_fdaf :_aad };};type yyLexer interface{Lex (_dbbga *yySymType )int ;Error (_bfce string );};

// Upper is an implementation of the Excel UPPER function that returns a upper
// case version of a string.
func Upper (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0055\u0050\u0050\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0061\u0020\u0073\u0069\u006eg\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_efeee :=args [0].AsString ();if _efeee .Type !=ResultTypeString {return MakeErrorResult ("\u0055\u0050\u0050\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0061\u0020\u0073\u0069\u006eg\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};return MakeStringResult (_bf .ToUpper (_efeee .ValueString ));};

// Update makes a reference to point to one of the neighboring cells after removing a row/column with respect to the update type.
func (_fbe CellRef )Update (q *_aac .UpdateQuery )Expression {if q .UpdateCurrentSheet {_fbe ._abe =_cfc (_fbe ._abe ,q );};return _fbe ;};

// Find is an implementation of the Excel FIND().
func Find (args []Result )Result {_ffbab ,_cfgad :=_cace ("\u0046\u0049\u004e\u0044",args );if _cfgad .Type !=ResultTypeEmpty {return _cfgad ;};_ggeb :=_ffbab ._ebdbd ;if _ggeb ==""{return MakeNumberResult (1.0);};_gdcda :=_ffbab ._eegd ;_afcd :=_ffbab ._edfc ;_fbdfa :=1;for _acfdf :=range _gdcda {if _fbdfa < _afcd {_fbdfa ++;continue ;};_ffade :=_bf .Index (_gdcda [_acfdf :],_ggeb );if _ffade ==0{return MakeNumberResult (float64 (_fbdfa ));};_fbdfa ++;};return MakeErrorResultType (ErrorTypeValue ,"\u004eo\u0074\u0020\u0066\u006f\u0075\u006ed");};

// Coupdaysnc implements the Excel COUPDAYSNC function.
func Coupdaysnc (args []Result )Result {_gafg ,_ggff :=_ced (args ,"\u0043\u004f\u0055\u0050\u0044\u0041\u0059\u0053\u004e\u0043");if _ggff .Type ==ResultTypeError {return _ggff ;};return MakeNumberResult (_fggd (_gafg ._ebbf ,_gafg ._fee ,_gafg ._fea ,_gafg ._ffba ));};

// Eval evaluates and returns the result of an error expression.
func (_cbg Error )Eval (ctx Context ,ev Evaluator )Result {return MakeErrorResult (_cbg ._edf )};const _bead =57350;const _agaba =57344;

// Combina is an implementation of the Excel COMBINA function whic returns the
// number of combinations with repetitions.
func Combina (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0043\u004f\u004dB\u0049\u004e\u0041\u0028)\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_aeac :=args [0].AsNumber ();_adebe :=args [1].AsNumber ();if _aeac .Type !=ResultTypeNumber ||_adebe .Type !=ResultTypeNumber {return MakeErrorResult ("\u0043\u004fMB\u0049\u004e\u0041(\u0029\u0020\u0072\u0065qui\u0072es\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_fdeb :=_fb .Trunc (_aeac .ValueNumber );_cdbg :=_fb .Trunc (_adebe .ValueNumber );if _fdeb < _cdbg {return MakeErrorResult ("\u0043O\u004d\u0042\u0049\u004e\u0041\u0028\u0029\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u006e\u0020\u003e\u0020\u006b");};if _fdeb ==0{return MakeNumberResult (0);};args [0]=MakeNumberResult (_fdeb +_cdbg -1);args [1]=MakeNumberResult (_fdeb -1);return Combin (args );};

// SumSquares is an implementation of the Excel SUMSQ() function.
func SumSquares (args []Result )Result {_aeaa :=MakeNumberResult (0);for _ ,_daecfg :=range args {_daecfg =_daecfg .AsNumber ();switch _daecfg .Type {case ResultTypeNumber :_aeaa .ValueNumber +=_daecfg .ValueNumber *_daecfg .ValueNumber ;case ResultTypeList ,ResultTypeArray :_ddcc :=SumSquares (_daecfg .ListValues ());if _ddcc .Type !=ResultTypeNumber {return _ddcc ;};_aeaa .ValueNumber +=_ddcc .ValueNumber ;case ResultTypeString :case ResultTypeError :return _daecfg ;case ResultTypeEmpty :default:return MakeErrorResult (_c .Sprintf ("\u0075\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0053\u0055\u004dS\u0051\u0055\u0041\u0052\u0045\u0053(\u0029\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079p\u0065\u0020\u0025\u0073",_daecfg .Type ));};};return _aeaa ;};func _ebbc (_ggc ,_gaa ,_gfdb float64 )float64 {return (_ggc *3600+_gaa *60+_gfdb )/86400};const _gaddd =57346;const _gfggff =57356;

// String returns a string representation of CellRef.
func (_da CellRef )String ()string {return _da ._abe };

// Even is an implementation of the Excel EVEN() that rounds a number to the
// nearest even integer.
func Even (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0045\u0056\u0045\u004e(\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u006fn\u0065\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_caacg :=args [0].AsNumber ();if _caacg .Type !=ResultTypeNumber {return MakeErrorResult ("\u0045\u0056\u0045N\u0028\u0029\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gdafe :=_fb .Signbit (_caacg .ValueNumber );_dfdg ,_gcfe :=_fb .Modf (_caacg .ValueNumber /2);_cdebb :=_dfdg *2;if _gcfe !=0{if !_gdafe {_cdebb +=2;}else {_cdebb -=2;};};return MakeNumberResult (_cdebb );};func init (){_aedb ();RegisterFunction ("\u0041V\u0045\u0052\u0041\u0047\u0045",Average );RegisterFunction ("\u0041\u0056\u0045\u0052\u0041\u0047\u0045\u0041",Averagea );RegisterFunction ("\u0043\u004f\u0055N\u0054",Count );RegisterFunction ("\u0043\u004f\u0055\u004e\u0054\u0041",Counta );RegisterFunction ("\u0043O\u0055\u004e\u0054\u0049\u0046",CountIf );RegisterFunction ("\u0043\u004f\u0055\u004e\u0054\u0049\u0046\u0053",CountIfs );RegisterFunction ("\u0043\u004f\u0055\u004e\u0054\u0042\u004c\u0041\u004e\u004b",CountBlank );RegisterFunction ("\u004d\u0041\u0058",Max );RegisterFunction ("\u004d\u0041\u0058\u0041",MaxA );RegisterFunction ("\u004d\u0041\u0058\u0049\u0046\u0053",MaxIfs );RegisterFunction ("\u005f\u0078\u006cf\u006e\u002e\u004d\u0041\u0058\u0049\u0046\u0053",MaxIfs );RegisterFunction ("\u004d\u0045\u0044\u0049\u0041\u004e",Median );RegisterFunction ("\u004d\u0049\u004e",Min );RegisterFunction ("\u004d\u0049\u004e\u0041",MinA );RegisterFunction ("\u004d\u0049\u004e\u0049\u0046\u0053",MinIfs );RegisterFunction ("\u005f\u0078\u006cf\u006e\u002e\u004d\u0049\u004e\u0049\u0046\u0053",MinIfs );};

// Ipmt implements the Excel IPMT function.
func Ipmt (args []Result )Result {_cgee :=len (args );if _cgee < 4||_cgee > 6{return MakeErrorResult ("\u0049P\u004d\u0054\u0020\u0072\u0065\u0071\u0075ir\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0061r\u0067\u0075m\u0065\u006e\u0074s\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0062\u0065\u0074\u0077\u0065\u0065n\u0020\u0066ou\u0072\u0020\u0061n\u0064\u0020\u0073\u0069\u0078");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("I\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_fdcg :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0050\u004dT\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_geda :=args [1].ValueNumber ;if _geda <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u0050\u004d\u0054\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006fd\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006ff\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dbda :=args [2].ValueNumber ;if _dbda <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062er\u0020o\u0066\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f \u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0050\u004d\u0054\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0020\u0076\u0061\u006c\u0075\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_cggb :=args [3].ValueNumber ;_ddb :=0.0;if _cgee > 4&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0050\u004d\u0054\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s \u0066\u0075\u0074\u0075\u0072\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_ddb =args [4].ValueNumber ;};_ebab :=0;if _cgee ==6&&args [5].Type !=ResultTypeEmpty {if args [5].Type !=ResultTypeNumber {return MakeErrorResult ("I\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0079\u0070\u0065\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_ebab =int (args [5].ValueNumber );if _ebab !=0{_ebab =1;};};return MakeNumberResult (_fbc (_fdcg ,_geda ,_dbda ,_cggb ,_ddb ,_ebab ));};

// Fact is an implementation of the excel FACT function which returns the
// factorial of a positive numeric input.
func Fact (args []Result )Result {if len (args )!=1{return MakeErrorResult ("F\u0041\u0043\u0054\u0028\u0029\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067u\u006de\u006e\u0074");};_accd :=args [0].AsNumber ();if _accd .Type !=ResultTypeNumber {return MakeErrorResult ("F\u0041\u0043\u0054\u0028\u0029\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067u\u006de\u006e\u0074");};if _accd .ValueNumber < 0{return MakeErrorResult ("\u0046\u0041\u0043\u0054\u0028\u0029\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u006f\u006e\u006c\u0079\u0020\u0070\u006f\u0073\u0069t\u0069\u0076\u0065\u0020\u0061r\u0067\u0075m\u0065\u006e\u0074\u0073");};return MakeNumberResult (_cefdb (_accd .ValueNumber ));};

// String returns a string representation of PrefixExpr.
func (_dcca PrefixExpr )String ()string {return _c .Sprintf ("\u0025\u0073\u0021%\u0073",_dcca ._cfdf .String (),_dcca ._gfgd .String ());};func _ebed (_cgeg ,_dfcf ,_aggb ,_bcb int )int {if !_ada (_bcb ){return _aggb ;};_abfa :=_aggb ;_fbg :=_fcf (_cgeg ,_dfcf );if _abfa > 30||_aggb >=_fbg ||_abfa >=_fbg {_abfa =30;};return _abfa ;};const _daaff =1;

// True is an implementation of the Excel TRUE() function.  It takes no
// arguments.
func True (args []Result )Result {if len (args )!=0{return MakeErrorResult ("\u0054\u0052\u0055E \u0074\u0061\u006b\u0065\u0073\u0020\u006e\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};return MakeBoolResult (true );};

// NewConstArrayExpr constructs a new constant array expression with a given data.
func NewConstArrayExpr (data [][]Expression )Expression {return &ConstArrayExpr {_ge :data }};func _gdeg (_acde Result ,_aafbd *criteriaParsed )bool {if _acde .IsBoolean {return false ;};_ccdfg :=_acde .Type ;if _aafbd ._efega {return _ccdfg ==ResultTypeNumber &&_acde .ValueNumber ==_aafbd ._dgcbf ;}else if _ccdfg ==ResultTypeNumber {return _cagf (_acde .ValueNumber ,_aafbd ._ddfe );};return _bcgad (_acde ,_aafbd );};var _bgabf =[...]string {"\u0024\u0065\u006e\u0064","\u0065\u0072\u0072o\u0072","\u0024\u0075\u006e\u006b","t\u006fk\u0065\u006e\u0048\u006f\u0072\u0069\u007a\u006fn\u0074\u0061\u006c\u0052an\u0067\u0065","\u0074o\u006be\u006e\u0056\u0065\u0072\u0074i\u0063\u0061l\u0052\u0061\u006e\u0067\u0065","\u0074\u006f\u006b\u0065\u006e\u0052\u0065\u0073\u0065\u0072\u0076\u0065d\u004e\u0061\u006d\u0065","\u0074\u006f\u006be\u006e\u0044\u0044\u0045\u0043\u0061\u006c\u006c","\u0074\u006f\u006b\u0065\u006e\u004c\u0065\u0078\u0045\u0072\u0072\u006f\u0072","\u0074o\u006be\u006e\u004e\u0061\u006d\u0065\u0064\u0052\u0061\u006e\u0067\u0065","\u0074o\u006b\u0065\u006e\u0042\u006f\u006fl","t\u006f\u006b\u0065\u006e\u004e\u0075\u006d\u0062\u0065\u0072","t\u006f\u006b\u0065\u006e\u0053\u0074\u0072\u0069\u006e\u0067","\u0074\u006f\u006b\u0065\u006e\u0045\u0072\u0072\u006f\u0072","\u0074\u006f\u006b\u0065\u006e\u0045\u0072\u0072\u006f\u0072\u0052\u0065\u0066","\u0074\u006f\u006b\u0065\u006e\u0053\u0068\u0065\u0065\u0074","\u0074o\u006b\u0065\u006e\u0043\u0065\u006cl","t\u006fk\u0065\u006e\u0046\u0075\u006e\u0063\u0074\u0069o\u006e\u0042\u0075\u0069lt\u0069\u006e","t\u006f\u006b\u0065\u006e\u004c\u0042\u0072\u0061\u0063\u0065","t\u006f\u006b\u0065\u006e\u0052\u0042\u0072\u0061\u0063\u0065","t\u006f\u006b\u0065\u006e\u004c\u0050\u0061\u0072\u0065\u006e","t\u006f\u006b\u0065\u006e\u0052\u0050\u0061\u0072\u0065\u006e","\u0074o\u006b\u0065\u006e\u0050\u006c\u0075s","\u0074\u006f\u006b\u0065\u006e\u004d\u0069\u006e\u0075\u0073","\u0074o\u006b\u0065\u006e\u004d\u0075\u006ct","\u0074\u006f\u006b\u0065\u006e\u0044\u0069\u0076","\u0074\u006f\u006b\u0065\u006e\u0045\u0078\u0070","\u0074o\u006b\u0065\u006e\u0045\u0051","\u0074o\u006b\u0065\u006e\u004c\u0054","\u0074o\u006b\u0065\u006e\u0047\u0054","\u0074\u006f\u006b\u0065\u006e\u004c\u0045\u0051","\u0074\u006f\u006b\u0065\u006e\u0047\u0045\u0051","\u0074o\u006b\u0065\u006e\u004e\u0045","\u0074\u006f\u006b\u0065\u006e\u0043\u006f\u006c\u006f\u006e","\u0074\u006f\u006b\u0065\u006e\u0043\u006f\u006d\u006d\u0061","\u0074\u006f\u006b\u0065\u006e\u0041\u006d\u0070\u0065r\u0073\u0061\u006e\u0064","\u0074o\u006b\u0065\u006e\u0053\u0065\u006di"};

// Clean is an implementation of the Excel CLEAN function that removes
// unprintable characters.
func Clean (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0043\u004c\u0045\u0041\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0061\u0020\u0073\u0069\u006eg\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_dadd :=args [0].AsString ();if _dadd .Type !=ResultTypeString {return MakeErrorResult ("\u0043\u0048\u0041\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0073t\u0072\u0069\u006e\u0067\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_bbca :=_fd .Buffer {};for _ ,_edcc :=range _dadd .ValueString {if _aa .IsPrint (_edcc ){_bbca .WriteRune (_edcc );};};return MakeStringResult (_bbca .String ());};

// Mirr implements the Excel MIRR function.
func Mirr (args []Result )Result {if len (args )!=3{return MakeErrorResult ("\u004d\u0049R\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006den\u0074\u0073");};if args [0].Type !=ResultTypeList &&args [0].Type !=ResultTypeArray {return MakeErrorResult ("M\u0049\u0052\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0076\u0061\u006c\u0075\u0065s\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020ar\u0072\u0061\u0079 \u0074y\u0070\u0065");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u004d\u0049\u0052\u0052\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s \u0066\u0069\u006e\u0061\u006e\u0063e\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_faeda :=args [1].ValueNumber +1;if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u004d\u0049\u0052\u0052\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0069\u006e\u0076\u0065\u0073\u0074\u0020\u0072\u0061\u0074\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_cefd :=args [2].ValueNumber +1;if _cefd ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"");};_ccgb :=_eabdb (args [0]);_cdad :=float64 (len (_ccgb ));_becfg ,_gccg :=0.0,0.0;_febf ,_daff :=1.0,1.0;_ebbcd ,_edb :=false ,false ;for _ ,_ebfg :=range _ccgb {for _ ,_dfbc :=range _ebfg {if _dfbc .Type ==ResultTypeNumber &&!_dfbc .IsBoolean {_bacg :=_dfbc .ValueNumber ;if _bacg ==0{continue ;}else {if _bacg > 0{_ebbcd =true ;_gccg +=_dfbc .ValueNumber *_daff ;}else {_edb =true ;_becfg +=_dfbc .ValueNumber *_febf ;};_febf /=_faeda ;_daff /=_cefd ;};};};};if !_ebbcd ||!_edb {return MakeErrorResultType (ErrorTypeDivideByZero ,"");};_agfb :=-_gccg /_becfg ;_agfb *=_fb .Pow (_cefd ,_cdad -1);_agfb =_fb .Pow (_agfb ,1/(_cdad -1));return MakeNumberResult (_agfb -1);};

// ISERR is an implementation of the Excel ISERR() function.
func IsErr (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053\u0045\u0052\u0052\u0028)\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};return MakeBoolResult (args [0].Type ==ResultTypeError &&args [0].ValueString !="\u0023\u004e\u002f\u0041");};

// Reference returns a string reference value to a named range.
func (_fdefb NamedRangeRef )Reference (ctx Context ,ev Evaluator )Reference {return Reference {Type :ReferenceTypeNamedRange ,Value :_fdefb ._acdfe };};

// NewNegate constructs a new negate expression.
func NewNegate (e Expression )Expression {return Negate {_efbc :e }};

// GetFilename returns an empty string for the invalid reference context.
func (_feefcc *ivr )GetFilename ()string {return ""};var _eaege =map[string ]FunctionComplex {};const (_fced cmpResult =0;_bacgf cmpResult =-1;_cdgac cmpResult =1;_bacc cmpResult =2;);

// Update returns the same object as updating sheet references does not affect String.
func (_gedde String )Update (q *_aac .UpdateQuery )Expression {return _gedde };func _eecgf (_fead [][]Result )float64 {if len (_fead )==2{_cggce :=_fead [0][0].AsNumber ();_abbb :=_fead [0][1].AsNumber ();_abfed :=_fead [1][0].AsNumber ();_bgad :=_fead [1][1].AsNumber ();if _cggce .Type !=ResultTypeNumber ||_abbb .Type !=ResultTypeNumber ||_abfed .Type !=ResultTypeNumber ||_bgad .Type !=ResultTypeNumber {return _fb .NaN ();};return _cggce .ValueNumber *_bgad .ValueNumber -_abfed .ValueNumber *_abbb .ValueNumber ;};_adbg :=float64 (0);_dccf :=float64 (1);for _fbdb :=range _fead {_adbg +=_dccf *_fead [0][_fbdb ].ValueNumber *_eecgf (_aafbf (_fead ,_fbdb ));_dccf *=-1;};return _adbg ;};func _gce (_bca ,_begd []float64 ,_acdf float64 )Result {_abfdg :=false ;_eeab :=false ;for _eefc :=0;_eefc < len (_bca );_eefc ++{if _bca [_eefc ]> 0{_abfdg =true ;};if _bca [_eefc ]< 0{_eeab =true ;};};if !_abfdg ||!_eeab {return MakeErrorResultType (ErrorTypeNum ,"");};_cbbdb :=_acdf ;_ebeg :=1e-10;_eafc :=0;_dbfa :=50;_eddb :=false ;for {_faag :=_cbcc (_bca ,_begd ,_cbbdb );_cgdf :=_cbbdb -_faag /_fdcd (_bca ,_begd ,_cbbdb );_fbddc :=_fb .Abs (_cgdf -_cbbdb );_cbbdb =_cgdf ;_eafc ++;if _fbddc <=_ebeg ||_fb .Abs (_faag )<=_ebeg {break ;};if _eafc > _dbfa {_eddb =true ;break ;};};if _eddb ||_fb .IsNaN (_cbbdb )||_fb .IsInf (_cbbdb ,0){return MakeErrorResultType (ErrorTypeNum ,"");};return MakeNumberResult (_cbbdb );};type yySymType struct{_eagbd int ;_befg *node ;_cbga Expression ;_ggcb []Expression ;_bfag [][]Expression ;};func (_dbdcg ReferenceType )String ()string {if _dbdcg >=ReferenceType (len (_gdfga )-1){return _c .Sprintf ("\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0054\u0079\u0070e\u0028\u0025\u0064\u0029",_dbdcg );};return _ebeaf [_gdfga [_dbdcg ]:_gdfga [_dbdcg +1]];};func _efdg (_fegb Context ,_aegdgb ,_feefc int )(string ,string ){_fbfgb :="\u0041"+_ad .Itoa (_aegdgb );_ccgbg :=_fegb .LastColumn (_aegdgb ,_feefc );_fgbd :=_ccgbg +_ad .Itoa (_feefc );return _fbfgb ,_fgbd ;};const _ebeaf ="\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0054\u0079\u0070\u0065\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0054\u0079\u0070\u0065\u0043\u0065\u006c\u006c\u0052\u0065\u0066\u0065r\u0065\u006ec\u0065\u0054\u0079\u0070e\u004e\u0061\u006d\u0065\u0064\u0052\u0061\u006e\u0067\u0065R\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0054y\u0070\u0065\u0052\u0061\u006e\u0067\u0065\u0052\u0065\u0066e\u0072\u0065\u006ec\u0065\u0054\u0079\u0070\u0065\u0053\u0068e\u0065\u0074";type cumulArgs struct{_abb float64 ;_aece float64 ;_dccd float64 ;_bfdba float64 ;_fgb float64 ;_ceca int ;};

// Eval evaluates the binary expression using the context given.
func (_agc BinaryExpr )String ()string {_dee :="";switch _agc ._df {case BinOpTypePlus :_dee ="\u002b";case BinOpTypeMinus :_dee ="\u002d";case BinOpTypeMult :_dee ="\u002a";case BinOpTypeDiv :_dee ="\u002f";case BinOpTypeExp :_dee ="\u005e";case BinOpTypeLT :_dee ="\u003c";case BinOpTypeGT :_dee ="\u003e";case BinOpTypeEQ :_dee ="\u003d";case BinOpTypeLEQ :_dee ="\u003c\u003d";case BinOpTypeGEQ :_dee ="\u003e\u003d";case BinOpTypeNE :_dee ="\u003c\u003e";case BinOpTypeConcat :_dee ="\u0026";};return _agc ._g .String ()+_dee +_agc ._fde .String ();};var _eebed =[]ri {{1000,"\u004d"},{999,"\u0049\u004d"},{995,"\u0056\u004d"},{990,"\u0058\u004d"},{950,"\u004c\u004d"},{900,"\u0043\u004d"},{500,"\u0044"},{499,"\u0049\u0044"},{495,"\u0056\u0044"},{490,"\u0058\u0044"},{450,"\u004c\u0044"},{400,"\u0043\u0044"},{100,"\u0043"},{99,"\u0049\u0043"},{90,"\u0058\u0043"},{50,"\u004c"},{45,"\u0056\u004c"},{40,"\u0058\u004c"},{10,"\u0058"},{9,"\u0049\u0058"},{5,"\u0056"},{4,"\u0049\u0056"},{1,"\u0049"}};func (_gb BinOpType )String ()string {if _gb >=BinOpType (len (_caa )-1){return _c .Sprintf ("\u0042\u0069\u006e\u004f\u0070\u0054\u0079\u0070\u0065\u0028\u0025\u0064\u0029",_gb );};return _cb [_caa [_gb ]:_caa [_gb +1]];};

// Eval evaluates and returns an expression with prefix.
func (_afagg PrefixExpr )Eval (ctx Context ,ev Evaluator )Result {_dbaba :=_afagg ._cfdf .Reference (ctx ,ev );switch _dbaba .Type {case ReferenceTypeSheet :if _aebf (_dbaba ,ctx ){return MakeErrorResultType (ErrorTypeName ,_c .Sprintf ("\u0053h\u0065e\u0074\u0020\u0025\u0073\u0020n\u006f\u0074 \u0066\u006f\u0075\u006e\u0064",_dbaba .Value ));};_gfedd :=ctx .Sheet (_dbaba .Value );return _afagg ._gfgd .Eval (_gfedd ,ev );default:return MakeErrorResult (_c .Sprintf ("\u006e\u006f\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0020\u0066\u006f\u0072\u0020r\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_dbaba .Type ));};};func _baaeag (_fafg Result )[]Result {_dafg :=_fafg .ValueList ;if _fafg .Type ==ResultTypeArray {_dafg =nil ;for _ ,_aaeae :=range _fafg .ValueArray {if len (_aaeae )> 0{_dafg =append (_dafg ,_aaeae [0]);}else {_dafg =append (_dafg ,_fbee );};};};return _dafg ;};func (_bbfa VerticalRange )verticalRangeReference ()string {return _c .Sprintf ("\u0025\u0073\u003a%\u0073",_bbfa ._caafg ,_bbfa ._beege );};

// Cell is an implementation of the Excel CELL function that returns information
// about the formatting, location, or contents of a cell.
func Cell (ctx Context ,ev Evaluator ,args []Result )Result {if len (args )!=1&&len (args )!=2{return MakeErrorResult ("\u0043\u0045\u004cL \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020o\u006ee\u0020o\u0072 \u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_bcff :=args [0].AsString ();if _bcff .Type !=ResultTypeString {return MakeErrorResult ("\u0043\u0045\u004c\u004c\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065 \u0073t\u0072\u0069\u006e\u0067");};_gffd :="\u0041\u0031";if len (args )==2{_fddc :=args [1].Ref ;if _fddc .Type !=ReferenceTypeCell {return MakeErrorResult ("\u0043\u0045\u004c\u004c\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064 \u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u0074\u0079p\u0065\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065");};_gffd =_fddc .Value ;};switch _bcff .ValueString {case "\u0061d\u0064\u0072\u0065\u0073\u0073":_cfab ,_ccdg :=_d .ParseCellReference (_gffd );if _ccdg !=nil {return MakeErrorResult ("I\u006e\u0063\u006f\u0072re\u0063t\u0020\u0072\u0065\u0066\u0065r\u0065\u006e\u0063\u0065\u003a\u0020"+_gffd );};_fdcdc :="\u0024"+_cfab .Column +"\u0024"+_ad .Itoa (int (_cfab .RowIdx ));if _cfab .SheetName !=""{_fdcdc =_cfab .SheetName +"\u0021"+_fdcdc ;};return MakeStringResult (_fdcdc );case "\u0063\u006f\u006c":_dcegd ,_fdga :=_d .ParseCellReference (_gffd );if _fdga !=nil {return MakeErrorResult ("I\u006e\u0063\u006f\u0072re\u0063t\u0020\u0072\u0065\u0066\u0065r\u0065\u006e\u0063\u0065\u003a\u0020"+_gffd );};return MakeNumberResult (float64 (_dcegd .ColumnIdx +1));case "\u0063\u006f\u006co\u0072":_ebdb :=_bf .Contains (ctx .GetFormat (_gffd ),"\u005b\u0052\u0045D\u005d");return MakeBoolResult (_ebdb );case "\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073":return args [1];case "\u0066\u0069\u006c\u0065\u006e\u0061\u006d\u0065":return MakeStringResult (ctx .GetFilename ());case "\u0066\u006f\u0072\u006d\u0061\u0074":_fbef :="\u0047";_caaga :=ctx .GetFormat (_gffd );if _caaga =="\u0047e\u006e\u0065\u0072\u0061\u006c"||_daec .MatchString (_caaga ){_fbef ="\u0046\u0030";}else if _caaga =="\u0030\u0025"{_fbef ="\u0050\u0030";}else if _caaga =="\u004d\u004d\u004d\u0020\u0044\u0044"{_fbef ="\u0044\u0032";}else if _caaga =="\u004d\u004d\u002fY\u0059"{_fbef ="\u0044\u0033";}else if _caaga =="\u004d\u004d\u002f\u0044D/\u0059\u0059\u005c\u0020\u0048\u0048\u003a\u004d\u004d\u005c\u0020\u0041\u004d\u002fP\u004d"||_caaga =="M\u004d/\u0044\u0044\u002f\u0059\u0059\u0059\u0059\u005c \u0048\u0048\u003a\u004dM:\u0053\u0053"{_fbef ="\u0044\u0034";}else if _caaga =="\u004d\u004d\u005c\u002d\u0044\u0044"{_fbef ="\u0044\u0035";}else if _caaga =="\u0048H\u003aM\u004d\u003a\u0053\u0053\u005c\u0020\u0041\u004d\u002f\u0050\u004d"{_fbef ="\u0044\u0036";}else if _caaga =="\u0048\u0048\u003aM\u004d\u005c\u0020\u0041\u004d\u002f\u0050\u004d"{_fbef ="\u0044\u0037";}else if _caaga =="\u0048\u0048\u003a\u004d\u004d\u003a\u0053\u0053"{_fbef ="\u0044\u0038";}else if _caaga =="\u0048\u0048\u003aM\u004d"{_fbef ="\u0044\u0039";}else if _badfd .MatchString (_caaga ){_fbef ="\u002e\u0030";}else if _bagd .MatchString (_caaga ){_fbef ="\u002e\u0030\u0028\u0029";}else if _edcb .MatchString (_caaga ){_fbef ="\u0043\u0030";}else if _ffdg .MatchString (_caaga )||_daecf .MatchString (_caaga ){_fbef ="\u0044\u0031";}else if _afab :=_edgg .FindStringSubmatch (_caaga );len (_afab )> 1{_fbef ="\u0046"+_ad .Itoa (len (_afab [1]));}else if _bfddc :=_efcf .FindStringSubmatch (_caaga );len (_bfddc )> 1{_fbef ="\u002e"+_ad .Itoa (len (_bfddc [2]));}else if _debe :=_faebd .FindStringSubmatch (_caaga );len (_debe )> 1{_fbef ="\u0050"+_ad .Itoa (len (_debe [2]));}else if _gaba :=_dbca .FindStringSubmatch (_caaga );len (_gaba )> 1{_fbef ="\u0043"+_eeae (_gaba ,1);}else if _bcba :=_eecgc .FindStringSubmatch (_caaga );len (_bcba )> 1{_fbef ="\u0043"+_eeae (_bcba ,1);}else if _cafaf :=_acfg .FindStringSubmatch (_caaga );len (_cafaf )> 1{_fbef ="\u002e"+_eeae (_cafaf ,1)+"\u0028\u0029";}else if _adcef :=_dcea .FindStringSubmatch (_caaga );len (_adcef )> 1{_fbef ="\u002e"+_eeae (_adcef ,1);}else if _aacc :=_gbcg .FindStringSubmatch (_caaga );len (_aacc )> 1{_fbef ="\u0053"+_eeae (_aacc ,3);};if _fbef !="\u0047"&&_bf .Contains (_caaga ,"\u005b\u0052\u0045D\u005d"){_fbef +="\u002d";};return MakeStringResult (_fbef );case "p\u0061\u0072\u0065\u006e\u0074\u0068\u0065\u0073\u0065\u0073":_cdba :=ctx .GetFormat (_gffd );if _bbg .MatchString (_cdba ){return MakeNumberResult (1);}else {return MakeNumberResult (0);};case "\u0070\u0072\u0065\u0066\u0069\u0078":return MakeStringResult (ctx .GetLabelPrefix (_gffd ));case "\u0070r\u006f\u0074\u0065\u0063\u0074":_cgfbf :=0.0;if ctx .GetLocked (_gffd ){_cgfbf =1.0;};return MakeNumberResult (_cgfbf );case "\u0072\u006f\u0077":_cffg ,_egcc :=_d .ParseCellReference (_gffd );if _egcc !=nil {return MakeErrorResult ("I\u006e\u0063\u006f\u0072re\u0063t\u0020\u0072\u0065\u0066\u0065r\u0065\u006e\u0063\u0065\u003a\u0020"+_gffd );};return MakeNumberResult (float64 (_cffg .RowIdx ));case "\u0074\u0079\u0070\u0065":switch args [1].Type {case ResultTypeEmpty :return MakeStringResult ("\u0062");case ResultTypeString :return MakeStringResult ("\u006c");default:return MakeStringResult ("\u0076");};case "\u0077\u0069\u0064t\u0068":_agfa ,_aagb :=_d .ParseCellReference (_gffd );if _aagb !=nil {return MakeErrorResult ("I\u006e\u0063\u006f\u0072re\u0063t\u0020\u0072\u0065\u0066\u0065r\u0065\u006e\u0063\u0065\u003a\u0020"+_gffd );};if _agfa .SheetName ==""{return MakeNumberResult (ctx .GetWidth (int (_agfa .ColumnIdx )));}else {return MakeNumberResult (ctx .Sheet (_agfa .SheetName ).GetWidth (int (_agfa .ColumnIdx )));};};return MakeErrorResult ("\u0049\u006e\u0063or\u0072\u0065\u0063\u0074\u0020\u0066\u0069\u0072\u0073t\u0020a\u0072g\u0075m\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0043\u0045\u004c\u004c\u003a\u0020"+_bcff .ValueString );};const _dfaba int =30;func _cfga (_dce int ,_cbce _bd .Month ,_faeb int )int64 {if _dce ==1900&&int (_cbce )<=2{_faeb --;};_ecb :=_bd .Date (_dce ,_cbce ,_faeb ,0,0,0,0,_bd .UTC );return _ecb .Unix ();};

// Reference returns a string reference value to a range with prefix.
func (_bbdcc PrefixRangeExpr )Reference (ctx Context ,ev Evaluator )Reference {_cfbb :=_bbdcc ._abgaf .Reference (ctx ,ev );_cacd :=_bbdcc ._cdfed .Reference (ctx ,ev );_afgag :=_bbdcc ._ccbd .Reference (ctx ,ev );if _cfbb .Type ==ReferenceTypeSheet &&_cacd .Type ==ReferenceTypeCell &&_afgag .Type ==ReferenceTypeCell {return MakeRangeReference (_gbbdc (_cfbb ,_cacd ,_afgag ));};return ReferenceInvalid ;};func init (){RegisterFunction ("\u0043\u0048\u0041\u0052",Char );RegisterFunction ("\u0043\u004c\u0045A\u004e",Clean );RegisterFunction ("\u0043\u004f\u0044\u0045",Code );RegisterFunction ("C\u004f\u004e\u0043\u0041\u0054\u0045\u004e\u0041\u0054\u0045",Concat );RegisterFunction ("\u0043\u004f\u004e\u0043\u0041\u0054",Concat );RegisterFunction ("\u005f\u0078\u006cf\u006e\u002e\u0043\u004f\u004e\u0043\u0041\u0054",Concat );RegisterFunction ("\u0045\u0058\u0041C\u0054",Exact );RegisterFunction ("\u0046\u0049\u004e\u0044",Find );RegisterFunctionComplex ("\u0046\u0049\u004eD\u0042",Findb );RegisterFunction ("\u004c\u0045\u0046\u0054",Left );RegisterFunction ("\u004c\u0045\u0046T\u0042",Left );RegisterFunction ("\u004c\u0045\u004e",Len );RegisterFunction ("\u004c\u0045\u004e\u0042",Len );RegisterFunction ("\u004c\u004f\u0057E\u0052",Lower );RegisterFunction ("\u004d\u0049\u0044",Mid );RegisterFunction ("\u0050\u0052\u004f\u0050\u0045\u0052",Proper );RegisterFunction ("\u0052E\u0050\u004c\u0041\u0043\u0045",Replace );RegisterFunction ("\u0052\u0045\u0050\u0054",Rept );RegisterFunction ("\u0052\u0049\u0047H\u0054",Right );RegisterFunction ("\u0052\u0049\u0047\u0048\u0054\u0042",Right );RegisterFunction ("\u0053\u0045\u0041\u0052\u0043\u0048",Search );RegisterFunctionComplex ("\u0053E\u0041\u0052\u0043\u0048\u0042",Searchb );RegisterFunction ("\u0053\u0055\u0042\u0053\u0054\u0049\u0054\u0055\u0054\u0045",Substitute );RegisterFunction ("\u0054",T );RegisterFunction ("\u0054\u0045\u0058\u0054",Text );RegisterFunction ("\u0054\u0045\u0058\u0054\u004a\u004f\u0049\u004e",TextJoin );RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0054\u0045\u0058T\u004a\u004f\u0049\u004e",TextJoin );RegisterFunction ("\u0054\u0052\u0049\u004d",Trim );RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0055\u004e\u0049\u0043\u0048\u0041\u0052",Char );RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0055\u004e\u0049\u0043\u004f\u0044\u0045",Unicode );RegisterFunction ("\u0055\u0050\u0050E\u0052",Upper );RegisterFunction ("\u0056\u0041\u004cU\u0045",Value );};func _dbdc (_bfcc ,_fbd _bd .Time )bool {_dgc :=_bfcc .Unix ();_gec :=_fbd .Unix ();_dgbb :=_bfcc .Year ();_aega :=_cfga (_dgbb ,_bd .March ,1);if _gda (_dgbb )&&_dgc < _aega &&_gec >=_aega {return true ;};var _fcee =_fbd .Year ();var _cbefc =_cfga (_fcee ,_bd .March ,1);return (_gda (_fcee )&&_gec >=_cbefc &&_dgc < _cbefc );};

// Edate is an implementation of the Excel EDATE() function.
func Edate (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0045\u0044\u0041\u0054E\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020t\u0077o\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074\u0073");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u0045\u0044A\u0054\u0045");};_bdgc :=args [1].ValueNumber ;_afcb :=args [0];var _fdcc float64 ;switch _afcb .Type {case ResultTypeEmpty :return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u0045\u0044A\u0054\u0045");case ResultTypeNumber :_fdcc =_afcb .ValueNumber ;case ResultTypeString :_bdc :=DateValue ([]Result {args [0]});if _bdc .Type ==ResultTypeError {return MakeErrorResult ("\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u0045\u0044A\u0054\u0045");};_fdcc =_bdc .ValueNumber ;default:return MakeErrorResult ("\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u0045\u0044A\u0054\u0045");};_ggge :=_edgb (_fdcc );_gcg :=_ggge .AddDate (0,int (_bdgc ),0);_beff ,_cde ,_dea :=_gcg .Date ();_eedb :=_ebe (_beff ,int (_cde ),_dea );if _eedb < 1{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u0045\u0044A\u0054\u0045");};return MakeNumberResult (_eedb );};

// HasFormula returns FALSE for the invalid reference context.
func (_cgec *ivr )HasFormula (cellRef string )bool {return false };const _fcgb =57364;func _egda (_bedd ,_ffd _bd .Time ,_aee int )float64 {if _bedd .After (_ffd ){_bedd ,_ffd =_ffd ,_bedd ;};_bfca :=0;_ddde ,_fgaf ,_bafg :=_bedd .Date ();_efcd ,_bec ,_gbd :=_ffd .Date ();_daf ,_faef :=int (_fgaf ),int (_bec );_adgb ,_bfa :=_ebed (_ddde ,_daf ,_bafg ,_aee ),_ebed (_efcd ,_faef ,_gbd ,_aee );if !_ada (_aee ){return _ebe (_efcd ,_faef ,_bfa )-_ebe (_ddde ,_daf ,_adgb );};if _aee ==0{if (_daf ==2||_adgb < 30)&&_gbd ==31{_bfa =31;}else if _faef ==2&&_bfa ==_fcf (_efcd ,_faef ){_bfa =_fcf (_efcd ,2);};}else {if _daf ==2&&_adgb ==30{_adgb =_fcf (_ddde ,2);};if _faef ==2&&_bfa ==30{_bfa =_fcf (_efcd ,2);};};if _ddde < _efcd ||(_ddde ==_efcd &&_daf < _faef ){_bfca =30-_adgb +1;_bafg =1;_adgb =1;_abd :=_bd .Date (_ddde ,_bd .Month (_daf ),_bafg ,0,0,0,0,_bd .UTC ).AddDate (0,1,0);if _abd .Year ()< _efcd {_bfca +=_ecgb (_abd .Year (),int (_abd .Month ()),12,_aee );_abd =_abd .AddDate (0,13-int (_abd .Month ()),0);_bfca +=_ebfb (_abd .Year (),_efcd -1,_aee );};_bfca +=_ecgb (_efcd ,int (_abd .Month ()),_faef -1,_aee );_abd =_abd .AddDate (0,_faef -int (_abd .Month ()),0);_daf =_abd .Day ();};_bfca +=_bfa -_adgb ;if _bfca > 0{return float64 (_bfca );}else {return 0;};};

// Eval evaluates a range returning a list of results or an error.
func (_dfcba Range )Eval (ctx Context ,ev Evaluator )Result {_gaeaf :=_dfcba ._bcged .Reference (ctx ,ev );_faba :=_dfcba ._bcec .Reference (ctx ,ev );_abbbe :=_dfggg (_gaeaf ,_faba );if _gaeaf .Type ==ReferenceTypeCell &&_faba .Type ==ReferenceTypeCell {if _ffdde ,_bfabb :=ev .GetFromCache (_abbbe );_bfabb {return _ffdde ;}else {_bfad :=_egfc (ctx ,ev ,_gaeaf .Value ,_faba .Value );ev .SetCache (_abbbe ,_bfad );return _bfad ;};};return MakeErrorResult ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072a\u006e\u0067\u0065\u0020"+_abbbe );};

// LCM implements the Excel LCM() function which returns the least common
// multiple of a range of numbers.
func LCM (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u004c\u0043M(\u0029\u0020\u0072e\u0071\u0075\u0069\u0072es \u0061t \u006c\u0065\u0061\u0073\u0074\u0020\u006fne\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_dfad :=[]float64 {};for _ ,_ddfa :=range args {switch _ddfa .Type {case ResultTypeString :_dbgba :=_ddfa .AsNumber ();if _dbgba .Type !=ResultTypeNumber {return MakeErrorResult ("\u004c\u0043M(\u0029\u0020\u006fn\u006c\u0079\u0020\u0061cce\u0070ts\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_dfad =append (_dfad ,_dbgba .ValueNumber );case ResultTypeList :_eafce :=LCM (_ddfa .ValueList );if _eafce .Type !=ResultTypeNumber {return _eafce ;};_dfad =append (_dfad ,_eafce .ValueNumber );case ResultTypeNumber :_dfad =append (_dfad ,_ddfa .ValueNumber );case ResultTypeEmpty :case ResultTypeError :return _ddfa ;};};if len (_dfad )==0{return MakeErrorResult ("\u004cC\u004d\u0020r\u0065\u0071\u0075\u0069r\u0065\u0073\u0020a\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006fne\u0020\u006e\u006fn\u002d\u0065m\u0070\u0074\u0079\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};if _dfad [0]< 0{return MakeErrorResult ("\u004c\u0043M\u0028\u0029\u0020\u006fn\u006c\u0079 \u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020p\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};if len (_dfad )==1{return MakeNumberResult (_dfad [0]);};_gbba :=_dfad [0];for _cbbba :=1;_cbbba < len (_dfad );_cbbba ++{if _dfad [_cbbba ]< 0{return MakeErrorResult ("\u004c\u0043M\u0028\u0029\u0020\u006fn\u006c\u0079 \u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020p\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_gbba =_efca (_gbba ,_dfad [_cbbba ]);};return MakeNumberResult (_gbba );};

// Eval evaluates and returns the result of an empty expression.
func (_fe EmptyExpr )Eval (ctx Context ,ev Evaluator )Result {return MakeEmptyResult ()};

// PrefixRangeExpr is a range expression that when evaluated returns a list of Results from a given sheet like Sheet1!A1:B4 (all cells from A1 to B4 from a sheet 'Sheet1').
type PrefixRangeExpr struct{_abgaf ,_cdfed ,_ccbd Expression };func (_gfddc *ivr )NamedRange (ref string )Reference {return ReferenceInvalid };var _bfffg =map[string ]bool {"\u0049F\u0045\u0052\u0052\u004f\u0052":true ,"\u0049\u0046\u004e\u0041":true ,"\u005f\u0078\u006c\u0066\u006e\u002e\u0049\u0046\u004e\u0041":true ,"\u0049\u0053\u0045R\u0052":true ,"\u0049S\u0045\u0052\u0052\u004f\u0052":true ,"\u0049\u0053\u004e\u0041":true ,"\u0049\u0053\u0052E\u0046":true };type Reference struct{Type ReferenceType ;Value string ;};

// Roman is an implementation of the Excel ROMAN function that convers numbers
// to roman numerals in one of 5 formats.
func Roman (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0052\u004fM\u0041\u004e\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006f\u006e\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if len (args )> 2{return MakeErrorResult ("\u0052\u004fM\u0041\u004e\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006d\u006f\u0073\u0074\u0020\u0074\u0077\u006f\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_bbea :=args [0].AsNumber ();if _bbea .Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u004fM\u0041\u004e\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006f\u006e\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_efbda :=0;if len (args )> 1{_egbdg :=args [1];if _egbdg .Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u004fM\u0041\u004e\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063");};_efbda =int (_egbdg .ValueNumber );if _efbda < 0{_efbda =0;}else if _efbda > 4{_efbda =4;};};_gdbc :=_cfdg ;switch _efbda {case 1:_gdbc =_fbca ;case 2:_gdbc =_dafff ;case 3:_gdbc =_fded ;case 4:_gdbc =_eebed ;};_bfeb :=_fb .Trunc (_bbea .ValueNumber );_daae :=_fd .Buffer {};for _ ,_addg :=range _gdbc {for _bfeb >=_addg ._bfga {_daae .WriteString (_addg ._cacf );_bfeb -=_addg ._bfga ;};};return MakeStringResult (_daae .String ());};var _beafae _af .Mutex ;const _abdfeg =57349;var _fac =[]*_cf .Regexp {};func _geaf (_eaef []Result ,_ffcb string )(*cumulArgs ,Result ){if len (_eaef )!=6{return nil ,MakeErrorResult (_ffcb +"\u0020\u0072\u0065qu\u0069\u0072\u0065\u0073\u0020\u0073\u0069\u0078\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if _eaef [0].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_ffcb +"\u0020\u0072eq\u0075\u0069\u0072e\u0073\u0020\u0072\u0061te \u0074o \u0062\u0065\u0020\u006e\u0075\u006d\u0062er\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_baaa :=_eaef [0].ValueNumber ;if _baaa <=0{return nil ,MakeErrorResultType (ErrorTypeNum ,_ffcb +"\u0020r\u0065\u0071u\u0069\u0072\u0065s\u0020\u0072\u0061\u0074\u0065\u0020\u0074o\u0020\u0062\u0065\u0020\u0070\u006fs\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if _eaef [1].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_ffcb +"\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_aab :=_eaef [1].ValueNumber ;if _aab <=0{return nil ,MakeErrorResultType (ErrorTypeNum ,_ffcb +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020p\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f \u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020\u0061r\u0067\u0075\u006de\u006e\u0074");};if _eaef [2].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_ffcb +"\u0020r\u0065\u0071u\u0069\u0072\u0065s\u0020\u0070\u0072\u0065\u0073\u0065\u006et\u0020\u0076\u0061\u006c\u0075\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cgae :=_eaef [2].ValueNumber ;if _cgae <=0{return nil ,MakeErrorResultType (ErrorTypeNum ,_ffcb +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0072\u0065\u0073\u0065n\u0074\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065 \u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006dbe\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if _eaef [3].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_ffcb +"\u0020r\u0065\u0071u\u0069\u0072\u0065\u0073 \u0073\u0074\u0061r\u0074\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020to\u0020\u0062\u0065 \u006e\u0075m\u0062\u0065\u0072\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};_cbab :=_eaef [3].ValueNumber ;if _cbab <=0{return nil ,MakeErrorResultType (ErrorTypeNum ,_ffcb +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073t\u0061\u0072\u0074\u0020\u0070\u0065\u0072\u0069o\u0064 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if _eaef [4].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_ffcb +"\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0065\u006e\u0064\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_aacf :=_eaef [4].ValueNumber ;if _aacf <=0{return nil ,MakeErrorResultType (ErrorTypeNum ,_ffcb +"\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0065\u006e\u0064\u0020\u0070\u0065\u0072\u0069\u006fd\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et");};if _aacf < _cbab {return nil ,MakeErrorResultType (ErrorTypeNum ,_ffcb +"\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0065\u006e\u0064\u0020p\u0065\u0072\u0069\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006c\u0061\u0074\u0065\u0072\u0020o\u0072\u0020\u0065\u0071\u0075a\u006c\u0020\u0074\u006f\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0070\u0065\u0072\u0069\u006f\u0064");};if _aacf > _aab {return nil ,MakeErrorResultType (ErrorTypeNum ,_ffcb +" \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074o\u0020\u0062\u0065\u0020\u0069\u006e\u0020\u0070\u0065\u0072io\u0064\u0073\u0020r\u0061n\u0067\u0065");};_ggfd :=int (_eaef [5].ValueNumber );if _ggfd !=0&&_ggfd !=1{return nil ,MakeErrorResultType (ErrorTypeNum ,_ffcb +" \u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0074\u0079\u0070\u0065\u0020\u0074\u006f \u0062\u0065\u00200\u0020o\u0072\u0020\u0031");};return &cumulArgs {_baaa ,_aab ,_cgae ,_cbab ,_aacf ,_ggfd },_fbee ;};const _cbceg =57358;

// DateDif is an implementation of the Excel DATEDIF() function.
func DateDif (args []Result )Result {if len (args )!=3||args [0].Type !=ResultTypeNumber ||args [1].Type !=ResultTypeNumber ||args [2].Type !=ResultTypeString {return MakeErrorResult ("\u0044\u0041\u0054\u0045\u0044I\u0046\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077o\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u006e\u0064\u0020\u006f\u006e\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et");};_fdb :=args [0].ValueNumber ;_fdc :=args [1].ValueNumber ;if _fdc < _fdb {return MakeErrorResultType (ErrorTypeNum ,"\u0054\u0068\u0065\u0020\u0073\u0074\u0061r\u0074\u0020\u0064a\u0074\u0065\u0020\u0069s\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0074\u0068\u0065\u0020\u0065\u006e\u0064\u0020\u0064\u0061\u0074\u0065");};if _fdc ==_fdb {return MakeNumberResult (0);};_cfbd :=_bf .ToLower (args [2].ValueString );if _cfbd =="\u0064"{return MakeNumberResult (_fdc -_fdb );};_ggba :=_edgb (_fdb );_cdaf :=_edgb (_fdc );_fabgg ,_bfeg ,_badf :=_ggba .Date ();_dgfg ,_cbb ,_bcd :=_cdaf .Date ();_gfge :=int (_bfeg );_aegd :=int (_cbb );var _fcd float64 ;switch _cfbd {case "\u0079":_fcd =float64 (_dgfg -_fabgg );if _aegd < _gfge ||(_aegd ==_gfge &&_bcd < _badf ){_fcd --;};case "\u006d":_dca :=_dgfg -_fabgg ;_beb :=_aegd -_gfge ;if _bcd < _badf {_beb --;};if _beb < 0{_dca --;_beb +=12;};_fcd =float64 (_dca *12+_beb );case "\u006d\u0064":_eceg :=_aegd ;if _bcd < _badf {_eceg --;};_fcd =float64 (int (_fdc -_ebe (_dgfg ,_eceg ,_badf )));case "\u0079\u006d":_fcd =float64 (_aegd -_gfge );if _bcd < _badf {_fcd --;};if _fcd < 0{_fcd +=12;};case "\u0079\u0064":_gca :=_dgfg ;if _aegd < _gfge ||(_aegd ==_gfge &&_bcd < _badf ){_gca --;};_fcd =float64 (int (_fdc -_ebe (_gca ,_gfge ,_badf )));default:return MakeErrorResultType (ErrorTypeNum ,"\u0049n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0069\u006e\u0074e\u0072\u0076\u0061\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};return MakeNumberResult (_fcd );};func (_cddd PrefixVerticalRange )verticalRangeReference (_aegab string )string {return _c .Sprintf ("\u0025\u0073\u0021\u0025\u0073\u003a\u0025\u0073",_aegab ,_cddd ._gfgff ,_cddd ._agceg );};

// NewFunction constructs a new function call expression.
func NewFunction (name string ,args []Expression )Expression {return FunctionCall {_aafc :name ,_efga :args };};func (_bdgcd *ivr )SetOffset (col ,row uint32 ){};const _egdd =57361;func _cgacf (_gdab string ,_gace []Result )(*parsedReplaceObject ,Result ){if len (_gace )!=4{return nil ,MakeErrorResult (_gdab +"\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u006f\u0075r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if _gace [0].Type !=ResultTypeString {return nil ,MakeErrorResult (_gdab +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0069\u0072s\u0074\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u0073t\u0072\u0069\u006e\u0067");};_agbbc :=_gace [0].ValueString ;if _gace [1].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_gdab +" \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062e \u0061\u0020\u006eu\u006db\u0065\u0072");};_fcge :=int (_gace [1].ValueNumber )-1;if _gace [2].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_gdab +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068\u0069r\u0064\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006eu\u006d\u0062\u0065\u0072");};_efgb :=int (_gace [2].ValueNumber );if _gace [3].Type !=ResultTypeString {return nil ,MakeErrorResult (_gdab +" \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u006f\u0075\u0072\u0074\u0068\u0020\u0061\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062e \u0061\u0020\u0073t\u0072i\u006e\u0067");};_aabad :=_gace [3].ValueString ;return &parsedReplaceObject {_agbbc ,_fcge ,_efgb ,_aabad },_fbee ;};

// Reference returns an invalid reference for Error.
func (_aeb Error )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };func _cadf (_ceece ,_dedc float64 )float64 {_ceece =_fb .Trunc (_ceece );_dedc =_fb .Trunc (_dedc );if _ceece ==0{return _dedc ;};if _dedc ==0{return _ceece ;};for _ceece !=_dedc {if _ceece > _dedc {_ceece =_ceece -_dedc ;}else {_dedc =_dedc -_ceece ;};};return _ceece ;};

// String returns a string representation of a vertical range with prefix.
func (_cdgad PrefixVerticalRange )String ()string {return _c .Sprintf ("\u0025\u0073\u0021\u0025\u0073\u003a\u0025\u0073",_cdgad ._egbff .String (),_cdgad ._gfgff ,_cdgad ._agceg );};func _gegf (_adeg ,_caga ,_bccb ,_ffeg float64 ,_dagb int )float64 {var _gde float64 ;if _adeg ==0{_gde =(_bccb +_ffeg )/_caga ;}else {_cefe :=_fb .Pow (1+_adeg ,_caga );if _dagb ==1{_gde =(_ffeg *_adeg /(_cefe -1)+_bccb *_adeg /(1-1/_cefe ))/(1+_adeg );}else {_gde =_ffeg *_adeg /(_cefe -1)+_bccb *_adeg /(1-1/_cefe );};};return -_gde ;};

// String returns a string representation for Bool.
func (_bae Bool )String ()string {if _bae ._fdaf {return "\u0054\u0052\u0055\u0045";}else {return "\u0046\u0041\u004cS\u0045";};};const (ReferenceTypeInvalid ReferenceType =iota ;ReferenceTypeCell ;ReferenceTypeHorizontalRange ;ReferenceTypeVerticalRange ;ReferenceTypeNamedRange ;ReferenceTypeRange ;ReferenceTypeSheet ;);func _afed (_bdgg int )int {if _bdgg < 1900{if _bdgg < 30{_bdgg +=2000;}else {_bdgg +=1900;};};return _bdgg ;};

// Now is an implementation of the Excel NOW() function.
func Now (args []Result )Result {if len (args )> 0{return MakeErrorResult ("\u004e\u004fW\u0020\u0064\u006f\u0065\u0073\u006e\u0027\u0074\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0020\u0061\u0072\u0067\u0075\u006den\u0074\u0073");};_eca :=_bd .Now ();_ ,_efee :=_eca .Zone ();_fecg :=_gddb +float64 (_eca .Unix ()+int64 (_efee ))/86400;return MakeNumberResult (_fecg );};func (_dcbdf *noCache )GetFromCache (key string )(Result ,bool ){return _fbee ,false };type couponArgs struct{_ebbf float64 ;_fee float64 ;_fea int ;_ffba int ;};const _cgfab ="\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u0054\u0049\u004d\u0045\u0056\u0041\u004c\u0055\u0045";const _eaccg =57374;type parsedSearchObject struct{_ebdbd string ;_eegd string ;_edfc int ;};

// Update updates references in the PrefixExpr after removing a row/column.
func (_ddcda PrefixExpr )Update (q *_aac .UpdateQuery )Expression {_adbda :=_ddcda ;_gaaae :=_ddcda ._cfdf .String ();if _gaaae ==q .SheetToUpdate {_bbafe :=*q ;_bbafe .UpdateCurrentSheet =true ;_adbda ._gfgd =_ddcda ._gfgd .Update (&_bbafe );};return _adbda ;};func _ggab (_cfcbd []Result )[]rangeIndex {_gdebc :=[]rangeIndex {};_gaggg :=len (_cfcbd );for _egeef :=0;_egeef < _gaggg -1;_egeef +=2{_gdfab :=[]rangeIndex {};_gcbe :=_eabdb (_cfcbd [_egeef ]);_dfcaa :=_cdadc (_cfcbd [_egeef +1]);if _egeef ==0{for _fff ,_acfgb :=range _gcbe {for _dccdf ,_cfcea :=range _acfgb {if _gdeg (_cfcea ,_dfcaa ){_gdfab =append (_gdfab ,rangeIndex {_fff ,_dccdf });};};};}else {for _ ,_gebfe :=range _gdebc {_dcfb :=_gcbe [_gebfe ._adfac ][_gebfe ._dbcad ];if _gdeg (_dcfb ,_dfcaa ){_gdfab =append (_gdfab ,_gebfe );};};};if len (_gdfab )==0{return []rangeIndex {};};_gdebc =_gdfab [:];};return _gdebc ;};

// Reference returns an invalid reference for FunctionCall.
func (_bbcff FunctionCall )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };func (_fbaeb PrefixHorizontalRange )horizontalRangeReference (_eaebba string )string {return _c .Sprintf ("\u0025\u0073\u0021\u0025\u0064\u003a\u0025\u0064",_eaebba ,_fbaeb ._cadab ,_fbaeb ._dgbaa );};

// ReferenceType is a type of reference
//go:generate stringer -type=ReferenceType
type ReferenceType byte ;var _cafda =[...]int {0,0,71,70,69,4,67,66,53,51,50,49,48,47,46,45,44,2};

// EmptyExpr is an empty expression.
type EmptyExpr struct{};

// Eval evaluates a vertical range returning a list of results or an error.
func (_cccc VerticalRange )Eval (ctx Context ,ev Evaluator )Result {_abcdd :=_cccc .verticalRangeReference ();if _fadb ,_aeda :=ev .GetFromCache (_abcdd );_aeda {return _fadb ;};_fdddf ,_cfeee :=_eagbdb (ctx ,_cccc ._caafg ,_cccc ._beege );_fcaee :=_egfc (ctx ,ev ,_fdddf ,_cfeee );ev .SetCache (_abcdd ,_fcaee );return _fcaee ;};func (_aded *Lexer )Next ()*node {_aded ._fffb .Lock ();defer _aded ._fffb .Unlock ();if len (_aded ._bcae )> 0{_cede :=_aded ._bcae [0];_aded ._bcae =_aded ._bcae [1:];return _cede ;};return _aded .nextRaw ();};func _ffg (_ed string ,_fc uint32 )string {_afb :=_d .ColumnToIndex (_ed );if _afb ==_fc {return "\u0023\u0052\u0045F\u0021";}else if _afb > _fc {return _d .IndexToColumn (_afb -1);}else {return _ed ;};};var _cfdg =[]ri {{1000,"\u004d"},{900,"\u0043\u004d"},{500,"\u0044"},{400,"\u0043\u0044"},{100,"\u0043"},{90,"\u0058\u0043"},{50,"\u004c"},{40,"\u0058\u004c"},{10,"\u0058"},{9,"\u0049\u0058"},{5,"\u0056"},{4,"\u0049\u0056"},{1,"\u0049"}};func _befb (_bdga ,_dfdf Result ,_eeed ,_efbd bool )cmpResult {_bdga =_bdga .AsNumber ();_dfdf =_dfdf .AsNumber ();if _bdga .Type !=_dfdf .Type {return _bacc ;};if _bdga .Type ==ResultTypeNumber {if _bdga .ValueNumber ==_dfdf .ValueNumber {return _fced ;};if _bdga .ValueNumber < _dfdf .ValueNumber {return _bacgf ;};return _cdgac ;};if _bdga .Type ==ResultTypeString {_aaeg :=_bdga .ValueString ;_eede :=_dfdf .ValueString ;if !_eeed {_aaeg =_bf .ToLower (_aaeg );_eede =_bf .ToLower (_eede );};if _efbd {_bcfa :=_bc .Match (_eede ,_aaeg );if _bcfa {return _fced ;}else {return _cdgac ;};};return cmpResult (_bf .Compare (_aaeg ,_eede ));};if _bdga .Type ==ResultTypeEmpty {return _fced ;};if _bdga .Type ==ResultTypeList {if len (_bdga .ValueList )< len (_dfdf .ValueList ){return _bacgf ;};if len (_bdga .ValueList )> len (_dfdf .ValueList ){return _cdgac ;};for _edbg :=range _bdga .ValueList {_dgfgg :=_befb (_bdga .ValueList [_edbg ],_dfdf .ValueList [_edbg ],_eeed ,_efbd );if _dgfgg !=_fced {return _dgfgg ;};};return _fced ;};if _bdga .Type ==ResultTypeList {if len (_bdga .ValueArray )< len (_dfdf .ValueArray ){return _bacgf ;};if len (_bdga .ValueArray )> len (_dfdf .ValueArray ){return _cdgac ;};for _bgdg :=range _bdga .ValueArray {_dcac :=_bdga .ValueArray [_bgdg ];_gaff :=_bdga .ValueArray [_bgdg ];if len (_dcac )< len (_gaff ){return _bacgf ;};if len (_dcac )> len (_gaff ){return _cdgac ;};for _efdd :=range _dcac {_gbadc :=_befb (_dcac [_efdd ],_gaff [_efdd ],_eeed ,_efbd );if _gbadc !=_fced {return _gbadc ;};};};return _fced ;};return _bacc ;};type amorArgs struct{_ecd float64 ;_gggf float64 ;_bedb float64 ;_bcda float64 ;_eccd int ;_cag float64 ;_aaa int ;};

// Xor is an implementation of the Excel XOR() function and takes a variable
// number of arguments. It's odd to say the least.  If any argument is numeric,
// it returns true if the number of non-zero numeric arguments is odd and false
// otherwise.  If no argument is numeric, it returns an error.
func Xor (args []Result )Result {if len (args )< 1{return MakeErrorResult ("\u0058\u004f\u0052 r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061t\u0020l\u0065a\u0073t\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_acdfa :=0;_cecdc :=false ;for _ ,_ccdgb :=range args {switch _ccdgb .Type {case ResultTypeList ,ResultTypeArray :_aaddc :=Xor (_ccdgb .ListValues ());if _aaddc .Type ==ResultTypeError {return _aaddc ;};if _aaddc .ValueNumber !=0{_acdfa ++;};_cecdc =true ;case ResultTypeNumber :if _ccdgb .ValueNumber !=0{_acdfa ++;};_cecdc =true ;case ResultTypeString :case ResultTypeError :return _ccdgb ;default:return MakeErrorResult ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0061\u0072\u0067u\u006de\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0069\u006e\u0020\u0058\u004f\u0052");};};if !_cecdc {return MakeErrorResult ("\u0058\u004f\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0069n\u0070\u0075\u0074");};return MakeBoolResult (_acdfa %2!=0);};func _cdadc (_gegde Result )*criteriaParsed {_bbaa :=_gegde .Type ==ResultTypeNumber ;_becb :=_gegde .ValueNumber ;_cebc :=_bf .ToLower (_gegde .ValueString );_aacaf :=_bdeg (_cebc );return &criteriaParsed {_bbaa ,_becb ,_cebc ,_aacaf };};const _bgcd =_eae +"\u0020\u0028\u0028[0\u002d\u0039\u005d\u0029\u002b\u0029\u002c\u0020\u0028\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029";

// Function is a standard function whose result only depends on its arguments.
type Function func (_acag []Result )Result ;var _geede *_ab .Rand ;

// Mod is an implementation of the Excel MOD function which returns the
// remainder after division. It requires two numeric argumnts.
func Mod (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u004d\u004fD(\u0029\u0020\u0072e\u0071\u0075\u0069\u0072es \u0074wo\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_bbfd :=args [0].AsNumber ();_dfcfa :=args [1].AsNumber ();if _bbfd .Type !=ResultTypeNumber ||_dfcfa .Type !=ResultTypeNumber {return MakeErrorResult ("\u004d\u004fD(\u0029\u0020\u0072e\u0071\u0075\u0069\u0072es \u0074wo\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};if _dfcfa .ValueNumber ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"M\u004fD\u0028\u0029\u0020\u0064\u0069\u0076\u0069\u0064e\u0020\u0062\u0079\u0020ze\u0072\u006f");};_dfga ,_fbafd :=_fb .Modf (_bbfd .ValueNumber /_dfcfa .ValueNumber );if _fbafd < 0{_dfga --;};return MakeNumberResult (_bbfd .ValueNumber -_dfcfa .ValueNumber *_dfga );};

// Eval evaluates and returns a string.
func (_cccga String )Eval (ctx Context ,ev Evaluator )Result {return MakeStringResult (_cccga ._bcbdgd )};

// GetEpoch returns a null time object for the invalid reference context.
func (_beea *ivr )GetEpoch ()_bd .Time {return _bd .Time {}};var _gad =map[string ]int {"\u006aa\u006e\u0075\u0061\u0072\u0079":1,"\u0066\u0065\u0062\u0072\u0075\u0061\u0072\u0079":2,"\u006d\u0061\u0072c\u0068":3,"\u0061\u0070\u0072i\u006c":4,"\u006d\u0061\u0079":5,"\u006a\u0075\u006e\u0065":6,"\u006a\u0075\u006c\u0079":7,"\u0061\u0075\u0067\u0075\u0073\u0074":8,"\u0073e\u0070\u0074\u0065\u006d\u0070\u0065r":9,"\u006fc\u0074\u006f\u0062\u0065\u0072":10,"\u006e\u006f\u0076\u0065\u006d\u0062\u0065\u0072":11,"\u0064\u0065\u0063\u0065\u006d\u0062\u0065\u0072":12,"\u006a\u0061\u006e":1,"\u0066\u0065\u0062":2,"\u006d\u0061\u0072":3,"\u0061\u0070\u0072":4,"\u006a\u0075\u006e":6,"\u006a\u0075\u006c":7,"\u0061\u0075\u0067":8,"\u0073\u0065\u0070":9,"\u006f\u0063\u0074":10,"\u006e\u006f\u0076":11,"\u0064\u0065\u0063":12};

// Dollarfr implements the Excel DOLLARFR function.
func Dollarfr (args []Result )Result {_dddc ,_febd ,_ceda :=_cgdbd (args ,"\u0044\u004f\u004c\u004c\u0041\u0052\u0046\u0052");if _ceda .Type ==ResultTypeError {return _ceda ;};if _febd ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"\u0044\u004f\u004c\u004c\u0041R\u0046\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066r\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if _dddc ==0{return MakeNumberResult (0);};_gfcg :=_dddc < 0;if _gfcg {_dddc =-_dddc ;};_bga :=float64 (int (_dddc ));_afff :=args [0].Value ();_gcce :=_bf .Split (_afff ,"\u002e");_feda :=0.0;if len (_gcce )> 1{var _dacf error ;_becf :=_gcce [1];_feda ,_dacf =_ad .ParseFloat (_becf ,64);if _dacf !=nil {return MakeErrorResult ("I\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0066\u006fr \u0044\u004f\u004cL\u0041R\u0046\u0052");};_effa :=float64 (len (_becf ));_feda /=_fb .Pow (10,_effa );};_ebac :=_feda *_febd /_fb .Pow (10,float64 (int (_fb .Log10 (_febd )))+1)+_bga ;if _gfcg {_ebac =-_ebac ;};return MakeNumberResult (_ebac );};func (_eadc HorizontalRange )horizontalRangeReference ()string {return _c .Sprintf ("\u0025\u0064\u003a%\u0064",_eadc ._efbab ,_eadc ._bgaaa );};

// ErrorType is a formula evaluation error type.
type ErrorType byte ;

// Irr implements the Excel IRR function.
func Irr (args []Result )Result {_affc :=len (args );if _affc ==0||_affc > 2{return MakeErrorResult ("\u0049\u0052\u0052\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u006f\u006e\u0065\u0020\u006f\u0072\u0020t\u0077\u006f\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeList &&args [0].Type !=ResultTypeArray {return MakeErrorResult ("\u0049\u0052\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020v\u0061\u006c\u0075\u0065\u0073\u0020t\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u0061\u0072\u0072\u0061\u0079 \u0074\u0079\u0070\u0065");};_ecddd :=_eabdb (args [0]);_cbdg :=[]float64 {};for _ ,_fgbfb :=range _ecddd {for _ ,_fbbg :=range _fgbfb {if _fbbg .Type ==ResultTypeNumber &&!_fbbg .IsBoolean {_cbdg =append (_cbdg ,_fbbg .ValueNumber );};};};_gadc :=len (_cbdg );if len (_cbdg )< 2{return MakeErrorResultType (ErrorTypeNum ,"");};_dfde :=0.1;if _affc ==2&&args [1].Type !=ResultTypeEmpty {if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("I\u0052\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0067\u0075\u0065\u0073\u0073\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_dfde =args [1].ValueNumber ;if _dfde <=-1{return MakeErrorResult ("\u0049\u0052R\u0020\u0072\u0065\u0071u\u0069\u0072e\u0073\u0020\u0067\u0075\u0065\u0073\u0073\u0020t\u006f\u0020\u0062\u0065\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068a\u006e\u0020\u002d\u0031");};};_cefgg :=[]float64 {};for _dabc :=0;_dabc < _gadc ;_dabc ++{if _dabc ==0{_cefgg =append (_cefgg ,0);}else {_cefgg =append (_cefgg ,_cefgg [_dabc -1]+365);};};return _gce (_cbdg ,_cefgg ,_dfde );};const _adaac =57359;

// ISERROR is an implementation of the Excel ISERROR() function.
func IsError (args []Result )Result {if len (args )!=1{return MakeErrorResult ("I\u0053\u0045\u0052\u0052\u004f\u0052(\u0029\u0020\u0061\u0063\u0063\u0065p\u0074\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};return MakeBoolResult (args [0].Type ==ResultTypeError );};

// FloorMath implements _xlfn.FLOOR.MATH which rounds numbers down to the
// nearest multiple of the second argument, toward or away from zero as
// specified by the third argument.
func FloorMath (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0046\u004c\u004f\u004f\u0052\u002e\u004dA\u0054\u0048\u0028)\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if len (args )> 3{return MakeErrorResult ("\u0046\u004c\u004f\u004f\u0052\u002e\u004dA\u0054\u0048\u0028)\u0020\u0061\u006c\u006co\u0077\u0073\u0020\u0061\u0074\u0020\u006d\u006f\u0073\u0074\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_edded :=args [0].AsNumber ();if _edded .Type !=ResultTypeNumber {return MakeErrorResult ("f\u0069\u0072\u0073\u0074\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0020\u0074\u006f\u0020FL\u004f\u004f\u0052\u002eM\u0041\u0054\u0048\u0028\u0029\u0020\u006d\u0075\u0073t \u0062\u0065 \u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_fegd :=float64 (1);if _edded .ValueNumber < 0{_fegd =-1;};if len (args )> 1{_dggdd :=args [1].AsNumber ();if _dggdd .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061r\u0067\u0075\u006den\u0074\u0020\u0074\u006f\u0020\u0046L\u004f\u004f\u0052\u002e\u004d\u0041\u0054\u0048\u0028\u0029\u0020\u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006db\u0065\u0072");};_fegd =_dggdd .ValueNumber ;};_fedf :=float64 (1);if len (args )> 2{_bggfc :=args [2].AsNumber ();if _bggfc .Type !=ResultTypeNumber {return MakeErrorResult ("t\u0068\u0069\u0072\u0064\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0020\u0074\u006f\u0020FL\u004f\u004f\u0052\u002eM\u0041\u0054\u0048\u0028\u0029\u0020\u006d\u0075\u0073t \u0062\u0065 \u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_fedf =_bggfc .ValueNumber ;};if len (args )==1{return MakeNumberResult (_fb .Floor (_edded .ValueNumber ));};_fddcb :=_edded .ValueNumber ;_fddcb ,_afce :=_fb .Modf (_fddcb /_fegd );if _afce !=0&&_edded .ValueNumber < 0&&_fedf > 0{_fddcb ++;};return MakeNumberResult (_fddcb *_fegd );};

// Update updates references in the BinaryExpr after removing a row/column.
func (_dfcg BinaryExpr )Update (q *_aac .UpdateQuery )Expression {_dfe :=_dfcg ;_dfe ._g =_dfcg ._g .Update (q );_dfe ._fde =_dfcg ._fde .Update (q );return _dfe ;};func _ecdca (_ccbga []Result ,_dbfce []string ,_cffb bool )[]string {for _ ,_cafd :=range _ccbga {switch _cafd .Type {case ResultTypeEmpty :if !_cffb {_dbfce =append (_dbfce ,"");};case ResultTypeString :if _cafd .ValueString !=""||!_cffb {_dbfce =append (_dbfce ,_cafd .ValueString );};case ResultTypeNumber :_dbfce =append (_dbfce ,_cafd .Value ());case ResultTypeList :_dbfce =_badcb (_dbfce ,_ecdca (_cafd .ValueList ,[]string {},_cffb ));case ResultTypeArray :for _ ,_cabge :=range _cafd .ValueArray {_dbfce =_badcb (_dbfce ,_ecdca (_cabge ,[]string {},_cffb ));};};};return _dbfce ;};

// String returns a string representation of String.
func (_daecc String )String ()string {return "\u0022"+_daecc ._bcbdgd +"\u0022"};const _dgb ="\u0028\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029\u003a\u0028\u0028\u005b\u0030-\u0039]\u0029\u002b\u0029\u0028\u0020\u0028\u0061\u006d\u007c\u0070\u006d\u0029\u0029\u003f";

// NewPrefixVerticalRange constructs a new full columns range with prefix.
func NewPrefixVerticalRange (pfx Expression ,v string )Expression {_gbee :=_bf .Split (v ,"\u003a");if len (_gbee )!=2{return nil ;};if _gbee [0]> _gbee [1]{_gbee [0],_gbee [1]=_gbee [1],_gbee [0];};return PrefixVerticalRange {_egbff :pfx ,_gfgff :_gbee [0],_agceg :_gbee [1]};};func _faec (_abcc Result ,_aaba *criteriaParsed )bool {if _abcc .Type ==ResultTypeEmpty {return false ;};if _aaba ._efega {return _abcc .ValueNumber ==_aaba ._dgcbf ;}else {_gcgf :=_bf .ToLower (_abcc .ValueString );return _aaba ._agdda ==_gcgf ||_bc .Match (_aaba ._agdda ,_gcgf );};};

// Result is the result of a formula or cell evaluation .
type Result struct{ValueNumber float64 ;ValueString string ;ValueList []Result ;ValueArray [][]Result ;IsBoolean bool ;ErrorMessage string ;Type ResultType ;Ref Reference ;};const _ece =_bd .Second *1;func _fdcd (_fedd ,_abdc []float64 ,_bfaa float64 )float64 {_gcb :=_bfaa +1;_dcdg :=0.0;_bdb :=len (_fedd );_cedb :=_abdc [0];for _feae :=1;_feae < _bdb ;_feae ++{_gcgg :=(_abdc [_feae ]-_cedb )/365;_dcdg -=_gcgg *_fedd [_feae ]/_fb .Pow (_gcb ,_gcgg +1);};return _dcdg ;};

// Update returns the same object as updating sheet references does not affect named ranges.
func (_gabfa NamedRangeRef )Update (q *_aac .UpdateQuery )Expression {return _gabfa };const _dfgg =57368;

// Eval evaluates and returns the result of the cell reference.
func (_ceeb CellRef )Eval (ctx Context ,ev Evaluator )Result {return ctx .Cell (_ceeb ._abe ,ev )};func _eabb (_ceaea int )string {if _ceaea >=1&&_ceaea -1< len (_bgabf ){if _bgabf [_ceaea -1]!=""{return _bgabf [_ceaea -1];};};return _c .Sprintf ("\u0074\u006f\u006b\u002d\u0025\u0076",_ceaea );};const _fadc =57355;type yyParserImpl struct{_fadef yySymType ;_gcfdda [_ddba ]yySymType ;_eabfc int ;};

// GetWidth returns 0 for the invalid reference context.
func (_cfbed *ivr )GetWidth (colIdx int )float64 {return float64 (0)};const _afc ="\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u0044\u0041\u0054\u0045\u0056\u0041\u004c\u0055\u0045";const _fcae =57353;func _ebe (_gfg ,_cfbg ,_gcc int )float64 {return float64 (_cfga (_gfg ,_bd .Month (_cfbg ),_gcc )/86400)+_gddb ;};func _efca (_cbea ,_dbeg float64 )float64 {_cbea =_fb .Trunc (_cbea );_dbeg =_fb .Trunc (_dbeg );if _cbea ==0&&_dbeg ==0{return 0;};return _cbea *_dbeg /_cadf (_cbea ,_dbeg );};

// Pricemat implements the Excel PRICEMAT function.
func Pricemat (args []Result )Result {_gedb :=len (args );if _gedb !=5&&_gedb !=6{return MakeErrorResult ("\u0050\u0052\u0049\u0043\u0045\u004d\u0041\u0054\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0066\u0069v\u0065\u0020\u006f\u0072\u0020\u0073\u0069\u0078\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_aegf ,_beddc ,_acec :=_aaf (args [0],args [1],"\u0050\u0052\u0049\u0043\u0045\u004d\u0041\u0054");if _acec .Type ==ResultTypeError {return _acec ;};_bgcc ,_acec :=_ddg (args [2],"\u0069\u0073\u0073\u0075\u0065\u0020\u0064\u0061\u0074\u0065","\u0050\u0052\u0049\u0043\u0045\u004d\u0041\u0054");if _acec .Type ==ResultTypeError {return _acec ;};if _bgcc >=_aegf {return MakeErrorResult ("\u0050\u0052\u0049\u0043E\u004d\u0041\u0054\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0069\u0073\u0073\u0075\u0065\u0020\u0064\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062e\u0020\u0062\u0065\u0066\u006fr\u0065\u0020\u0073\u0065\u0074\u0074\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0064\u0061\u0074\u0065");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0052I\u0043\u0045\u004d\u0041T\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072a\u0074\u0065\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006eu\u006d\u0062\u0065\u0072");};_ffgf :=args [3].ValueNumber ;if _ffgf < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0052\u0049\u0043\u0045M\u0041\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072a\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u006e\u0020\u006e\u0065\u0067\u0061\u0074\u0069\u0076\u0065");};if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0052\u0049\u0043\u0045\u004d\u0041\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0079\u0069\u0065\u006c\u0064\u0020o\u0066\u0020\u0074\u0079\u0070e\u0020\u006eu\u006d\u0062\u0065\u0072");};_cfge :=args [4].ValueNumber ;if _cfge < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0052\u0049C\u0045\u004d\u0041\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0079\u0069\u0065\u006c\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u006e \u006e\u0065\u0067\u0061\u0074\u0069\u0076\u0065");};_aaca :=0;if _gedb ==6&&args [5].Type !=ResultTypeEmpty {if args [5].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050R\u0049\u0043E\u004d\u0041\u0054 \u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0062\u0061\u0073\u0069\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_aaca =int (args [5].ValueNumber );if !_fdgc (_aaca ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006ec\u006f\u0072\u0072\u0065c\u0074\u0020b\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074\u0020\u0066\u006f\u0072\u0020\u0050\u0052\u0049C\u0045\u004d\u0041\u0054");};};_aaag ,_acec :=_gbab (_aegf ,_beddc ,_aaca );if _acec .Type ==ResultTypeError {return _acec ;};_adeb ,_acec :=_gbab (_bgcc ,_beddc ,_aaca );if _acec .Type ==ResultTypeError {return _acec ;};_geeb ,_acec :=_gbab (_bgcc ,_aegf ,_aaca );if _acec .Type ==ResultTypeError {return _acec ;};_dfae :=1+_adeb *_ffgf ;_gdga :=1+_aaag *_cfge ;return MakeNumberResult ((_dfae /_gdga -_geeb *_ffgf )*100);};func _ecgb (_gaf ,_fgaa ,_bde ,_bfdb int )int {if _fgaa > _bde {return 0;};if _ada (_bfdb ){return (_bde -_fgaa +1)*30;};_gcfg :=0;for _gdg :=_fgaa ;_gdg <=_bde ;_gdg ++{_gcfg +=_fcf (_gaf ,_gdg );};return _gcfg ;};

// Left implements the Excel LEFT(string,[n]) function which returns the
// leftmost n characters.
func Left (args []Result )Result {_cccdb :=1;switch len (args ){case 1:case 2:if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u004c\u0045F\u0054\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075me\u006e\u0074");};_cccdb =int (args [1].ValueNumber );if _cccdb < 0{return MakeErrorResult ("\u004c\u0045\u0046T \u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020n\u0075m\u0062e\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u003e\u003d\u0020\u0030");};if _cccdb ==0{return MakeStringResult ("");};default:return MakeErrorResult ("\u004c\u0045\u0046T \u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020o\u006ee\u0020o\u0072 \u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type ==ResultTypeList {return MakeErrorResult ("\u004c\u0045\u0046T\u0020\u0063\u0061\u006e'\u0074\u0020\u0062\u0065\u0020\u0063\u0061l\u006c\u0065\u0064\u0020\u006f\u006e\u0020\u0061\u0020\u0072\u0061\u006e\u0067\u0065");};_fdadf :=args [0].Value ();if _cccdb > len (_fdadf ){return MakeStringResult (_fdadf );};return MakeStringResult (_fdadf [0:_cccdb ]);};

// SupportedFunctions returns a list of supported functions.
func SupportedFunctions ()[]string {_daee :=[]string {};for _cdbde :=range _adebf {_daee =append (_daee ,_cdbde );};for _gfaaeg :=range _eaege {_daee =append (_daee ,_gfaaeg );};_e .Strings (_daee );return _daee ;};

// String returns a string representation of a range with prefix.
func (_dedcd PrefixRangeExpr )String ()string {return _c .Sprintf ("\u0025\u0073\u0021\u0025\u0073\u003a\u0025\u0073",_dedcd ._abgaf .String (),_dedcd ._cdfed .String (),_dedcd ._ccbd .String ());};func _ggea (_addd ,_ccbf ,_egbf ,_cbbg ,_gbgc ,_gbebc float64 ,_ceeae int )(float64 ,Result ){_ecfd :=int (_gbebc );_aeag :=_ccb (_addd ,_ccbf ,_ecfd ,_ceeae );_eeag :=_fggd (_addd ,_ccbf ,_ecfd ,_ceeae )/_aeag ;_gbfe ,_ega :=_agfd (_addd ,_ccbf ,_ecfd ,_ceeae );if _ega .Type ==ResultTypeError {return 0,_ega ;};_fdbc :=_cefg (_addd ,_ccbf ,_ecfd ,_ceeae );_dgbd :=_gbgc /_fb .Pow (1+_cbbg /_gbebc ,_gbfe -1+_eeag );_dgbd -=100*_egbf /_gbebc *_fdbc /_aeag ;_efdba :=100*_egbf /_gbebc ;_dceb :=1+_cbbg /_gbebc ;for _bcce :=0.0;_bcce < _gbfe ;_bcce ++{_dgbd +=_efdba /_fb .Pow (_dceb ,_bcce +_eeag );};return _dgbd ,MakeEmptyResult ();};var _cdefd ,_bgea ,_dcacd ,_cbaa ,_dcege ,_effec *_cf .Regexp ;

// Eval evaluates a vertical range with prefix returning a list of results or an error.
func (_ccbfbc PrefixVerticalRange )Eval (ctx Context ,ev Evaluator )Result {_faafc :=_ccbfbc ._egbff .Reference (ctx ,ev );switch _faafc .Type {case ReferenceTypeSheet :if _aebf (_faafc ,ctx ){return MakeErrorResultType (ErrorTypeName ,_c .Sprintf ("\u0053h\u0065e\u0074\u0020\u0025\u0073\u0020n\u006f\u0074 \u0066\u006f\u0075\u006e\u0064",_faafc .Value ));};_fcbbde :=_ccbfbc .verticalRangeReference (_faafc .Value );if _gcbdf ,_adaab :=ev .GetFromCache (_fcbbde );_adaab {return _gcbdf ;};_caef :=ctx .Sheet (_faafc .Value );_afda ,_efeaa :=_eagbdb (_caef ,_ccbfbc ._gfgff ,_ccbfbc ._agceg );_fage :=_egfc (_caef ,ev ,_afda ,_efeaa );ev .SetCache (_fcbbde ,_fage );return _fage ;default:return MakeErrorResult (_c .Sprintf ("\u006e\u006f\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0020\u0066\u006f\u0072\u0020r\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_faafc .Type ));};};

// RegisterFunctionComplex registers a standard function.
func RegisterFunctionComplex (name string ,fn FunctionComplex ){_beafae .Lock ();defer _beafae .Unlock ();if _ ,_decb :=_eaege [name ];_decb {_ce .Log ("\u0064\u0075p\u006c\u0069\u0063\u0061t\u0065\u0020r\u0065\u0067\u0069\u0073\u0074\u0072\u0061\u0074i\u006f\u006e\u0020\u006f\u0066\u0020\u0066\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0025\u0073",name );};_eaege [name ]=fn ;};

// Multinomial implements the excel MULTINOMIAL function.
func Multinomial (args []Result )Result {if len (args )< 1{return MakeErrorResult ("\u004d\u0055\u004c\u0054\u0049\u004eO\u004d\u0049\u0041\u004c\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006ce\u0061\u0073\u0074\u0020\u006f\u006e\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069c\u0020i\u006e\u0070\u0075\u0074");};_ceeedf ,_daggc ,_edda :=_gdfdc (args );if _edda .Type ==ResultTypeError {return _edda ;};return MakeNumberResult (_cefdb (_ceeedf )/_daggc );};

// If is an implementation of the Excel IF() function. It takes one, two or
// three arguments.
func If (args []Result )Result {if len (args )< 2{return MakeErrorResult ("\u0049\u0046\u0020re\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074 \u006ce\u0061s\u0074 \u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if len (args )> 3{return MakeErrorResult ("\u0049\u0046\u0020ac\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0074\u0020m\u006fs\u0074 \u0074h\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_dbef :=args [0];switch _dbef .Type {case ResultTypeError :return _dbef ;case ResultTypeNumber :if len (args )==1{return MakeBoolResult (_dbef .ValueNumber !=0);};if _dbef .ValueNumber !=0{return args [1];};if len (args )==3{return args [2];}else {return MakeBoolResult (false );};case ResultTypeList :return _ggdf (args );case ResultTypeArray :return _bcdeg (args );default:return MakeErrorResult ("\u0049F\u0020\u0069n\u0069\u0074\u0069\u0061l\u0020\u0061\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u006d\u0075\u0073t \u0062\u0065\u0020n\u0075\u006de\u0072\u0069\u0063\u0020\u006f\u0072 \u0061\u0072r\u0061\u0079");};};func _gbc (_ded string )bool {for _ ,_bcfc :=range _fac {_gegg :=_bcfc .FindStringSubmatch (_ded );if len (_gegg )> 1{return true ;};};return false ;};

// Day is an implementation of the Excel DAY() function.
func Day (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0044A\u0059\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073 \u006fn\u0065 \u0061\u0072\u0067\u0075\u006d\u0065\u006et");};_ggg :=args [0];switch _ggg .Type {case ResultTypeEmpty :return MakeNumberResult (0);case ResultTypeNumber :_agea :=_edgb (_ggg .ValueNumber );return MakeNumberResult (float64 (_agea .Day ()));case ResultTypeString :_bade :=_bf .ToLower (_ggg .ValueString );if !_gbc (_bade ){_ ,_ ,_ ,_ ,_bed ,_eba :=_fgad (_bade );if _eba .Type ==ResultTypeError {_eba .ErrorMessage ="I\u006e\u0063\u006f\u0072\u0072\u0065c\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073\u0020\u0066o\u0072 \u0044\u0041\u0059";return _eba ;};if _bed {return MakeNumberResult (0);};};_ ,_ ,_ageab ,_ ,_fdac :=_cfbgc (_bade );if _fdac .Type ==ResultTypeError {return _fdac ;};return MakeNumberResult (float64 (_ageab ));default:return MakeErrorResult ("\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0066\u006f\u0072 \u0044\u0041\u0059");};};const _cbcd =57357;func Sign (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0053\u0049\u0047\u004e(\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u006fn\u0065\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_gcfc :=args [0].AsNumber ();if _gcfc .Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u0049\u0047N(\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020a\u0020n\u0075m\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if _gcfc .ValueNumber < 0{return MakeNumberResult (-1);}else if _gcfc .ValueNumber > 0{return MakeNumberResult (1);};return MakeNumberResult (0);};

// NewSheetPrefixExpr constructs a new prefix expression.
func NewSheetPrefixExpr (s string )Expression {return &SheetPrefixExpr {_eaabc :s }};

// Choose implements the Excel CHOOSE function.
func Choose (args []Result )Result {if len (args )< 2{return MakeErrorResult ("\u0043\u0048O\u004f\u0053\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006den\u0074\u0073");};_dbfc :=args [0];if _dbfc .Type !=ResultTypeNumber {return MakeErrorResult ("\u0043H\u004f\u004fS\u0045\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020f\u0069\u0072\u0073\u0074\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074y\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_abfb :=int (_dbfc .ValueNumber );if _abfb < 1{return MakeErrorResult ("\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065 \u0061 \u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u0076\u0061\u006c\u0075\u0065");};if len (args )<=_abfb {return MakeErrorResult ("\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0068\u006f\u0075\u006cd\u0020\u0062\u0065\u0020\u006c\u0065\u0073\u0073 \u006fr\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006f\u0066\u0020\u0076\u0061\u006c\u0075\u0065\u0073");};return args [_abfb ];};

// Rri implements the Excel RRI function.
func Rri (args []Result )Result {if len (args )!=3{return MakeErrorResult ("\u0052\u0052\u0049\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068r\u0065e\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0052I\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u006eu\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bgb :=args [0].ValueNumber ;if _bgb <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0052R\u0049\u0020r\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u006f\u0066\u0020p\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0052\u0049\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073 p\u0072\u0065\u0073\u0065\u006e\u0074 \u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_dfdce :=args [1].ValueNumber ;if _dfdce <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0052\u0052\u0049\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0072\u0065\u0073\u0065\u006et\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("R\u0052\u0049\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0066\u0075\u0074\u0075\u0072e \u0076\u0061\u006c\u0075e\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075mb\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_fcb :=args [2].ValueNumber ;if _fcb < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0052R\u0049\u0020r\u0065\u0071\u0075\u0069r\u0065\u0073\u0020f\u0075\u0074\u0075\u0072\u0065\u0020\u0076\u0061\u006cue\u0020\u0074\u006f \u0062\u0065 \u006e\u006f\u006e\u0020\u006e\u0065g\u0061\u0074i\u0076\u0065");};return MakeNumberResult (_fb .Pow (_fcb /_dfdce ,1/_bgb )-1);};

// Index implements the Excel INDEX function.
func Index (args []Result )Result {_bdee :=len (args );if _bdee < 2||_bdee > 3{return MakeErrorResult ("\u0049\u004e\u0044E\u0058\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0072\u006f\u006d\u0020\u006f\u006e\u0065\u0020\u0074\u006f\u0020\u0074\u0068\u0072\u0065\u0065\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_acab :=args [0];if _acab .Type !=ResultTypeArray &&_acab .Type !=ResultTypeList {return MakeErrorResult ("\u0049\u004e\u0044\u0045\u0058\u0020\u0072e\u0071\u0075\u0069r\u0065\u0073\u0020\u0066i\u0072\u0073\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_dgbe :=args [1].AsNumber ();if _dgbe .Type !=ResultTypeNumber {return MakeErrorResult ("I\u004e\u0044\u0045\u0058\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073 \u006e\u0075\u006d\u0065\u0072\u0069\u0063 \u0072\u006f\u0077\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_dfac :=int (_dgbe .ValueNumber )-1;_gbbc :=-1;if _bdee ==3&&args [2].Type !=ResultTypeEmpty {_babb :=args [2].AsNumber ();if _babb .Type !=ResultTypeNumber {return MakeErrorResult ("I\u004e\u0044\u0045\u0058\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073 \u006e\u0075\u006d\u0065\u0072\u0069\u0063 \u0063\u006f\u006c\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_gbbc =int (_babb .ValueNumber )-1;};if _dfac ==-1&&_gbbc ==-1{return MakeErrorResult ("\u0049\u004e\u0044EX\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0072o\u0077 \u006fr\u0020\u0063\u006f\u006c\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};var _bfcca []Result ;if _acab .Type ==ResultTypeArray {_ceeed :=_acab .ValueArray ;if _dfac < -1||_dfac >=len (_ceeed ){return MakeErrorResult ("\u0049\u004e\u0044\u0045\u0058\u0020\u0068\u0061\u0073\u0020\u0072o\u0077\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072a\u006e\u0067\u0065");};if _dfac ==-1{if _gbbc >=len (_ceeed [0]){return MakeErrorResult ("\u0049\u004e\u0044\u0045\u0058\u0020\u0068\u0061\u0073\u0020\u0063o\u006c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072a\u006e\u0067\u0065");};_ecab :=[][]Result {};for _ ,_adae :=range _ceeed {_aaceb :=_adae [_gbbc ];if _aaceb .Type ==ResultTypeEmpty {_aaceb =MakeNumberResult (0);};_ecab =append (_ecab ,[]Result {_aaceb });};return MakeArrayResult (_ecab );};_bfcca =_ceeed [_dfac ];}else {_ggbf :=_acab .ValueList ;if _dfac < -1||_dfac >=1{return MakeErrorResult ("\u0049\u004e\u0044\u0045\u0058\u0020\u0068\u0061\u0073\u0020\u0072o\u0077\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072a\u006e\u0067\u0065");};if _dfac ==-1{if _gbbc >=len (_ggbf ){return MakeErrorResult ("\u0049\u004e\u0044\u0045\u0058\u0020\u0068\u0061\u0073\u0020\u0063o\u006c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072a\u006e\u0067\u0065");};_ccdf :=_ggbf [_gbbc ];if _ccdf .Type ==ResultTypeEmpty {_ccdf =MakeNumberResult (0);};return _ccdf ;};_bfcca =_ggbf ;};if _gbbc < -1||_gbbc > len (_bfcca ){return MakeErrorResult ("\u0049\u004e\u0044\u0045\u0058\u0020\u0068\u0061\u0073\u0020\u0063o\u006c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072a\u006e\u0067\u0065");};if _gbbc ==-1{_ggdg :=[]Result {};for _ ,_bbfb :=range _bfcca {if _bbfb .Type ==ResultTypeEmpty {_ggdg =append (_ggdg ,MakeNumberResult (0));}else {_ggdg =append (_ggdg ,_bbfb );};};return MakeArrayResult ([][]Result {_ggdg });};_bgggg :=_bfcca [_gbbc ];if _bgggg .Type ==ResultTypeEmpty {return MakeNumberResult (0);};return _bgggg ;};

// ResultType is the type of the result
//go:generate stringer -type=ResultType
type ResultType byte ;

// Indirect is an implementation of the Excel INDIRECT function that returns the
// contents of a cell.
func Indirect (ctx Context ,ev Evaluator ,args []Result )Result {if len (args )!=1&&len (args )!=2{return MakeErrorResult ("\u0049\u004e\u0044\u0049\u0052\u0045\u0043\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006f\u006e\u0065\u0020\u006f\u0072 \u0074\u0077\u006f\u0020\u0061r\u0067\u0075m\u0065\u006e\u0074\u0073");};_fddg :=args [0].AsString ();if _fddg .Type !=ResultTypeString {return MakeErrorResult ("\u0049\u004e\u0044\u0049\u0052\u0045\u0043\u0054\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0069r\u0073t\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066 \u0074\u0079\u0070\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067");};return ctx .Cell (_fddg .ValueString ,ev );};

// NewString constructs a new string expression.
func NewString (v string )Expression {v =_bf .Replace (v ,"\u0022\u0022","\u0022",-1);return String {_bcbdgd :v };};

// Update updates the FunctionCall references after removing a row/column.
func (_bbfdf FunctionCall )Update (q *_aac .UpdateQuery )Expression {_aecge :=[]Expression {};for _ ,_eaeb :=range _bbfdf ._efga {_fgea :=_eaeb .Update (q );_aecge =append (_aecge ,_fgea );};return FunctionCall {_aafc :_bbfdf ._aafc ,_efga :_aecge };};

// Trim is an implementation of the Excel TRIM function that removes leading,
// trailing and consecutive spaces.
func Trim (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0054\u0052\u0049\u004d\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0073t\u0072\u0069\u006e\u0067\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_cfged :=args [0].AsString ();if _cfged .Type !=ResultTypeString {return MakeErrorResult ("\u0054\u0052\u0049\u004d\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0073t\u0072\u0069\u006e\u0067\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_bcaff :=_fd .Buffer {};_bbfdb :=false ;_cdfd :=false ;_caeb :=0;for _ ,_bcag :=range _cfged .ValueString {_dddg :=_bcag ==' ';if _dddg {if !_bbfdb {continue ;};if !_cdfd {_caeb ++;_bcaff .WriteRune (_bcag );};}else {_caeb =0;_bbfdb =true ;_bcaff .WriteRune (_bcag );};_cdfd =_dddg ;};_bcaff .Truncate (_bcaff .Len ()-_caeb );return MakeStringResult (_bcaff .String ());};func _aaf (_fbgg ,_cbfa Result ,_bcbb string )(float64 ,float64 ,Result ){_ebge ,_bdgb :=_ddg (_fbgg ,"\u0073e\u0074t\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0064\u0061\u0074\u0065",_bcbb );if _bdgb .Type ==ResultTypeError {return 0,0,_bdgb ;};_badc ,_bdgb :=_ddg (_cbfa ,"\u006d\u0061\u0074\u0075\u0072\u0069\u0074\u0079\u0020\u0064\u0061\u0074\u0065",_bcbb );if _bdgb .Type ==ResultTypeError {return 0,0,_bdgb ;};if _ebge >=_badc {return 0,0,MakeErrorResultType (ErrorTypeNum ,_bcbb +"\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020m\u0061\u0074\u0075r\u0069\u0074\u0079\u0020\u0064\u0061\u0074\u0065\u0020\u0074o\u0020\u0062\u0065\u0020\u006cat\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0073\u0065\u0074\u0074\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0064\u0061\u0074\u0065");};return _ebge ,_badc ,_fbee ;};

// Effect implements the Excel EFFECT function.
func Effect (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0045\u0046F\u0045\u0043\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006den\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0045\u0046\u0046\u0045\u0043\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u006f\u006d\u0069n\u0061\u006c\u0020\u0069\u006e\u0074\u0065\u0072\u0065\u0073\u0074\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020a\u0072\u0067\u0075\u006d\u0065n\u0074");};_ddfc :=args [0].ValueNumber ;if _ddfc <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0045\u0046\u0046\u0045\u0043\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u006f\u006d\u0069n\u0061\u006c\u0020\u0069\u006e\u0074\u0065\u0072\u0065\u0073\u0074\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062e\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0045\u0046\u0046\u0045\u0043\u0054 \u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u006f\u0066 \u0063\u006f\u006d\u0070\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020p\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075m\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074");};_caac :=float64 (int (args [1].ValueNumber ));if _caac < 1{return MakeErrorResultType (ErrorTypeNum ,"E\u0046\u0046\u0045\u0043\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063o\u006dp\u006f\u0075\u006e\u0064i\u006e\u0067 \u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0031\u0020\u006f\u0072\u0020\u006d\u006f\u0072\u0065");};return MakeNumberResult (_fb .Pow ((1+_ddfc /_caac ),_caac )-1);};

// Disc implements the Excel DISC function.
func Disc (args []Result )Result {_befdg :=len (args );if _befdg !=4&&_befdg !=5{return MakeErrorResult ("\u0044\u0049SC\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s f\u006fur\u0020\u006f\u0072\u0020\u0066\u0069\u0076e \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_dgaf ,_ageb ,_fgbf :=_aaf (args [0],args [1],"\u0044\u0049\u0053\u0043");if _fgbf .Type ==ResultTypeError {return _fgbf ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0072\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_gded :=args [2].ValueNumber ;if _gded <=0{return MakeErrorResultType (ErrorTypeNum ,"D\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0070\u0072\u0020\u0074o \u0062\u0065\u0020\u0070o\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075mb\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0049S\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0064\u0065\u006d\u0070\u0074\u0069\u006f\u006e\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_feee :=args [3].ValueNumber ;if _feee <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0049\u0053\u0043\u0020\u0072\u0065q\u0075\u0069\u0072e\u0073\u0020\u0072e\u0064\u0065m\u0070\u0074\u0069\u006f\u006e\u0020t\u006f b\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dfca :=0;if _befdg ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0049\u0053\u0043\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0062\u0061\u0073\u0069\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dfca =int (args [4].ValueNumber );if !_fdgc (_dfca ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0062\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0020\u0066\u006f\u0072 \u0044\u0049\u0053\u0043");};};_fagb ,_fgbf :=_gbab (_dgaf ,_ageb ,_dfca );if _fgbf .Type ==ResultTypeError {return _fgbf ;};return MakeNumberResult ((_feee -_gded )/_feee /_fagb );};

// FunctionCall is a function call expression.
type FunctionCall struct{_aafc string ;_efga []Expression ;};var _fedae =false ;func LexReader (r _f .Reader )chan *node {_fdceb :=NewLexer ();go _fdceb .lex (r );return _fdceb ._ddgcb };func _eabdb (_eeabg Result )[][]Result {switch _eeabg .Type {case ResultTypeArray :return _eeabg .ValueArray ;case ResultTypeList :return [][]Result {_eeabg .ValueList };default:return [][]Result {};};};func _ddcd (_aagf float64 )float64 {return float64 (int (_aagf +0.5))};func _ea (_dgf BinOpType ,_fbf [][]Result ,_gdc Result )Result {_ffa :=[][]Result {};for _cg :=range _fbf {_dfa :=_eb (_dgf ,_fbf [_cg ],_gdc );if _dfa .Type ==ResultTypeError {return _dfa ;};_ffa =append (_ffa ,_dfa .ValueList );};return MakeArrayResult (_ffa );};func _dddcf (_gdccd ,_dfbd float64 )bool {return _fb .Abs (_gdccd -_dfbd )< 1.0e-6};func _dbgb (_dgbcg string ,_ddfbe func (_fbdf float64 )float64 )Function {return func (_eac []Result )Result {if len (_eac )!=1{return MakeErrorResult (_dgbcg +"\u0020\u0072\u0065\u0071ui\u0072\u0065\u0073\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_bbda :=_eac [0].AsNumber ();switch _bbda .Type {case ResultTypeNumber :_agggd :=_ddfbe (_bbda .ValueNumber );if _fb .IsNaN (_agggd ){return MakeErrorResult (_dgbcg +"\u0020\u0072\u0065\u0074\u0075\u0072\u006e\u0065\u0064\u0020\u004e\u0061\u004e");};if _fb .IsInf (_agggd ,0){return MakeErrorResult (_dgbcg +"\u0020r\u0065t\u0075\u0072\u006e\u0065\u0064 \u0069\u006ef\u0069\u006e\u0069\u0074\u0079");};return MakeNumberResult (_agggd );case ResultTypeList ,ResultTypeString :return MakeErrorResult (_dgbcg +"\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u006e\u0075\u006de\u0072i\u0063\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");case ResultTypeError :return _bbda ;default:return MakeErrorResult (_c .Sprintf ("\u0075\u006e\u0068a\u006e\u0064\u006c\u0065d\u0020\u0025\u0073\u0028\u0029\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_dgbcg ,_bbda .Type ));};};};type node struct{_egagd tokenType ;_fbbga string ;};const _ebg ="\u0028(\u005b0\u002d\u0039\u005d\u0029\u002b)\u0020\u0028a\u006d\u007c\u0070\u006d\u0029";

// ConstArrayExpr is a constant array expression.
type ConstArrayExpr struct{_ge [][]Expression };func _bfcg (_feeg yyLexer ,_bbed *yySymType )(_dfdgb ,_cddba int ){_cddba =0;_dfdgb =_feeg .Lex (_bbed );if _dfdgb <=0{_cddba =_bgdc [0];goto _edfa ;};if _dfdgb < len (_bgdc ){_cddba =_bgdc [_dfdgb ];goto _edfa ;};if _dfdgb >=_agaba {if _dfdgb < _agaba +len (_ecbg ){_cddba =_ecbg [_dfdgb -_agaba ];goto _edfa ;};};for _eefebf :=0;_eefebf < len (_dgdb );_eefebf +=2{_cddba =_dgdb [_eefebf +0];if _cddba ==_dfdgb {_cddba =_dgdb [_eefebf +1];goto _edfa ;};};_edfa :if _cddba ==0{_cddba =_ecbg [1];};if _fbeb >=3{_c .Printf ("l\u0065\u0078\u0020\u0025\u0073\u0028\u0025\u0064\u0029\u000a",_eabb (_cddba ),uint (_dfdgb ));};return _dfdgb ,_cddba ;};

// Update updates references in the VerticalRange after removing a row/column.
func (_debbd VerticalRange )Update (q *_aac .UpdateQuery )Expression {if q .UpdateType ==_aac .UpdateActionRemoveColumn {_ddfcd :=_debbd ;if q .UpdateCurrentSheet {_ddce :=q .ColumnIdx ;_ddfcd ._caafg =_ffg (_debbd ._caafg ,_ddce );_ddfcd ._beege =_ffg (_debbd ._beege ,_ddce );};return _ddfcd ;};return _debbd ;};

// String returns an empty string for EmptyExpr.
func (_cfe EmptyExpr )String ()string {return ""};

// Eval evaluates and returns the result of a Negate expression.
func (_aegde Negate )Eval (ctx Context ,ev Evaluator )Result {_dffbc :=_aegde ._efbc .Eval (ctx ,ev );if _dffbc .Type ==ResultTypeNumber {return MakeNumberResult (-_dffbc .ValueNumber );};return MakeErrorResult ("\u004e\u0045\u0047A\u0054\u0045\u0020\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};

// VLookup implements the VLOOKUP function that returns a matching value from a
// column in an array.
func VLookup (args []Result )Result {_cbbgf :=len (args );if _cbbgf < 3{return MakeErrorResult ("\u0056\u004c\u004f\u004f\u004bU\u0050\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074 \u006c\u0065\u0061\u0073\u0074\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if _cbbgf > 4{return MakeErrorResult ("\u0056\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0061\u0074\u0020m\u006f\u0073\u0074\u0020\u0066\u006f\u0075\u0072\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_gcgb :=args [0];_dfgf :=args [1];if _dfgf .Type !=ResultTypeArray {return MakeErrorResult ("\u0056\u004cO\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_cfagb :=args [2].AsNumber ();if _cfagb .Type !=ResultTypeNumber {return MakeErrorResult ("\u0056\u004cO\u004f\u004b\u0055\u0050 \u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075m\u0065\u0072\u0069\u0063\u0020\u0063\u006f\u006c\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_aafd :=false ;if _cbbgf ==4&&args [3].Type !=ResultTypeEmpty {_cfaeg :=args [3].AsNumber ();if _cfaeg .Type !=ResultTypeNumber {return MakeErrorResult ("\u0056\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u006e\u0075\u006de\u0072\u0069\u0063\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};if _cfaeg .ValueNumber ==0{_aafd =true ;};};_cbcga :=int (_cfagb .ValueNumber )-1;_fddd :=-1;_gffa :=false ;_dbcd :for _fbfba ,_ebgb :=range _dfgf .ValueArray {if len (_ebgb )==0{continue ;};_ffaf :=_ebgb [0];switch _befb (_ffaf ,_gcgb ,false ,_aafd ){case _bacgf :_fddd =_fbfba ;case _fced :_fddd =_fbfba ;_gffa =true ;break _dbcd ;};};if _fddd ==-1{return MakeErrorResultType (ErrorTypeNA ,"\u0056\u004c\u004fOK\u0055\u0050\u0020\u006e\u006f\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_eaab :=_dfgf .ValueArray [_fddd ];if _cbcga < 0||_cbcga >=len (_eaab ){return MakeErrorResult ("\u0056\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0068\u0061\u0073\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0063\u006f\u006c\u0075\u006d\u006e\u0020\u0069\u006e\u0064\u0065\u0078");};if _gffa ||!_aafd {return _eaab [_cbcga ];};return MakeErrorResultType (ErrorTypeNA ,"\u0056\u004c\u004fOK\u0055\u0050\u0020\u006e\u006f\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};

// Eval evaluates and returns the result of a function call.
func (_fcagc FunctionCall )Eval (ctx Context ,ev Evaluator )Result {_bdfce :=LookupFunction (_fcagc ._aafc );if _bdfce !=nil {_gaebb :=make ([]Result ,len (_fcagc ._efga ));for _ggeba ,_acee :=range _fcagc ._efga {_gaebb [_ggeba ]=_acee .Eval (ctx ,ev );_gaebb [_ggeba ].Ref =_acee .Reference (ctx ,ev );};if _ ,_daef :=_bfffg [_fcagc ._aafc ];!_daef {if _faae ,_bafae :=_gbbe (_gaebb );_faae {return _bafae ;};};return _bdfce (_gaebb );};_egag :=LookupFunctionComplex (_fcagc ._aafc );if _egag !=nil {_bbbec :=make ([]Result ,len (_fcagc ._efga ));for _ddbb ,_cefcc :=range _fcagc ._efga {_bbbec [_ddbb ]=_cefcc .Eval (ctx ,ev );_bbbec [_ddbb ].Ref =_cefcc .Reference (ctx ,ev );};if _ ,_fgdb :=_bfffg [_fcagc ._aafc ];!_fgdb {if _fdge ,_ebfa :=_gbbe (_bbbec );_fdge {return _ebfa ;};};return _egag (ctx ,ev ,_bbbec );};return MakeErrorResult ("\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0020"+_fcagc ._aafc );};

// Findb is an implementation of the Excel FINDB().
func Findb (ctx Context ,ev Evaluator ,args []Result )Result {if !ctx .IsDBCS (){return Find (args );};_afbaf ,_gbeda :=_cace ("\u0046\u0049\u004e\u0044",args );if _gbeda .Type !=ResultTypeEmpty {return _gbeda ;};_gcfga :=_afbaf ._ebdbd ;if _gcfga ==""{return MakeNumberResult (1.0);};_agddc :=_afbaf ._eegd ;_fcgf :=_afbaf ._edfc -1;_bgaa :=1;_edfg :=0;for _dgfce :=range _agddc {if _dgfce !=0{_cacc :=1;if _dgfce -_edfg > 1{_cacc =2;};_bgaa +=_cacc ;};if _bgaa > _fcgf {_cfff :=_bf .Index (_agddc [_dgfce :],_gcfga );if _cfff ==0{return MakeNumberResult (float64 (_bgaa ));};};_edfg =_dgfce ;};return MakeErrorResultType (ErrorTypeValue ,"\u004eo\u0074\u0020\u0066\u006f\u0075\u006ed");};func _eagbdb (_eabga Context ,_fbcfd ,_bbgd string )(string ,string ){_fccf :=_fbcfd +"\u0031";_bcaae :=_eabga .LastRow (_fbcfd );_ceedd :=_bbgd +_ad .Itoa (_bcaae );return _fccf ,_ceedd ;};const _eae ="\u0028\u0028\u006a\u0061\u006e|\u006a\u0061\u006e\u0075\u0061\u0072\u0079\u0029\u007c\u0028\u0066\u0065\u0062\u007c\u0066\u0065\u0062\u0072\u0075a\u0072\u0079\u0029\u007c\u0028\u006da\u0072\u007c\u006da\u0072\u0063\u0068\u0029\u007c\u0028\u0061\u0070\u0072\u007c\u0061\u0070\u0072\u0069\u006c\u0029\u007c\u0028\u006d\u0061\u0079\u0029\u007c\u0028j\u0075\u006e\u007cj\u0075\u006e\u0065\u0029\u007c\u0028\u006a\u0075\u006c\u007c\u006a\u0075\u006c\u0079\u0029\u007c\u0028a\u0075\u0067\u007c\u0061\u0075\u0067\u0075\u0073t\u0029\u007c\u0028\u0073\u0065\u0070\u007c\u0073\u0065\u0070\u0074\u0065\u006d\u0062\u0065\u0072\u0029\u007c\u0028o\u0063\u0074\u007c\u006f\u0063\u0074\u006f\u0062\u0065\u0072\u0029\u007c\u0028\u006e\u006f\u0076\u007c\u006e\u006f\u0076\u0065\u006d\u0062e\u0072\u0029\u007c\u0028\u0064\u0065\u0063\u007c\u0064\u0065\u0063\u0065\u006d\u0062\u0065\u0072\u0029\u0029";

// Replace is an implementation of the Excel REPLACE().
func Replace (args []Result )Result {_agab ,_deee :=_cgacf ("\u0052E\u0050\u004c\u0041\u0043\u0045",args );if _deee .Type !=ResultTypeEmpty {return _deee ;};_bgee :=_agab ._ceg ;_beeb :=_agab ._cgbc ;_fdafg :=_agab ._ceef ;_fbegb :=_agab ._fcgg ;_aced :=len (_bgee );if _beeb > _aced {_beeb =_aced ;};_eedg :=_beeb +_fdafg ;if _eedg > _aced {_eedg =_aced ;};_gcde :=_bgee [0:_beeb ]+_fbegb +_bgee [_eedg :];return MakeStringResult (_gcde );};func MakeRangeReference (ref string )Reference {return Reference {Type :ReferenceTypeRange ,Value :ref }};func _cefdb (_beaa float64 )float64 {_cecga :=float64 (1);for _aegdg :=float64 (2);_aegdg <=_beaa ;_aegdg ++{_cecga *=_aegdg ;};return _cecga ;};

// BinaryExpr is a binary expression.
type BinaryExpr struct{_g ,_fde Expression ;_df BinOpType ;};

// MakeListResult constructs a list result.
func MakeListResult (list []Result )Result {return Result {Type :ResultTypeList ,ValueList :list }};

// String returns a string representation of a horizontal range with prefix.
func (_aefgb PrefixHorizontalRange )String ()string {return _c .Sprintf ("\u0025\u0073\u0021\u0025\u0064\u003a\u0025\u0064",_aefgb ._caace .String (),_aefgb ._cadab ,_aefgb ._dgbaa );};

// String returns a string representation of a horizontal range.
func (_bebb HorizontalRange )String ()string {return _bebb .horizontalRangeReference ()};

// TimeValue is an implementation of the Excel TIMEVALUE() function.
func TimeValue (args []Result )Result {if len (args )!=1||args [0].Type !=ResultTypeString {return MakeErrorResult ("\u0054I\u004d\u0045V\u0041\u004c\u0055\u0045 \u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069ng\u006c\u0065\u0020s\u0074\u0072i\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065n\u0074\u0073");};_dec :=_bf .ToLower (args [0].ValueString );if !_gbgg (_dec ){_ ,_ ,_ ,_adca ,_gdfac :=_cfbgc (_dec );if _gdfac .Type ==ResultTypeError {_gdfac .ErrorMessage ="\u0049\u006e\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020f\u006f\u0072\u0020\u0054\u0049\u004d\u0045V\u0041\u004c\u0055\u0045";return _gdfac ;};if _adca {return MakeNumberResult (0);};};_aaed ,_gab ,_edac ,_eceb ,_ ,_gff :=_fgad (_dec );if _gff .Type ==ResultTypeError {return _gff ;};_geec :=_ebbc (float64 (_aaed ),float64 (_gab ),_edac );if _eceb {_geec +=0.5;}else if _geec >=1{_geec -=float64 (int (_geec ));};return MakeNumberResult (_geec );};func _gbfa (_eggf Result )bool {_abgf :=_eggf .Type ;return _abgf !=ResultTypeArray &&_abgf !=ResultTypeList ;};

// FloorPrecise is an implementation of the FlOOR.PRECISE function.
func FloorPrecise (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0046\u004cO\u004f\u0052\u002e\u0050\u0052\u0045\u0043\u0049\u0053\u0045\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if len (args )> 2{return MakeErrorResult ("\u0046L\u004f\u004fR\u002e\u0050\u0052\u0045C\u0049\u0053\u0045(\u0029\u0020\u0061\u006c\u006c\u006f\u0077\u0073\u0020at\u0020\u006d\u006fs\u0074\u0020t\u0077\u006f\u0020\u0061\u0072\u0067u\u006d\u0065n\u0074\u0073");};_aegfg :=args [0].AsNumber ();if _aegfg .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069\u0072\u0073\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020F\u004c\u004f\u004f\u0052\u002e\u0050\u0052E\u0043\u0049\u0053\u0045\u0028\u0029\u0020\u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_gbdd :=float64 (1);if _aegfg .ValueNumber < 0{_gbdd =-1;};if len (args )> 1{_gdae :=args [1].AsNumber ();if _gdae .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063\u006f\u006ed\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020F\u004c\u004f\u004f\u0052\u002e\u0050\u0052\u0045\u0043\u0049\u0053\u0045\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065r");};_gbdd =_fb .Abs (_gdae .ValueNumber );};if len (args )==1{return MakeNumberResult (_fb .Floor (_aegfg .ValueNumber ));};_egcd :=_aegfg .ValueNumber ;_egcd ,_cgef :=_fb .Modf (_egcd /_gbdd );if _cgef !=0{if _aegfg .ValueNumber < 0{_egcd --;};};return MakeNumberResult (_egcd *_gbdd );};

// String returns a string representation for Negate.
func (_fcggd Negate )String ()string {return "\u002d"+_fcggd ._efbc .String ()};

// Coupnum implements the Excel COUPNUM function.
func Coupnum (args []Result )Result {_bafa ,_eec :=_ced (args ,"\u0043O\u0055\u0050\u004e\u0055\u004d");if _eec .Type ==ResultTypeError {return _eec ;};_gcfgg :=_bafa ._fea ;_gafc :=_bafa ._ffba ;_fdacb ,_eec :=_agfd (_bafa ._ebbf ,_bafa ._fee ,_gcfgg ,_gafc );if _eec .Type ==ResultTypeError {return _eec ;};return MakeNumberResult (_fdacb );};type durationArgs struct{_eedc float64 ;_decg float64 ;_fbb float64 ;_agag float64 ;_efed float64 ;_gfgb int ;};func _gbab (_gabb ,_aacd float64 ,_afdg int )(float64 ,Result ){_bfg ,_bab :=_edgb (_gabb ),_edgb (_aacd );_eaea :=_bfg .Unix ();_adcc :=_bab .Unix ();if _eaea ==_adcc {return 0,_fbee ;};_ecegd ,_ggf ,_adga :=_bfg .Date ();_cgdb ,_bfd ,_fba :=_bab .Date ();_egd ,_gdde :=int (_ggf ),int (_bfd );var _gcfd ,_ffea float64 ;switch _afdg {case 0:if _adga ==31{_adga --;};if _adga ==30&&_fba ==31{_fba --;}else if _gbgga :=_gda (_ecegd );_egd ==2&&((_gbgga &&_adga ==29)||(!_gbgga &&_adga ==28)){_adga =30;if _cfbgcg :=_gda (_cgdb );_gdde ==2&&((_cfbgcg &&_fba ==29)||(!_cfbgcg &&_fba ==28)){_fba =30;};};_gcfd =float64 ((_cgdb -_ecegd )*360+(_gdde -_egd )*30+(_fba -_adga ));_ffea =360;case 1:_gcfd =_aacd -_gabb ;_baad :=_ecegd !=_cgdb ;if _baad &&(_cgdb !=_ecegd +1||_egd < _gdde ||(_egd ==_gdde &&_adga < _fba )){_cdbfg :=0;for _ceebb :=_ecegd ;_ceebb <=_cgdb ;_ceebb ++{_cdbfg +=_dedf (_ceebb ,1);};_ffea =float64 (_cdbfg )/float64 (_cgdb -_ecegd +1);}else {if !_baad &&_gda (_ecegd ){_ffea =366;}else {if _baad &&((_gda (_ecegd )&&(_egd < 2||(_egd ==2&&_adga <=29)))||(_gda (_cgdb )&&(_gdde > 2||(_gdde ==2&&_fba ==29)))){_ffea =366;}else {_ffea =365;};};};case 2:_gcfd =_aacd -_gabb ;_ffea =360;case 3:_gcfd =_aacd -_gabb ;_ffea =365;case 4:if _adga ==31{_adga --;};if _fba ==31{_fba --;};_gcfd =float64 ((_cgdb -_ecegd )*360+(_gdde -_egd )*30+(_fba -_adga ));_ffea =360;default:return 0,MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0062\u0061\u0073\u0069\u0073 \u0066o\u0072\u0020\u0059\u0065\u0061\u0072\u0046r\u0061\u0063");};return _gcfd /_ffea ,_fbee ;};func _cace (_acfaga string ,_gdccg []Result )(*parsedSearchObject ,Result ){_ccae :=len (_gdccg );if _ccae !=2&&_ccae !=3{return nil ,MakeErrorResult (_acfaga +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u006fr\u0020t\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_dbbc :=_gdccg [0];if _dbbc .Type ==ResultTypeError {return nil ,_dbbc ;};if _dbbc .Type !=ResultTypeString &&_dbbc .Type !=ResultTypeNumber {return nil ,MakeErrorResult ("\u0054\u0068e\u0020\u0066\u0069\u0072s\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u0020\u0073t\u0072\u0069\u006e\u0067");};_gcdf :=_gdccg [1];if _gcdf .Type ==ResultTypeError {return nil ,_gcdf ;};if _gcdf .Type !=ResultTypeString &&_gcdf .Type !=ResultTypeNumber {return nil ,MakeErrorResult ("\u0054\u0068\u0065\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020a\u0020\u0073t\u0072\u0069\u006e\u0067");};_edad :=_gcdf .Value ();_ccce :=_dbbc .Value ();_gebg :=1;if _ccae ==3&&_gdccg [2].Type !=ResultTypeEmpty {_aefgf :=_gdccg [2];if _aefgf .Type !=ResultTypeNumber {return nil ,MakeErrorResult ("P\u006f\u0073\u0069\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_gebg =int (_aefgf .ValueNumber );if _gebg < 1{return nil ,MakeErrorResultType (ErrorTypeValue ,"\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0061 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006d\u006f\u0072\u0065\u0020\u0074h\u0061\u006e\u0020\u0030");};if _gebg > len (_edad ){return nil ,MakeErrorResultType (ErrorTypeValue ,"\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0061 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006d\u006f\u0072\u0065\u0020\u0074h\u0061\u006e\u0020\u0030");};};return &parsedSearchObject {_ccce ,_edad ,_gebg },_fbee ;};const _bcbdg int =30;func _deaff (_dgdd ,_fcbf int )string {const TOKSTART =4;if !_bcade {return "\u0073\u0079\u006et\u0061\u0078\u0020\u0065\u0072\u0072\u006f\u0072";};for _ ,_ffdea :=range _gegda {if _ffdea ._gfggg ==_dgdd &&_ffdea ._bgac ==_fcbf {return "\u0073\u0079\u006e\u0074\u0061\u0078\u0020\u0065\u0072r\u006f\u0072\u003a\u0020"+_ffdea ._gagb ;};};_gege :="\u0073y\u006e\u0074\u0061\u0078 \u0065\u0072\u0072\u006f\u0072:\u0020u\u006ee\u0078\u0070\u0065\u0063\u0074\u0065\u0064 "+_eabb (_fcbf );_gebad :=make ([]int ,0,4);_bdbae :=_agda [_dgdd ];for _fbdg :=TOKSTART ;_fbdg -1< len (_bgabf );_fbdg ++{if _gedg :=_bdbae +_fbdg ;_gedg >=0&&_gedg < _dedfa &&_cabbc [_ddcg [_gedg ]]==_fbdg {if len (_gebad )==cap (_gebad ){return _gege ;};_gebad =append (_gebad ,_fbdg );};};if _cgdc [_dgdd ]==-2{_eacg :=0;for _dfab [_eacg ]!=-1||_dfab [_eacg +1]!=_dgdd {_eacg +=2;};for _eacg +=2;_dfab [_eacg ]>=0;_eacg +=2{_eebg :=_dfab [_eacg ];if _eebg < TOKSTART ||_dfab [_eacg +1]==0{continue ;};if len (_gebad )==cap (_gebad ){return _gege ;};_gebad =append (_gebad ,_eebg );};if _dfab [_eacg +1]!=0{return _gege ;};};for _gegb ,_dffe :=range _gebad {if _gegb ==0{_gege +="\u002c\u0020\u0065x\u0070\u0065\u0063\u0074\u0069\u006e\u0067\u0020";}else {_gege +="\u0020\u006f\u0072\u0020";};_gege +=_eabb (_dffe );};return _gege ;};func _ceed (_cgb []Result ,_bdfg bool )Result {var _aebg string ;if _bdfg {_aebg ="\u004c\u0041\u0052G\u0045";}else {_aebg ="\u0053\u004d\u0041L\u004c";};if len (_cgb )!=2{return MakeErrorResult (_aebg +"\u0020\u0072\u0065qu\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_faadb :=_cgb [0];var _dgbab [][]Result ;switch _faadb .Type {case ResultTypeArray :_dgbab =_faadb .ValueArray ;case ResultTypeList :_dgbab =[][]Result {_faadb .ValueList };default:return MakeErrorResult (_aebg +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074 \u006f\u0066\u0020\u0074\u0079p\u0065\u0020a\u0072\u0072\u0061\u0079");};if len (_dgbab )==0{return MakeErrorResult (_aebg +"\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0074\u006f\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u0031\u0020\u0072\u006f\u0077");};if _cgb [1].Type !=ResultTypeNumber {return MakeErrorResult (_aebg +" \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074yp\u0065\u0020\u006eu\u006db\u0065\u0072");};_bgfb :=_cgb [1].ValueNumber ;if _bgfb < 1{return MakeErrorResultType (ErrorTypeNum ,_aebg +"\u0020\u0072e\u0071\u0075\u0069\u0072\u0065s\u0020\u0073\u0065\u0063\u006fn\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e\u0020\u0030");};_eaeca :=int (_bgfb );if float64 (_eaeca )!=_bgfb {return MakeErrorResultType (ErrorTypeNum ,_aebg +"\u0020\u0072e\u0071\u0075\u0069\u0072\u0065s\u0020\u0073\u0065\u0063\u006fn\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e\u0020\u0030");};_dcbg :=[]float64 {};for _ ,_fgbbb :=range _dgbab {for _ ,_dgea :=range _fgbbb {if _dgea .Type ==ResultTypeNumber {_dcbg =append (_dcbg ,_dgea .ValueNumber );};};};if _eaeca > len (_dcbg ){return MakeErrorResultType (ErrorTypeNum ,_aebg +" \u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u006c\u0065s\u0073\u0020\u006f\u0072\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u0068\u0061\u006e\u0020t\u0068\u0065\u0020\u006e\u0075m\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u006e\u0075\u006d\u0062\u0065\u0072s\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_cfgeb :=_fa .MergeSort (_dcbg );if _bdfg {return MakeNumberResult (_cfgeb [len (_cfgeb )-_eaeca ]);}else {return MakeNumberResult (_cfgeb [_eaeca -1]);};};var _gaec []byte =[]byte {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,69,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};func (_edce *yyParserImpl )Parse (yylex yyLexer )int {_cgbg :=_bd .Now ();var _ggecg int ;var _gefd yySymType ;var _aabc []yySymType ;_ =_aabc ;_degad :=_edce ._gcfdda [:];Nerrs :=0;Errflag :=0;_agbc :=0;_edce ._eabfc =-1;_fgfb :=-1;defer func (){_agbc =-1;_edce ._eabfc =-1;_fgfb =-1}();_cdgacc :=-1;goto _dgedf ;_fdfbb :return 0;_egge :return 1;_dgedf :if _fcdbe (_cgbg ){_ce .Log ("\u0050\u0061\u0072\u0073\u0065\u0020\u0074\u0069\u006d\u0065\u006f\u0075\u0074");goto _egge ;};if _fbeb >=4{_c .Printf ("\u0063\u0068\u0061\u0072\u0020\u0025\u0076\u0020\u0069n\u0020\u0025\u0076\u000a",_eabb (_fgfb ),_ggaaf (_agbc ));};_cdgacc ++;if _cdgacc >=len (_degad ){_fbaea :=make ([]yySymType ,len (_degad )*2);copy (_fbaea ,_degad );_degad =_fbaea ;};_degad [_cdgacc ]=_gefd ;_degad [_cdgacc ]._eagbd =_agbc ;_gacfg :if _fcdbe (_cgbg ){_ce .Log ("\u0050\u0061\u0072\u0073\u0065\u0020\u0074\u0069\u006d\u0065\u006f\u0075\u0074");goto _egge ;};_ggecg =_agda [_agbc ];if _ggecg <=_bcge {goto _fgdbb ;};if _edce ._eabfc < 0{_edce ._eabfc ,_fgfb =_bfcg (yylex ,&_edce ._fadef );};_ggecg +=_fgfb ;if _ggecg < 0||_ggecg >=_dedfa {goto _fgdbb ;};_ggecg =_ddcg [_ggecg ];if _cabbc [_ggecg ]==_fgfb {_edce ._eabfc =-1;_fgfb =-1;_gefd =_edce ._fadef ;_agbc =_ggecg ;if Errflag > 0{Errflag --;};goto _dgedf ;};_fgdbb :if _fcdbe (_cgbg ){_ce .Log ("\u0050\u0061\u0072\u0073\u0065\u0020\u0074\u0069\u006d\u0065\u006f\u0075\u0074");goto _egge ;};_ggecg =_cgdc [_agbc ];if _ggecg ==-2{if _edce ._eabfc < 0{_edce ._eabfc ,_fgfb =_bfcg (yylex ,&_edce ._fadef );};_caea :=0;for {if _dfab [_caea +0]==-1&&_dfab [_caea +1]==_agbc {break ;};_caea +=2;};for _caea +=2;;_caea +=2{_ggecg =_dfab [_caea +0];if _ggecg < 0||_ggecg ==_fgfb {break ;};};_ggecg =_dfab [_caea +1];if _ggecg < 0{goto _fdfbb ;};};if _ggecg ==0{switch Errflag {case 0:yylex .Error (_deaff (_agbc ,_fgfb ));Nerrs ++;if _fbeb >=1{_c .Printf ("\u0025\u0073",_ggaaf (_agbc ));_c .Printf ("\u0020\u0073\u0061\u0077\u0020\u0025\u0073\u000a",_eabb (_fgfb ));};fallthrough;case 1,2:Errflag =3;for _cdgacc >=0{_ggecg =_agda [_degad [_cdgacc ]._eagbd ]+_dgabg ;if _ggecg >=0&&_ggecg < _dedfa {_agbc =_ddcg [_ggecg ];if _cabbc [_agbc ]==_dgabg {goto _dgedf ;};};if _fbeb >=2{_c .Printf ("\u0065\u0072r\u006f\u0072\u0020\u0072\u0065\u0063\u006f\u0076\u0065\u0072\u0079\u0020\u0070\u006f\u0070\u0073\u0020\u0073\u0074\u0061\u0074\u0065 %\u0064\u000a",_degad [_cdgacc ]._eagbd );};_cdgacc --;};goto _egge ;case 3:if _fbeb >=2{_c .Printf ("e\u0072\u0072\u006f\u0072\u0020\u0072e\u0063\u006f\u0076\u0065\u0072\u0079\u0020\u0064\u0069s\u0063\u0061\u0072d\u0073 \u0025\u0073\u000a",_eabb (_fgfb ));};if _fgfb ==_daaff {goto _egge ;};_edce ._eabfc =-1;_fgfb =-1;goto _gacfg ;};};if _fbeb >=2{_c .Printf ("\u0072e\u0064u\u0063\u0065\u0020\u0025\u0076 \u0069\u006e:\u000a\u0009\u0025\u0076\u000a",_ggecg ,_ggaaf (_agbc ));};_dfbe :=_ggecg ;_ffga :=_cdgacc ;_ =_ffga ;_cdgacc -=_cbcb [_ggecg ];if _cdgacc +1>=len (_degad ){_bgbf :=make ([]yySymType ,len (_degad )*2);copy (_bgbf ,_degad );_degad =_bgbf ;};_gefd =_degad [_cdgacc +1];_ggecg =_ffee [_ggecg ];_ccec :=_cafda [_ggecg ];_cedd :=_ccec +_degad [_cdgacc ]._eagbd +1;if _cedd >=_dedfa {_agbc =_ddcg [_ccec ];}else {_agbc =_ddcg [_cedd ];if _cabbc [_agbc ]!=-_ggecg {_agbc =_ddcg [_ccec ];};};switch _dfbe {case 1:_aabc =_degad [_ffga -1:_ffga +1];{yylex .(*plex )._aegdd =_gefd ._cbga ;};case 3:_aabc =_degad [_ffga -2:_ffga +1];{_gefd ._cbga =_aabc [2]._cbga ;};case 4:_aabc =_degad [_ffga -4:_ffga +1];{};case 5:_aabc =_degad [_ffga -1:_ffga +1];{_gefd ._cbga =NewBool (_aabc [1]._befg ._fbbga );};case 6:_aabc =_degad [_ffga -1:_ffga +1];{_gefd ._cbga =NewNumber (_aabc [1]._befg ._fbbga );};case 7:_aabc =_degad [_ffga -1:_ffga +1];{_gefd ._cbga =NewString (_aabc [1]._befg ._fbbga );};case 8:_aabc =_degad [_ffga -1:_ffga +1];{_gefd ._cbga =NewError (_aabc [1]._befg ._fbbga );};case 9:_aabc =_degad [_ffga -2:_ffga +1];{_gefd ._cbga =_aabc [2]._cbga ;};case 10:_aabc =_degad [_ffga -2:_ffga +1];{_gefd ._cbga =NewNegate (_aabc [2]._cbga );};case 15:_aabc =_degad [_ffga -3:_ffga +1];{_gefd ._cbga =_aabc [2]._cbga ;};case 17:_aabc =_degad [_ffga -3:_ffga +1];{_gefd ._cbga =NewConstArrayExpr (_aabc [2]._bfag );};case 18:_aabc =_degad [_ffga -1:_ffga +1];{_gefd ._bfag =append (_gefd ._bfag ,_aabc [1]._ggcb );};case 19:_aabc =_degad [_ffga -3:_ffga +1];{_gefd ._bfag =append (_aabc [1]._bfag ,_aabc [3]._ggcb );};case 20:_aabc =_degad [_ffga -1:_ffga +1];{_gefd ._ggcb =append (_gefd ._ggcb ,_aabc [1]._cbga );};case 21:_aabc =_degad [_ffga -3:_ffga +1];{_gefd ._ggcb =append (_aabc [1]._ggcb ,_aabc [3]._cbga );};case 23:_aabc =_degad [_ffga -2:_ffga +1];{_gefd ._cbga =NewPrefixExpr (_aabc [1]._cbga ,_aabc [2]._cbga );};case 25:_aabc =_degad [_ffga -1:_ffga +1];{_gefd ._cbga =NewSheetPrefixExpr (_aabc [1]._befg ._fbbga );};case 26:_aabc =_degad [_ffga -1:_ffga +1];{_gefd ._cbga =NewCellRef (_aabc [1]._befg ._fbbga );};case 27:_aabc =_degad [_ffga -3:_ffga +1];{_gefd ._cbga =NewRange (_aabc [1]._cbga ,_aabc [3]._cbga );};case 28:_aabc =_degad [_ffga -4:_ffga +1];{_gefd ._cbga =NewPrefixRangeExpr (_aabc [1]._cbga ,_aabc [2]._cbga ,_aabc [4]._cbga );};case 29:_aabc =_degad [_ffga -1:_ffga +1];{_gefd ._cbga =NewNamedRangeRef (_aabc [1]._befg ._fbbga );};case 30:_aabc =_degad [_ffga -1:_ffga +1];{_gefd ._cbga =NewHorizontalRange (_aabc [1]._befg ._fbbga );};case 31:_aabc =_degad [_ffga -1:_ffga +1];{_gefd ._cbga =NewVerticalRange (_aabc [1]._befg ._fbbga );};case 32:_aabc =_degad [_ffga -2:_ffga +1];{_gefd ._cbga =NewPrefixHorizontalRange (_aabc [1]._cbga ,_aabc [2]._befg ._fbbga );};case 33:_aabc =_degad [_ffga -2:_ffga +1];{_gefd ._cbga =NewPrefixVerticalRange (_aabc [1]._cbga ,_aabc [2]._befg ._fbbga );};case 34:_aabc =_degad [_ffga -3:_ffga +1];{_gefd ._cbga =NewBinaryExpr (_aabc [1]._cbga ,BinOpTypePlus ,_aabc [3]._cbga );};case 35:_aabc =_degad [_ffga -3:_ffga +1];{_gefd ._cbga =NewBinaryExpr (_aabc [1]._cbga ,BinOpTypeMinus ,_aabc [3]._cbga );};case 36:_aabc =_degad [_ffga -3:_ffga +1];{_gefd ._cbga =NewBinaryExpr (_aabc [1]._cbga ,BinOpTypeMult ,_aabc [3]._cbga );};case 37:_aabc =_degad [_ffga -3:_ffga +1];{_gefd ._cbga =NewBinaryExpr (_aabc [1]._cbga ,BinOpTypeDiv ,_aabc [3]._cbga );};case 38:_aabc =_degad [_ffga -3:_ffga +1];{_gefd ._cbga =NewBinaryExpr (_aabc [1]._cbga ,BinOpTypeExp ,_aabc [3]._cbga );};case 39:_aabc =_degad [_ffga -3:_ffga +1];{_gefd ._cbga =NewBinaryExpr (_aabc [1]._cbga ,BinOpTypeLT ,_aabc [3]._cbga );};case 40:_aabc =_degad [_ffga -3:_ffga +1];{_gefd ._cbga =NewBinaryExpr (_aabc [1]._cbga ,BinOpTypeGT ,_aabc [3]._cbga );};case 41:_aabc =_degad [_ffga -3:_ffga +1];{_gefd ._cbga =NewBinaryExpr (_aabc [1]._cbga ,BinOpTypeLEQ ,_aabc [3]._cbga );};case 42:_aabc =_degad [_ffga -3:_ffga +1];{_gefd ._cbga =NewBinaryExpr (_aabc [1]._cbga ,BinOpTypeGEQ ,_aabc [3]._cbga );};case 43:_aabc =_degad [_ffga -3:_ffga +1];{_gefd ._cbga =NewBinaryExpr (_aabc [1]._cbga ,BinOpTypeEQ ,_aabc [3]._cbga );};case 44:_aabc =_degad [_ffga -3:_ffga +1];{_gefd ._cbga =NewBinaryExpr (_aabc [1]._cbga ,BinOpTypeNE ,_aabc [3]._cbga );};case 45:_aabc =_degad [_ffga -3:_ffga +1];{_gefd ._cbga =NewBinaryExpr (_aabc [1]._cbga ,BinOpTypeConcat ,_aabc [3]._cbga );};case 47:_aabc =_degad [_ffga -2:_ffga +1];{_gefd ._cbga =NewFunction (_aabc [1]._befg ._fbbga ,nil );};case 48:_aabc =_degad [_ffga -3:_ffga +1];{_gefd ._cbga =NewFunction (_aabc [1]._befg ._fbbga ,_aabc [2]._ggcb );};case 49:_aabc =_degad [_ffga -1:_ffga +1];{_gefd ._ggcb =append (_gefd ._ggcb ,_aabc [1]._cbga );};case 50:_aabc =_degad [_ffga -3:_ffga +1];{_gefd ._ggcb =append (_aabc [1]._ggcb ,_aabc [3]._cbga );};case 53:_aabc =_degad [_ffga -0:_ffga +1];{_gefd ._cbga =NewEmptyExpr ();};};goto _dgedf ;};const _bcge =-1000;func (_gfgf *Lexer )lex (_afee _f .Reader ){_ccbfb ,_dbea ,_gabef :=0,0,0;_cabgc :=-1;_gcfed ,_cfee ,_abbg :=0,0,0;_ =_abbg ;_daagg :=1;_ =_daagg ;_bbdb :=make ([]byte ,4096);_abedb :=false ;for !_abedb {_beac :=0;if _gcfed > 0{_beac =_dbea -_gcfed ;};_dbea =0;_dbba ,_efdf :=_afee .Read (_bbdb [_beac :]);if _dbba ==0||_efdf !=nil {_abedb =true ;};_gabef =_dbba +_beac ;if _gabef < len (_bbdb ){_cabgc =_gabef ;};{_ccbfb =_efgf ;_gcfed =0;_cfee =0;_abbg =0;};{var _deef int ;var _ddbg uint ;if _dbea ==_gabef {goto _ecaac ;};if _ccbfb ==0{goto _bged ;};_bcee :_deef =int (_fafda [_ccbfb ]);_ddbg =uint (_cece [_deef ]);_deef ++;for ;_ddbg > 0;_ddbg --{_deef ++;switch _cece [_deef -1]{case 2:_gcfed =_dbea ;};};switch _ccbfb {case 30:switch _bbdb [_dbea ]{case 34:goto _ecbe ;case 35:goto _caba ;case 36:goto _bfcac ;case 38:goto _adgac ;case 39:goto _fccab ;case 40:goto _cfdd ;case 41:goto _efgag ;case 42:goto _acfaa ;case 43:goto _fcgge ;case 44:goto _cddc ;case 45:goto _ecaa ;case 47:goto _afeda ;case 58:goto _cfaed ;case 59:goto _bgdcb ;case 60:goto _gfcbb ;case 61:goto _aeadad ;case 62:goto _afbgd ;case 63:goto _gcad ;case 70:goto _gcgdg ;case 84:goto _dbbe ;case 92:goto _ecgf ;case 94:goto _daeg ;case 95:goto _aadba ;case 123:goto _eaba ;case 125:goto _cdfb ;};switch {case _bbdb [_dbea ]< 65:switch {case _bbdb [_dbea ]> 37:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _ggbe ;};case _bbdb [_dbea ]>=33:goto _gcad ;};case _bbdb [_dbea ]> 90:switch {case _bbdb [_dbea ]> 93:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _afbd ;};case _bbdb [_dbea ]>=91:goto _gcad ;};default:goto _dfge ;};goto _fbbbd ;case 1:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 47:goto _bdac ;case 123:goto _bdac ;case 125:goto _bdac ;};switch {case _bbdb [_dbea ]< 37:if 34<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=35{goto _bdac ;};case _bbdb [_dbea ]> 45:switch {case _bbdb [_dbea ]> 63:if 91<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=94{goto _bdac ;};case _bbdb [_dbea ]>=58:goto _bdac ;};default:goto _bdac ;};goto _fbbbd ;case 0:goto _bged ;case 2:if _bbdb [_dbea ]==34{goto _deefd ;};goto _ecbe ;case 31:if _bbdb [_dbea ]==34{goto _ecbe ;};goto _cegf ;case 3:switch _bbdb [_dbea ]{case 78:goto _cdefg ;case 82:goto _egff ;};goto _gcad ;case 4:switch _bbdb [_dbea ]{case 47:goto _aegc ;case 85:goto _gdcf ;};goto _gcad ;case 5:if _bbdb [_dbea ]==65{goto _ecbf ;};goto _gcad ;case 6:switch _bbdb [_dbea ]{case 76:goto _fdedb ;case 77:goto _bcaa ;};goto _gcad ;case 7:if _bbdb [_dbea ]==76{goto _bcaa ;};goto _gcad ;case 8:if _bbdb [_dbea ]==33{goto _ecbf ;};goto _gcad ;case 9:if _bbdb [_dbea ]==69{goto _bdae ;};goto _gcad ;case 10:if _bbdb [_dbea ]==70{goto _bgbac ;};goto _gcad ;case 11:if _bbdb [_dbea ]==33{goto _geaa ;};goto _gcad ;case 12:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 47:goto _gcad ;case 123:goto _gcad ;case 125:goto _gcad ;};switch {case _bbdb [_dbea ]< 48:switch {case _bbdb [_dbea ]> 35:if 37<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=45{goto _gcad ;};case _bbdb [_dbea ]>=34:goto _gcad ;};case _bbdb [_dbea ]> 57:switch {case _bbdb [_dbea ]< 65:if 58<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=63{goto _gcad ;};case _bbdb [_dbea ]> 90:if 91<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=94{goto _gcad ;};default:goto _cfeg ;};default:goto _dedab ;};goto _fbbbd ;case 13:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 47:goto _gcad ;case 58:goto _fbdfg ;case 123:goto _gcad ;case 125:goto _gcad ;};switch {case _bbdb [_dbea ]< 48:switch {case _bbdb [_dbea ]> 35:if 37<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=45{goto _gcad ;};case _bbdb [_dbea ]>=34:goto _gcad ;};case _bbdb [_dbea ]> 57:switch {case _bbdb [_dbea ]> 63:if 91<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=94{goto _gcad ;};case _bbdb [_dbea ]>=59:goto _gcad ;};default:goto _dedab ;};goto _fbbbd ;case 14:if _bbdb [_dbea ]==36{goto _gdcg ;};if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _agad ;};goto _bdac ;case 15:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _agad ;};goto _bdac ;case 32:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _agad ;};goto _dfdba ;case 16:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 36:goto _bcgc ;case 47:goto _gcad ;case 58:goto _fccaa ;case 123:goto _gcad ;case 125:goto _gcad ;};switch {case _bbdb [_dbea ]< 59:switch {case _bbdb [_dbea ]> 45:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _gabedg ;};case _bbdb [_dbea ]>=34:goto _gcad ;};case _bbdb [_dbea ]> 63:switch {case _bbdb [_dbea ]> 90:if 91<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=94{goto _gcad ;};case _bbdb [_dbea ]>=65:goto _cfeg ;};default:goto _gcad ;};goto _fbbbd ;case 17:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 47:goto _bdac ;case 123:goto _bdac ;case 125:goto _bdac ;};switch {case _bbdb [_dbea ]< 48:switch {case _bbdb [_dbea ]> 35:if 37<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=45{goto _bdac ;};case _bbdb [_dbea ]>=34:goto _bdac ;};case _bbdb [_dbea ]> 57:switch {case _bbdb [_dbea ]> 63:if 91<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=94{goto _bdac ;};case _bbdb [_dbea ]>=58:goto _bdac ;};default:goto _gabedg ;};goto _fbbbd ;case 33:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 47:goto _adff ;case 123:goto _adff ;case 125:goto _adff ;};switch {case _bbdb [_dbea ]< 48:switch {case _bbdb [_dbea ]> 35:if 37<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=45{goto _adff ;};case _bbdb [_dbea ]>=34:goto _adff ;};case _bbdb [_dbea ]> 57:switch {case _bbdb [_dbea ]> 63:if 91<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=94{goto _adff ;};case _bbdb [_dbea ]>=58:goto _adff ;};default:goto _gabedg ;};goto _fbbbd ;case 18:if _bbdb [_dbea ]==36{goto _eeea ;};if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _cgbcg ;};goto _bdac ;case 19:if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _cgbcg ;};goto _bdac ;case 34:if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _cgbcg ;};goto _cfdc ;case 20:switch _bbdb [_dbea ]{case 39:goto _gcad ;case 42:goto _gcad ;case 47:goto _gcad ;case 58:goto _gcad ;case 63:goto _gcad ;};if 91<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=93{goto _gcad ;};goto _gdda ;case 21:switch _bbdb [_dbea ]{case 39:goto _ffab ;case 42:goto _gcad ;case 47:goto _gcad ;case 58:goto _gcad ;case 63:goto _gcad ;};if 91<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=93{goto _gcad ;};goto _gdda ;case 22:if _bbdb [_dbea ]==33{goto _ccgbd ;};goto _gcad ;case 35:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 46:goto _gcdef ;case 58:goto _fbdfg ;case 101:goto _ecagc ;case 123:goto _dgdee ;case 125:goto _dgdee ;};switch {case _bbdb [_dbea ]< 48:switch {case _bbdb [_dbea ]> 35:if 37<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=47{goto _dgdee ;};case _bbdb [_dbea ]>=34:goto _dgdee ;};case _bbdb [_dbea ]> 57:switch {case _bbdb [_dbea ]> 63:if 91<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=94{goto _dgdee ;};case _bbdb [_dbea ]>=59:goto _dgdee ;};default:goto _ggbe ;};goto _fbbbd ;case 36:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 47:goto _dgdee ;case 101:goto _ecagc ;case 123:goto _dgdee ;case 125:goto _dgdee ;};switch {case _bbdb [_dbea ]< 48:switch {case _bbdb [_dbea ]> 35:if 37<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=45{goto _dgdee ;};case _bbdb [_dbea ]>=34:goto _dgdee ;};case _bbdb [_dbea ]> 57:switch {case _bbdb [_dbea ]> 63:if 91<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=94{goto _dgdee ;};case _bbdb [_dbea ]>=58:goto _dgdee ;};default:goto _gcdef ;};goto _fbbbd ;case 23:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 47:goto _egaa ;case 123:goto _egaa ;case 125:goto _egaa ;};switch {case _bbdb [_dbea ]< 48:switch {case _bbdb [_dbea ]> 35:if 37<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=45{goto _egaa ;};case _bbdb [_dbea ]>=34:goto _egaa ;};case _bbdb [_dbea ]> 57:switch {case _bbdb [_dbea ]> 63:if 91<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=94{goto _egaa ;};case _bbdb [_dbea ]>=58:goto _egaa ;};default:goto _gdad ;};goto _fbbbd ;case 37:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 47:goto _dgdee ;case 123:goto _dgdee ;case 125:goto _dgdee ;};switch {case _bbdb [_dbea ]< 48:switch {case _bbdb [_dbea ]> 35:if 37<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=45{goto _dgdee ;};case _bbdb [_dbea ]>=34:goto _dgdee ;};case _bbdb [_dbea ]> 57:switch {case _bbdb [_dbea ]> 63:if 91<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=94{goto _dgdee ;};case _bbdb [_dbea ]>=58:goto _dgdee ;};default:goto _gdad ;};goto _fbbbd ;case 38:switch _bbdb [_dbea ]{case 61:goto _aafeg ;case 62:goto _dfeeg ;};goto _bacae ;case 39:if _bbdb [_dbea ]==61{goto _efdge ;};goto _cgbcc ;case 24:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 36:goto _bcgc ;case 40:goto _dceae ;case 46:goto _afac ;case 58:goto _fccaa ;case 92:goto _bfec ;case 95:goto _egdda ;case 123:goto _gcad ;case 125:goto _gcad ;};switch {case _bbdb [_dbea ]< 59:switch {case _bbdb [_dbea ]> 47:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _bbgge ;};case _bbdb [_dbea ]>=34:goto _gcad ;};case _bbdb [_dbea ]> 63:switch {case _bbdb [_dbea ]< 91:if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _ebff ;};case _bbdb [_dbea ]> 94:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _egdda ;};default:goto _gcad ;};default:goto _gcad ;};goto _fbbbd ;case 40:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 40:goto _dceae ;case 46:goto _afac ;case 92:goto _bfec ;case 95:goto _egdda ;case 123:goto _bbgff ;case 125:goto _bbgff ;};switch {case _bbdb [_dbea ]< 58:switch {case _bbdb [_dbea ]< 37:if 34<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=35{goto _bbgff ;};case _bbdb [_dbea ]> 47:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _afac ;};default:goto _bbgff ;};case _bbdb [_dbea ]> 63:switch {case _bbdb [_dbea ]< 91:if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _afac ;};case _bbdb [_dbea ]> 94:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _egdda ;};default:goto _bbgff ;};default:goto _bbgff ;};goto _fbbbd ;case 41:switch _bbdb [_dbea ]{case 46:goto _bfec ;case 92:goto _bfec ;case 95:goto _bfec ;};switch {case _bbdb [_dbea ]< 65:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _bfec ;};case _bbdb [_dbea ]> 90:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _bfec ;};default:goto _bfec ;};goto _bbgff ;case 42:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 46:goto _egdda ;case 92:goto _bfec ;case 95:goto _egdda ;case 123:goto _bbgff ;case 125:goto _bbgff ;};switch {case _bbdb [_dbea ]< 58:switch {case _bbdb [_dbea ]< 37:if 34<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=35{goto _bbgff ;};case _bbdb [_dbea ]> 47:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _egdda ;};default:goto _bbgff ;};case _bbdb [_dbea ]> 63:switch {case _bbdb [_dbea ]< 91:if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _egdda ;};case _bbdb [_dbea ]> 94:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _egdda ;};default:goto _bbgff ;};default:goto _bbgff ;};goto _fbbbd ;case 43:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 40:goto _dceae ;case 46:goto _afac ;case 92:goto _bfec ;case 95:goto _egdda ;case 123:goto _adff ;case 125:goto _adff ;};switch {case _bbdb [_dbea ]< 58:switch {case _bbdb [_dbea ]< 37:if 34<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=35{goto _adff ;};case _bbdb [_dbea ]> 47:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _bbgge ;};default:goto _adff ;};case _bbdb [_dbea ]> 63:switch {case _bbdb [_dbea ]< 91:if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _afac ;};case _bbdb [_dbea ]> 94:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _egdda ;};default:goto _adff ;};default:goto _adff ;};goto _fbbbd ;case 44:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 36:goto _bcgc ;case 40:goto _dceae ;case 46:goto _afac ;case 58:goto _fccaa ;case 92:goto _bfec ;case 95:goto _egdda ;case 123:goto _bdac ;case 125:goto _bdac ;};switch {case _bbdb [_dbea ]< 59:switch {case _bbdb [_dbea ]> 47:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _bbgge ;};case _bbdb [_dbea ]>=34:goto _bdac ;};case _bbdb [_dbea ]> 63:switch {case _bbdb [_dbea ]< 91:if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _ebff ;};case _bbdb [_dbea ]> 94:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _egdda ;};default:goto _bdac ;};default:goto _bdac ;};goto _fbbbd ;case 25:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 36:goto _bcgc ;case 40:goto _dceae ;case 46:goto _afac ;case 58:goto _fccaa ;case 65:goto _edeg ;case 92:goto _bfec ;case 95:goto _egdda ;case 123:goto _gcad ;case 125:goto _gcad ;};switch {case _bbdb [_dbea ]< 59:switch {case _bbdb [_dbea ]> 47:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _bbgge ;};case _bbdb [_dbea ]>=34:goto _gcad ;};case _bbdb [_dbea ]> 63:switch {case _bbdb [_dbea ]< 91:if 66<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _ebff ;};case _bbdb [_dbea ]> 94:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _egdda ;};default:goto _gcad ;};default:goto _gcad ;};goto _fbbbd ;case 45:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 36:goto _bcgc ;case 40:goto _dceae ;case 46:goto _afac ;case 58:goto _fccaa ;case 76:goto _dcfc ;case 92:goto _bfec ;case 95:goto _egdda ;case 123:goto _bbgff ;case 125:goto _bbgff ;};switch {case _bbdb [_dbea ]< 59:switch {case _bbdb [_dbea ]> 47:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _bbgge ;};case _bbdb [_dbea ]>=34:goto _bbgff ;};case _bbdb [_dbea ]> 63:switch {case _bbdb [_dbea ]< 91:if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _ebff ;};case _bbdb [_dbea ]> 94:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _egdda ;};default:goto _bbgff ;};default:goto _bbgff ;};goto _fbbbd ;case 46:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 36:goto _bcgc ;case 40:goto _dceae ;case 46:goto _afac ;case 58:goto _fccaa ;case 83:goto _abdd ;case 92:goto _bfec ;case 95:goto _egdda ;case 123:goto _bbgff ;case 125:goto _bbgff ;};switch {case _bbdb [_dbea ]< 59:switch {case _bbdb [_dbea ]> 47:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _bbgge ;};case _bbdb [_dbea ]>=34:goto _bbgff ;};case _bbdb [_dbea ]> 63:switch {case _bbdb [_dbea ]< 91:if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _ebff ;};case _bbdb [_dbea ]> 94:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _egdda ;};default:goto _bbgff ;};default:goto _bbgff ;};goto _fbbbd ;case 47:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 36:goto _bcgc ;case 40:goto _dceae ;case 46:goto _afac ;case 58:goto _fccaa ;case 69:goto _dgfdb ;case 92:goto _bfec ;case 95:goto _egdda ;case 123:goto _bbgff ;case 125:goto _bbgff ;};switch {case _bbdb [_dbea ]< 59:switch {case _bbdb [_dbea ]> 47:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _bbgge ;};case _bbdb [_dbea ]>=34:goto _bbgff ;};case _bbdb [_dbea ]> 63:switch {case _bbdb [_dbea ]< 91:if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _ebff ;};case _bbdb [_dbea ]> 94:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _egdda ;};default:goto _bbgff ;};default:goto _bbgff ;};goto _fbbbd ;case 26:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 36:goto _bcgc ;case 40:goto _dceae ;case 46:goto _afac ;case 58:goto _fccaa ;case 79:goto _gffc ;case 82:goto _dfdgf ;case 92:goto _bfec ;case 95:goto _egdda ;case 123:goto _gcad ;case 125:goto _gcad ;};switch {case _bbdb [_dbea ]< 59:switch {case _bbdb [_dbea ]> 47:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _bbgge ;};case _bbdb [_dbea ]>=34:goto _gcad ;};case _bbdb [_dbea ]> 63:switch {case _bbdb [_dbea ]< 91:if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _ebff ;};case _bbdb [_dbea ]> 94:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _egdda ;};default:goto _gcad ;};default:goto _gcad ;};goto _fbbbd ;case 48:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 36:goto _bcgc ;case 40:goto _dceae ;case 46:goto _afac ;case 58:goto _fccaa ;case 68:goto _gcef ;case 92:goto _bfec ;case 95:goto _egdda ;case 123:goto _bbgff ;case 125:goto _bbgff ;};switch {case _bbdb [_dbea ]< 59:switch {case _bbdb [_dbea ]> 47:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _bbgge ;};case _bbdb [_dbea ]>=34:goto _bbgff ;};case _bbdb [_dbea ]> 63:switch {case _bbdb [_dbea ]< 91:if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _ebff ;};case _bbdb [_dbea ]> 94:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _egdda ;};default:goto _bbgff ;};default:goto _bbgff ;};goto _fbbbd ;case 49:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 36:goto _bcgc ;case 40:goto _dceae ;case 46:goto _afac ;case 58:goto _fccaa ;case 79:goto _ebcc ;case 92:goto _bfec ;case 95:goto _egdda ;case 123:goto _bbgff ;case 125:goto _bbgff ;};switch {case _bbdb [_dbea ]< 59:switch {case _bbdb [_dbea ]> 47:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _bbgge ;};case _bbdb [_dbea ]>=34:goto _bbgff ;};case _bbdb [_dbea ]> 63:switch {case _bbdb [_dbea ]< 91:if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _ebff ;};case _bbdb [_dbea ]> 94:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _egdda ;};default:goto _bbgff ;};default:goto _bbgff ;};goto _fbbbd ;case 50:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 36:goto _bcgc ;case 40:goto _dceae ;case 46:goto _afac ;case 58:goto _fccaa ;case 85:goto _abdd ;case 92:goto _bfec ;case 95:goto _egdda ;case 123:goto _bbgff ;case 125:goto _bbgff ;};switch {case _bbdb [_dbea ]< 59:switch {case _bbdb [_dbea ]> 47:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _bbgge ;};case _bbdb [_dbea ]>=34:goto _bbgff ;};case _bbdb [_dbea ]> 63:switch {case _bbdb [_dbea ]< 91:if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _ebff ;};case _bbdb [_dbea ]> 94:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _egdda ;};default:goto _bbgff ;};default:goto _bbgff ;};goto _fbbbd ;case 27:switch _bbdb [_dbea ]{case 46:goto _bfec ;case 92:goto _bfec ;case 95:goto _bfec ;};switch {case _bbdb [_dbea ]< 65:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _bfec ;};case _bbdb [_dbea ]> 90:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _bfec ;};default:goto _bfec ;};goto _gcad ;case 28:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 46:goto _egdda ;case 92:goto _bfec ;case 95:goto _egdda ;case 120:goto _bcdcf ;case 123:goto _gcad ;case 125:goto _gcad ;};switch {case _bbdb [_dbea ]< 58:switch {case _bbdb [_dbea ]< 37:if 34<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=35{goto _gcad ;};case _bbdb [_dbea ]> 47:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _egdda ;};default:goto _gcad ;};case _bbdb [_dbea ]> 63:switch {case _bbdb [_dbea ]< 91:if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _egdda ;};case _bbdb [_dbea ]> 94:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _egdda ;};default:goto _gcad ;};default:goto _gcad ;};goto _fbbbd ;case 51:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 46:goto _egdda ;case 92:goto _bfec ;case 95:goto _egdda ;case 108:goto _ddfab ;case 123:goto _bbgff ;case 125:goto _bbgff ;};switch {case _bbdb [_dbea ]< 58:switch {case _bbdb [_dbea ]< 37:if 34<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=35{goto _bbgff ;};case _bbdb [_dbea ]> 47:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _egdda ;};default:goto _bbgff ;};case _bbdb [_dbea ]> 63:switch {case _bbdb [_dbea ]< 91:if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _egdda ;};case _bbdb [_dbea ]> 94:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _egdda ;};default:goto _bbgff ;};default:goto _bbgff ;};goto _fbbbd ;case 52:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 46:goto _egdda ;case 92:goto _bfec ;case 95:goto _egdda ;case 102:goto _afbc ;case 110:goto _gcgfc ;case 123:goto _bbgff ;case 125:goto _bbgff ;};switch {case _bbdb [_dbea ]< 58:switch {case _bbdb [_dbea ]< 37:if 34<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=35{goto _bbgff ;};case _bbdb [_dbea ]> 47:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _egdda ;};default:goto _bbgff ;};case _bbdb [_dbea ]> 63:switch {case _bbdb [_dbea ]< 91:if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _egdda ;};case _bbdb [_dbea ]> 94:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _egdda ;};default:goto _bbgff ;};default:goto _bbgff ;};goto _fbbbd ;case 53:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 46:goto _egdda ;case 92:goto _bfec ;case 95:goto _egdda ;case 110:goto _cafdf ;case 123:goto _bbgff ;case 125:goto _bbgff ;};switch {case _bbdb [_dbea ]< 58:switch {case _bbdb [_dbea ]< 37:if 34<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=35{goto _bbgff ;};case _bbdb [_dbea ]> 47:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _egdda ;};default:goto _bbgff ;};case _bbdb [_dbea ]> 63:switch {case _bbdb [_dbea ]< 91:if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _egdda ;};case _bbdb [_dbea ]> 94:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _egdda ;};default:goto _bbgff ;};default:goto _bbgff ;};goto _fbbbd ;case 54:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 46:goto _ffddc ;case 92:goto _bfec ;case 95:goto _egdda ;case 123:goto _bbgff ;case 125:goto _bbgff ;};switch {case _bbdb [_dbea ]< 58:switch {case _bbdb [_dbea ]< 37:if 34<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=35{goto _bbgff ;};case _bbdb [_dbea ]> 47:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _egdda ;};default:goto _bbgff ;};case _bbdb [_dbea ]> 63:switch {case _bbdb [_dbea ]< 91:if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _egdda ;};case _bbdb [_dbea ]> 94:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _egdda ;};default:goto _bbgff ;};default:goto _bbgff ;};goto _fbbbd ;case 55:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 46:goto _egdda ;case 92:goto _bfec ;case 95:goto _bcccb ;case 123:goto _bbgff ;case 125:goto _bbgff ;};switch {case _bbdb [_dbea ]< 58:switch {case _bbdb [_dbea ]< 37:if 34<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=35{goto _bbgff ;};case _bbdb [_dbea ]> 47:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _egdda ;};default:goto _bbgff ;};case _bbdb [_dbea ]> 63:switch {case _bbdb [_dbea ]< 91:if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _bcccb ;};case _bbdb [_dbea ]> 94:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _egdda ;};default:goto _bbgff ;};default:goto _bbgff ;};goto _fbbbd ;case 56:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 40:goto _ggged ;case 46:goto _bcccb ;case 92:goto _bfec ;case 95:goto _egdda ;case 123:goto _bbgff ;case 125:goto _bbgff ;};switch {case _bbdb [_dbea ]< 58:switch {case _bbdb [_dbea ]< 37:if 34<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=35{goto _bbgff ;};case _bbdb [_dbea ]> 47:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _bcccb ;};default:goto _bbgff ;};case _bbdb [_dbea ]> 63:switch {case _bbdb [_dbea ]< 91:if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _bcccb ;};case _bbdb [_dbea ]> 94:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _egdda ;};default:goto _bbgff ;};default:goto _bbgff ;};goto _fbbbd ;case 57:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 46:goto _egdda ;case 92:goto _bfec ;case 95:goto _egdda ;case 109:goto _fffa ;case 123:goto _bbgff ;case 125:goto _bbgff ;};switch {case _bbdb [_dbea ]< 58:switch {case _bbdb [_dbea ]< 37:if 34<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=35{goto _bbgff ;};case _bbdb [_dbea ]> 47:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _egdda ;};default:goto _bbgff ;};case _bbdb [_dbea ]> 63:switch {case _bbdb [_dbea ]< 91:if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _egdda ;};case _bbdb [_dbea ]> 94:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _egdda ;};default:goto _bbgff ;};default:goto _bbgff ;};goto _fbbbd ;case 58:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 46:goto _fbfa ;case 92:goto _bfec ;case 95:goto _egdda ;case 123:goto _bbgff ;case 125:goto _bbgff ;};switch {case _bbdb [_dbea ]< 58:switch {case _bbdb [_dbea ]< 37:if 34<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=35{goto _bbgff ;};case _bbdb [_dbea ]> 47:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _egdda ;};default:goto _bbgff ;};case _bbdb [_dbea ]> 63:switch {case _bbdb [_dbea ]< 91:if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _egdda ;};case _bbdb [_dbea ]> 94:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _egdda ;};default:goto _bbgff ;};default:goto _bbgff ;};goto _fbbbd ;case 59:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 46:goto _egdda ;case 92:goto _bfec ;case 95:goto _cedbgb ;case 123:goto _bdac ;case 125:goto _bdac ;};switch {case _bbdb [_dbea ]< 58:switch {case _bbdb [_dbea ]< 37:if 34<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=35{goto _bdac ;};case _bbdb [_dbea ]> 47:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _egdda ;};default:goto _bdac ;};case _bbdb [_dbea ]> 63:switch {case _bbdb [_dbea ]< 91:if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _cedbgb ;};case _bbdb [_dbea ]> 94:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _egdda ;};default:goto _bdac ;};default:goto _bdac ;};goto _fbbbd ;case 29:switch _bbdb [_dbea ]{case 33:goto _efagc ;case 46:goto _egdda ;case 92:goto _bfec ;case 95:goto _egdda ;case 123:goto _gcad ;case 125:goto _gcad ;};switch {case _bbdb [_dbea ]< 58:switch {case _bbdb [_dbea ]< 37:if 34<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=35{goto _gcad ;};case _bbdb [_dbea ]> 47:if 48<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=57{goto _egdda ;};default:goto _gcad ;};case _bbdb [_dbea ]> 63:switch {case _bbdb [_dbea ]< 91:if 65<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=90{goto _egdda ;};case _bbdb [_dbea ]> 94:if 97<=_bbdb [_dbea ]&&_bbdb [_dbea ]<=122{goto _egdda ;};default:goto _gcad ;};default:goto _gcad ;};goto _fbbbd ;};_gcad :_ccbfb =0;goto _cbgc ;_fbbbd :_ccbfb =1;goto _cbgc ;_ecbe :_ccbfb =2;goto _cbgc ;_caba :_ccbfb =3;goto _cbgc ;_cdefg :_ccbfb =4;goto _cbgc ;_aegc :_ccbfb =5;goto _cbgc ;_gdcf :_ccbfb =6;goto _cbgc ;_fdedb :_ccbfb =7;goto _cbgc ;_bcaa :_ccbfb =8;goto _cbgc ;_egff :_ccbfb =9;goto _cbgc ;_bdae :_ccbfb =10;goto _cbgc ;_bgbac :_ccbfb =11;goto _cbgc ;_bfcac :_ccbfb =12;goto _cbgc ;_dedab :_ccbfb =13;goto _cbgc ;_fbdfg :_ccbfb =14;goto _cbgc ;_gdcg :_ccbfb =15;goto _cbgc ;_cfeg :_ccbfb =16;goto _cbgc ;_bcgc :_ccbfb =17;goto _cbgc ;_fccaa :_ccbfb =18;goto _cbgc ;_eeea :_ccbfb =19;goto _cbgc ;_fccab :_ccbfb =20;goto _cbgc ;_gdda :_ccbfb =21;goto _cbgc ;_ffab :_ccbfb =22;goto _cbgc ;_ecagc :_ccbfb =23;goto _cbgc ;_dfge :_ccbfb =24;goto _cbgc ;_gcgdg :_ccbfb =25;goto _cbgc ;_dbbe :_ccbfb =26;goto _cbgc ;_ecgf :_ccbfb =27;goto _cbgc ;_aadba :_ccbfb =28;goto _cbgc ;_afbd :_ccbfb =29;goto _cbgc ;_bdac :_ccbfb =30;goto _cgbe ;_efagc :_ccbfb =30;goto _fcbfc ;_ecbf :_ccbfb =30;goto _caddc ;_geaa :_ccbfb =30;goto _adbd ;_ccgbd :_ccbfb =30;goto _bbba ;_egaa :_ccbfb =30;goto _cfcfd ;_dceae :_ccbfb =30;goto _caddd ;_adgac :_ccbfb =30;goto _gabae ;_cfdd :_ccbfb =30;goto _gfee ;_efgag :_ccbfb =30;goto _eedbg ;_acfaa :_ccbfb =30;goto _gdaba ;_fcgge :_ccbfb =30;goto _cafdad ;_cddc :_ccbfb =30;goto _gdcfe ;_ecaa :_ccbfb =30;goto _befdc ;_afeda :_ccbfb =30;goto _gbddf ;_cfaed :_ccbfb =30;goto _gbfcf ;_bgdcb :_ccbfb =30;goto _bfde ;_aeadad :_ccbfb =30;goto _gcacbf ;_daeg :_ccbfb =30;goto _ebabg ;_eaba :_ccbfb =30;goto _cgegd ;_cdfb :_ccbfb =30;goto _fcdbeg ;_cegf :_ccbfb =30;goto _gggfe ;_dfdba :_ccbfb =30;goto _eaff ;_adff :_ccbfb =30;goto _dcbee ;_cfdc :_ccbfb =30;goto _bbedb ;_dgdee :_ccbfb =30;goto _dfef ;_bacae :_ccbfb =30;goto _efdda ;_aafeg :_ccbfb =30;goto _dbdae ;_dfeeg :_ccbfb =30;goto _gcbd ;_cgbcc :_ccbfb =30;goto _fgebb ;_efdge :_ccbfb =30;goto _ageae ;_bbgff :_ccbfb =30;goto _aecce ;_ggged :_ccbfb =30;goto _ffafg ;_deefd :_ccbfb =31;goto _cdda ;_agad :_ccbfb =32;goto _cbgc ;_gabedg :_ccbfb =33;goto _cfbff ;_cgbcg :_ccbfb =34;goto _cbgc ;_ggbe :_ccbfb =35;goto _agaa ;_gcdef :_ccbfb =36;goto _agaa ;_gdad :_ccbfb =37;goto _agaa ;_gfcbb :_ccbfb =38;goto _cbgc ;_afbgd :_ccbfb =39;goto _cbgc ;_afac :_ccbfb =40;goto _ceaf ;_bfec :_ccbfb =41;goto _cbgc ;_egdda :_ccbfb =42;goto _ceaf ;_bbgge :_ccbfb =43;goto _cfbff ;_ebff :_ccbfb =44;goto _ceaf ;_dgfdb :_ccbfb =44;goto _cefcd ;_ebcc :_ccbfb =44;goto _cddf ;_edeg :_ccbfb =45;goto _ceaf ;_dcfc :_ccbfb =46;goto _ceaf ;_abdd :_ccbfb =47;goto _ceaf ;_gffc :_ccbfb =48;goto _ceaf ;_gcef :_ccbfb =49;goto _ceaf ;_dfdgf :_ccbfb =50;goto _ceaf ;_bcdcf :_ccbfb =51;goto _ceaf ;_ddfab :_ccbfb =52;goto _ceaf ;_afbc :_ccbfb =53;goto _ceaf ;_cafdf :_ccbfb =54;goto _ceaf ;_ffddc :_ccbfb =55;goto _ceaf ;_bcccb :_ccbfb =56;goto _ceaf ;_gcgfc :_ccbfb =57;goto _ceaf ;_fffa :_ccbfb =58;goto _ceaf ;_fbfa :_ccbfb =59;goto _ceaf ;_cedbgb :_ccbfb =59;goto _aafbc ;_caddc :_deef =3;goto _ecagf ;_adbd :_deef =5;goto _ecagf ;_fcbfc :_deef =7;goto _ecagf ;_bbba :_deef =9;goto _ecagf ;_caddd :_deef =11;goto _ecagf ;_ffafg :_deef =13;goto _ecagf ;_gabae :_deef =15;goto _ecagf ;_cgegd :_deef =17;goto _ecagf ;_fcdbeg :_deef =19;goto _ecagf ;_gfee :_deef =21;goto _ecagf ;_eedbg :_deef =23;goto _ecagf ;_cafdad :_deef =25;goto _ecagf ;_befdc :_deef =27;goto _ecagf ;_gdaba :_deef =29;goto _ecagf ;_gbddf :_deef =31;goto _ecagf ;_ebabg :_deef =33;goto _ecagf ;_gcacbf :_deef =35;goto _ecagf ;_dbdae :_deef =37;goto _ecagf ;_ageae :_deef =39;goto _ecagf ;_gcbd :_deef =41;goto _ecagf ;_gbfcf :_deef =43;goto _ecagf ;_bfde :_deef =45;goto _ecagf ;_gdcfe :_deef =47;goto _ecagf ;_dfef :_deef =49;goto _ecagf ;_dcbee :_deef =51;goto _ecagf ;_eaff :_deef =53;goto _ecagf ;_bbedb :_deef =55;goto _ecagf ;_aecce :_deef =57;goto _ecagf ;_gggfe :_deef =59;goto _ecagf ;_efdda :_deef =61;goto _ecagf ;_fgebb :_deef =63;goto _ecagf ;_cfcfd :_deef =65;goto _ecagf ;_cgbe :_deef =67;goto _ecagf ;_cefcd :_deef =72;goto _ecagf ;_agaa :_deef =75;goto _ecagf ;_cfbff :_deef =78;goto _ecagf ;_cddf :_deef =81;goto _ecagf ;_aafbc :_deef =84;goto _ecagf ;_ceaf :_deef =87;goto _ecagf ;_cdda :_deef =90;goto _ecagf ;_ecagf :_ddbg =uint (_cece [_deef ]);_deef ++;for ;_ddbg > 0;_ddbg --{_deef ++;switch _cece [_deef -1]{case 3:_cfee =_dbea +1;case 4:_abbg =1;case 5:_abbg =2;case 6:_abbg =3;case 7:_abbg =4;case 8:_abbg =11;case 9:_abbg =14;case 10:_abbg =15;case 11:_cfee =_dbea +1;{_gfgf .emit (_fadc ,_bbdb [_gcfed :_cfee ]);};case 12:_cfee =_dbea +1;{_gfgf .emit (_gfggff ,_bbdb [_gcfed :_cfee ]);};case 13:_cfee =_dbea +1;{_gfgf .emit (_cbcd ,_bbdb [_gcfed :_cfee -1]);};case 14:_cfee =_dbea +1;{_gfgf .emit (_cbcd ,_bbdb [_gcfed +1:_cfee -2]);};case 15:_cfee =_dbea +1;{_gfgf .emit (_adaac ,_bbdb [_gcfed :_cfee -1]);};case 16:_cfee =_dbea +1;{_gfgf .emit (_adaac ,_bbdb [_gcfed :_cfee -1]);};case 17:_cfee =_dbea +1;{_gfgf .emit (_fade ,_bbdb [_gcfed :_cfee ]);};case 18:_cfee =_dbea +1;{_gfgf .emit (_dafe ,_bbdb [_gcfed :_cfee ]);};case 19:_cfee =_dbea +1;{_gfgf .emit (_egdd ,_bbdb [_gcfed :_cfee ]);};case 20:_cfee =_dbea +1;{_gfgf .emit (_cgcfb ,_bbdb [_gcfed :_cfee ]);};case 21:_cfee =_dbea +1;{_gfgf .emit (_bbgf ,_bbdb [_gcfed :_cfee ]);};case 22:_cfee =_dbea +1;{_gfgf .emit (_fcgb ,_bbdb [_gcfed :_cfee ]);};case 23:_cfee =_dbea +1;{_gfgf .emit (_fafc ,_bbdb [_gcfed :_cfee ]);};case 24:_cfee =_dbea +1;{_gfgf .emit (_ggffcd ,_bbdb [_gcfed :_cfee ]);};case 25:_cfee =_dbea +1;{_gfgf .emit (_bdfceb ,_bbdb [_gcfed :_cfee ]);};case 26:_cfee =_dbea +1;{_gfgf .emit (_dfgg ,_bbdb [_gcfed :_cfee ]);};case 27:_cfee =_dbea +1;{_gfgf .emit (_gaedc ,_bbdb [_gcfed :_cfee ]);};case 28:_cfee =_dbea +1;{_gfgf .emit (_ecdge ,_bbdb [_gcfed :_cfee ]);};case 29:_cfee =_dbea +1;{_gfgf .emit (_ggfddf ,_bbdb [_gcfed :_cfee ]);};case 30:_cfee =_dbea +1;{_gfgf .emit (_eaccg ,_bbdb [_gcfed :_cfee ]);};case 31:_cfee =_dbea +1;{_gfgf .emit (_cbccg ,_bbdb [_gcfed :_cfee ]);};case 32:_cfee =_dbea +1;{_gfgf .emit (_fcdf ,_bbdb [_gcfed :_cfee ]);};case 33:_cfee =_dbea +1;{_gfgf .emit (_bcbg ,_bbdb [_gcfed :_cfee ]);};case 34:_cfee =_dbea ;_dbea --;{_gfgf .emit (_fcae ,_bbdb [_gcfed :_cfee ]);};case 35:_cfee =_dbea ;_dbea --;{_gfgf .emit (_cbceg ,_bbdb [_gcfed :_cfee ]);};case 36:_cfee =_dbea ;_dbea --;{_gfgf .emit (_gaddd ,_bbdb [_gcfed :_cfee ]);};case 37:_cfee =_dbea ;_dbea --;{_gfgf .emit (_gaaf ,_bbdb [_gcfed :_cfee ]);};case 38:_cfee =_dbea ;_dbea --;{_gfgf .emit (_aafef ,_bbdb [_gcfed :_cfee ]);};case 39:_cfee =_dbea ;_dbea --;{_gfgf .emit (_edee ,_bbdb [_gcfed +1:_cfee -1]);};case 40:_cfee =_dbea ;_dbea --;{_gfgf .emit (_ddgd ,_bbdb [_gcfed :_cfee ]);};case 41:_cfee =_dbea ;_dbea --;{_gfgf .emit (_bacf ,_bbdb [_gcfed :_cfee ]);};case 42:_dbea =(_cfee )-1;{_gfgf .emit (_fcae ,_bbdb [_gcfed :_cfee ]);};case 43:switch _abbg {case 0:{_ccbfb =0;goto _cbgc ;};case 1:{_dbea =(_cfee )-1;_gfgf .emit (_baec ,_bbdb [_gcfed :_cfee ]);};case 2:{_dbea =(_cfee )-1;_gfgf .emit (_fcae ,_bbdb [_gcfed :_cfee ]);};case 3:{_dbea =(_cfee )-1;_gfgf .emit (_cbceg ,_bbdb [_gcfed :_cfee ]);};case 4:{_dbea =(_cfee )-1;_gfgf .emit (_abdfeg ,_bbdb [_gcfed :_cfee ]);};case 11:{_dbea =(_cfee )-1;_gfgf .emit (_cdegb ,_bbdb [_gcfed :_cfee ]);};case 14:{_dbea =(_cfee )-1;_gfgf .emit (_aafef ,_bbdb [_gcfed :_cfee ]);};case 15:{_dbea =(_cfee )-1;_gfgf .emit (_edee ,_bbdb [_gcfed +1:_cfee -1]);};};};};goto _cbgc ;_cbgc :_deef =int (_gaec [_ccbfb ]);_ddbg =uint (_cece [_deef ]);_deef ++;for ;_ddbg > 0;_ddbg --{_deef ++;switch _cece [_deef -1]{case 0:_gcfed =0;case 1:_abbg =0;};};if _ccbfb ==0{goto _bged ;};if _dbea ++;_dbea !=_gabef {goto _bcee ;};_ecaac :{};if _dbea ==_cabgc {switch _ccbfb {case 1:goto _bdac ;case 2:goto _bdac ;case 31:goto _cegf ;case 14:goto _bdac ;case 15:goto _bdac ;case 32:goto _dfdba ;case 17:goto _bdac ;case 33:goto _adff ;case 18:goto _bdac ;case 19:goto _bdac ;case 34:goto _cfdc ;case 35:goto _dgdee ;case 36:goto _dgdee ;case 23:goto _egaa ;case 37:goto _dgdee ;case 38:goto _bacae ;case 39:goto _cgbcc ;case 40:goto _bbgff ;case 41:goto _bbgff ;case 42:goto _bbgff ;case 43:goto _adff ;case 44:goto _bdac ;case 45:goto _bbgff ;case 46:goto _bbgff ;case 47:goto _bbgff ;case 48:goto _bbgff ;case 49:goto _bbgff ;case 50:goto _bbgff ;case 51:goto _bbgff ;case 52:goto _bbgff ;case 53:goto _bbgff ;case 54:goto _bbgff ;case 55:goto _bbgff ;case 56:goto _bbgff ;case 57:goto _bbgff ;case 58:goto _bbgff ;case 59:goto _bdac ;};};_bged :{};};if _gcfed > 0{copy (_bbdb [0:],_bbdb [_gcfed :]);};};_ =_cabgc ;if _ccbfb ==_fefb {_gfgf .emit (_bead ,nil );};close (_gfgf ._ddgcb );};func (_cege *plex )Lex (lval *yySymType )int {_bcade =true ;_bgeee :=<-_cege ._bbga ;if _bgeee !=nil {lval ._befg =_bgeee ;return int (lval ._befg ._egagd );};return 0;};

// Len is an implementation of the Excel LEN function that returns length of a string
func Len (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u004c\u0045N\u0020\u0072\u0065\u0071u\u0069\u0072e\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067l\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_gedaf :=args [0].AsString ();if _gedaf .Type !=ResultTypeString {return MakeErrorResult ("\u004c\u0045N\u0020\u0072\u0065\u0071u\u0069\u0072e\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067l\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};return MakeNumberResult (float64 (len (_gedaf .ValueString )));};func _bdeg (_deeca string )*criteriaRegex {_ggafa :=&criteriaRegex {};if _deeca ==""{return _ggafa ;};if _dfaed :=_cdefd .FindStringSubmatch (_deeca );len (_dfaed )> 1{_ggafa ._dgcc =_eagb ;_ggafa ._ecebb =_dfaed [1];}else if _bdafd :=_bgea .FindStringSubmatch (_deeca );len (_bdafd )> 1{_ggafa ._dgcc =_eagb ;_ggafa ._ecebb =_bdafd [1];}else if _bafcc :=_effec .FindStringSubmatch (_deeca );len (_bafcc )> 1{_ggafa ._dgcc =_gagg ;_ggafa ._ecebb =_bafcc [1];}else if _ebca :=_dcege .FindStringSubmatch (_deeca );len (_ebca )> 1{_ggafa ._dgcc =_ggaf ;_ggafa ._ecebb =_ebca [1];}else if _agcb :=_cbaa .FindStringSubmatch (_deeca );len (_agcb )> 1{_ggafa ._dgcc =_ddgf ;_ggafa ._ecebb =_agcb [1];}else if _cdfe :=_dcacd .FindStringSubmatch (_deeca );len (_cdfe )> 1{_ggafa ._dgcc =_eefcf ;_ggafa ._ecebb =_cdfe [1];};return _ggafa ;};

// Update updates references in the PrefixRangeExpr after removing a row/column.
func (_bbfc PrefixRangeExpr )Update (q *_aac .UpdateQuery )Expression {_bbcb :=_bbfc ;_abee :=_bbfc ._abgaf .String ();if _abee ==q .SheetToUpdate {_cfdfb :=*q ;_cfdfb .UpdateCurrentSheet =true ;_bbcb ._cdfed =_bbfc ._cdfed .Update (&_cfdfb );_bbcb ._ccbd =_bbfc ._ccbd .Update (&_cfdfb );};return _bbcb ;};var _fafda []byte =[]byte {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};func _gbbe (_edgbd []Result )(bool ,Result ){for _ ,_eddf :=range _edgbd {if _eddf .Type ==ResultTypeError {return true ,_eddf ;};};return false ,MakeEmptyResult ();};func _dfggg (_bdcag ,_gfcba Reference )string {return _c .Sprintf ("\u0025\u0073\u003a%\u0073",_bdcag .Value ,_gfcba .Value );};

// Tbillyield implements the Excel TBILLYIELD function.
func Tbillyield (args []Result )Result {if len (args )!=3{return MakeErrorResult ("T\u0042\u0049\u004c\u004c\u0059\u0049E\u004c\u0044\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0074\u0068r\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_gacd ,_agb ,_fdfc :=_aaf (args [0],args [1],"\u0054\u0042\u0049\u004c\u004c\u0059\u0049\u0045\u004c\u0044");if _fdfc .Type ==ResultTypeError {return _fdfc ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0054\u0042\u0049\u004c\u004c\u0059\u0049\u0045\u004c\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0064\u0069\u0073\u0063\u006f\u0075n\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cfbdf :=_agb -_gacd ;if _cfbdf > 365{return MakeErrorResultType (ErrorTypeNum ,"\u0054\u0042\u0049\u004c\u004cY\u0049\u0045\u004c\u0044\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020m\u0061\u0074\u0075r\u0069\u0074\u0079\u0020t\u006f\u0020\u0062\u0065\u0020\u006eo\u0074\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u006e\u0065\u0020\u0079e\u0061\u0072\u0020\u0061\u0066\u0074\u0065\u0072\u0020\u0073\u0065\u0074\u0074\u006c\u0065\u006d\u0065\u006e\u0074");};_fdae :=args [2].ValueNumber ;if _fdae <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0054\u0042\u0049\u004c\u004c\u0059\u0049\u0045\u004c\u0044\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020p\u0072 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ddbf :=(100-_fdae )/_fdae ;_gfbe :=360/_cfbdf ;return MakeNumberResult (_ddbf *_gfbe );};

// Reference returns an invalid reference for Negate.
func (_cbfbg Negate )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };func _cagf (_bcdaa float64 ,_efbaf *criteriaRegex )bool {_ceecg ,_fcedb :=_ad .ParseFloat (_efbaf ._ecebb ,64);if _fcedb !=nil {return false ;};switch _efbaf ._dgcc {case _eagb :return _bcdaa ==_ceecg ;case _gagg :return _bcdaa <=_ceecg ;case _ggaf :return _bcdaa >=_ceecg ;case _ddgf :return _bcdaa < _ceecg ;case _eefcf :return _bcdaa > _ceecg ;};return false ;};

// Sum is an implementation of the Excel SUM() function.
func Sum (args []Result )Result {_eabd :=MakeNumberResult (0);for _ ,_eefg :=range args {_eefg =_eefg .AsNumber ();switch _eefg .Type {case ResultTypeNumber :_eabd .ValueNumber +=_eefg .ValueNumber ;case ResultTypeList ,ResultTypeArray :_gbdce :=Sum (_eefg .ListValues ());if _gbdce .Type !=ResultTypeNumber {return _gbdce ;};_eabd .ValueNumber +=_gbdce .ValueNumber ;case ResultTypeString :case ResultTypeError :return _eefg ;case ResultTypeEmpty :default:return MakeErrorResult (_c .Sprintf ("\u0075\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0053\u0055\u004d\u0028\u0029 \u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_eefg .Type ));};};return _eabd ;};

// Floor is an implementation of the FlOOR function.
func Floor (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0046\u004c\u004f\u004f\u0052\u0028\u0029\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074w\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_abfe :=args [0].AsNumber ();if _abfe .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069\u0072s\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0046\u004c\u004f\u004f\u0052\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};var _fcffe float64 ;_fdgaf :=args [1].AsNumber ();if _fdgaf .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063\u006f\u006e\u0064\u0020a\u0072\u0067\u0075m\u0065\u006e\u0074\u0020t\u006f\u0020\u0046\u004c\u004f\u004f\u0052\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_fcffe =_fdgaf .ValueNumber ;if _fcffe < 0&&_abfe .ValueNumber >=0{return MakeErrorResultType (ErrorTypeNum ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074\u0073\u0020\u0074\u006f\u0020\u0046L\u004f\u004f\u0052");};_ecge :=_abfe .ValueNumber ;_ecge ,_dgfb :=_fb .Modf (_ecge /_fcffe );if _dgfb !=0{if _abfe .ValueNumber < 0&&_dgfb < 0{_ecge --;};};return MakeNumberResult (_ecge *_fcffe );};var _cbcb =[...]int {0,1,1,2,4,1,1,1,1,2,2,1,1,1,1,3,1,3,1,3,1,3,1,2,1,1,1,3,4,1,1,1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,1,2,3,1,3,1,1,0};

// Pmt implements the Excel PMT function.
func Pmt (args []Result )Result {_fcda :=len (args );if _fcda < 3||_fcda > 5{return MakeErrorResult ("\u0050\u004dT\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u006eu\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u006f\u0066\u0020\u0033\u0020\u0061\u006e\u0064\u0020\u0035");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020r\u0061\u0074\u0065\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_edca :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u004dT\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u006eu\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_beafb :=args [1].ValueNumber ;if _beafb ==0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u004d\u0054\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006f\u0066\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u00200");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073 p\u0072\u0065\u0073\u0065\u006e\u0074 \u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_bfddg :=args [2].ValueNumber ;_facf :=0.0;if _fcda >=4&&args [3].Type !=ResultTypeEmpty {if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("P\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0066\u0075\u0074\u0075\u0072e \u0076\u0061\u006c\u0075e\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075mb\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_facf =args [3].ValueNumber ;};_egde :=0.0;if _fcda ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020t\u0079\u0070\u0065\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_egde =args [4].ValueNumber ;if _egde !=0{_egde =1;};};var _accc float64 ;if _edca ==0{_accc =(_bfddg +_facf )/_beafb ;}else {_efea :=_fb .Pow (1+_edca ,_beafb );if _egde ==1{_accc =(_facf *_edca /(_efea -1)+_bfddg *_edca /(1-1/_efea ))/(1+_edca );}else {_accc =_facf *_edca /(_efea -1)+_bfddg *_edca /(1-1/_efea );};};return MakeNumberResult (-_accc );};type evCache struct{_cge map[string ]Result ;_adc *_af .Mutex ;};

// Parse parses a string to get an Expression.
func ParseString (s string )Expression {if s ==""{return NewEmptyExpr ();};return Parse (_bf .NewReader (s ));};

// Yieldmat implements the Excel YIELDMAT function.
func Yieldmat (args []Result )Result {_ggcd :=len (args );if _ggcd !=5&&_ggcd !=6{return MakeErrorResult ("\u0059\u0049\u0045\u004c\u0044\u004d\u0041\u0054\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0066\u0069v\u0065\u0020\u006f\u0072\u0020\u0073\u0069\u0078\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_fbfdg ,_cded ,_gfeab :=_aaf (args [0],args [1],"\u0059\u0049\u0045\u004c\u0044\u004d\u0041\u0054");if _gfeab .Type ==ResultTypeError {return _gfeab ;};_egee ,_gfeab :=_ddg (args [2],"\u0069\u0073\u0073\u0075\u0065\u0020\u0064\u0061\u0074\u0065","\u0059\u0049\u0045\u004c\u0044\u004d\u0041\u0054");if _gfeab .Type ==ResultTypeError {return _gfeab ;};if _egee >=_fbfdg {return MakeErrorResult ("\u0059\u0049\u0045\u004cD\u004d\u0041\u0054\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0069\u0073\u0073\u0075\u0065\u0020\u0064\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062e\u0020\u0062\u0065\u0066\u006fr\u0065\u0020\u0073\u0065\u0074\u0074\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0064\u0061\u0074\u0065");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0049E\u004c\u0044\u004d\u0041T\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072a\u0074\u0065\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006eu\u006d\u0062\u0065\u0072");};_geba :=args [3].ValueNumber ;if _geba < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0059\u0049\u0045\u004c\u0044M\u0041\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072a\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u006e\u0020\u006e\u0065\u0067\u0061\u0074\u0069\u0076\u0065");};if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0049\u0045\u004c\u0044\u004d\u0041\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0079\u0069\u0065\u006c\u0064\u0020o\u0066\u0020\u0074\u0079\u0070e\u0020\u006eu\u006d\u0062\u0065\u0072");};_ccdc :=args [4].ValueNumber ;if _ccdc <=0{return MakeErrorResultType (ErrorTypeNum ,"Y\u0049\u0045\u004c\u0044\u004d\u0041T\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0070\u0072\u0020\u0074o\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069v\u0065");};_bdfa :=0;if _ggcd ==6&&args [5].Type !=ResultTypeEmpty {if args [5].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059I\u0045\u004cD\u004d\u0041\u0054 \u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0062\u0061\u0073\u0069\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bdfa =int (args [5].ValueNumber );if !_fdgc (_bdfa ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006ec\u006f\u0072\u0072\u0065c\u0074\u0020b\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074\u0020\u0066\u006f\u0072\u0020\u0059\u0049\u0045L\u0044\u004d\u0041\u0054");};};_aagea ,_gfeab :=_gbab (_egee ,_cded ,_bdfa );if _gfeab .Type ==ResultTypeError {return _gfeab ;};_bcaf ,_gfeab :=_gbab (_egee ,_fbfdg ,_bdfa );if _gfeab .Type ==ResultTypeError {return _gfeab ;};_gaef ,_gfeab :=_gbab (_fbfdg ,_cded ,_bdfa );if _gfeab .Type ==ResultTypeError {return _gfeab ;};_gfbd :=1+_aagea *_geba ;_gfbd /=_ccdc /100+_bcaf *_geba ;_gfbd --;_gfbd /=_gaef ;return MakeNumberResult (_gfbd );};

// False is an implementation of the Excel FALSE() function. It takes no
// arguments.
func False (args []Result )Result {if len (args )!=0{return MakeErrorResult ("\u0046A\u004c\u0053\u0045\u0020\u0074\u0061\u006b\u0065\u0073\u0020\u006eo\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};return MakeBoolResult (false );};func _ffdd (_bcbda []Result ,_dged bool ,_adcca string )Result {var _gaea ,_aeddb string ;if _dged {_gaea ="\u0074\u0068\u0072e\u0065";_aeddb ="\u006f\u0064\u0064";}else {_gaea ="\u0074\u0077\u006f";_aeddb ="\u0065\u0076\u0065\u006e";};_fbabf :=len (_bcbda );if (_dged &&_fbabf < 3)||(!_dged &&_fbabf < 2){return MakeErrorResult (_adcca +"\u0020\u0072\u0065\u0071ui\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020"+_gaea +" \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0073");};if (_fbabf /2*2==_fbabf )==_dged {return MakeErrorResult (_adcca +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020"+_aeddb +" \u006eu\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020a\u0072\u0067\u0075\u006den\u0074\u0073");};_ccfd :=-1;_dcda :=-1;for _bccaa :=0;_bccaa < _fbabf ;_bccaa +=2{_ffbgf :=_bcbda [_bccaa ];if _ffbgf .Type !=ResultTypeArray &&_ffbgf .Type !=ResultTypeList {return MakeErrorResult (_adcca +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u006e\u0067\u0065\u0073\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065 \u006c\u0069\u0073\u0074\u0020o\u0072\u0020a\u0072\u0072\u0061\u0079");};_fcbd :=_eabdb (_ffbgf );if _dcda ==-1{_dcda =len (_fcbd );_ccfd =len (_fcbd [0]);}else if len (_fcbd )!=_dcda ||len (_fcbd [0])!=_ccfd {return MakeErrorResult (_adcca +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0061l\u006c\u0020\u0072\u0061n\u0067\u0065\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u0074\u0068\u0065\u0020\u0073\u0061\u006d\u0065\u0020\u0073\u0069\u007a\u0065");};if _dged &&_bccaa ==0{_bccaa --;};};return _fbee ;};

// Amordegrc implements the Excel AMORDEGRC function.
func Amordegrc (args []Result )Result {_dceg ,_gfeb :=_aca (args ,"\u0041M\u004f\u0052\u0044\u0045\u0047\u0052C");if _gfeb .Type ==ResultTypeError {return _gfeb ;};_gddc :=_dceg ._ecd ;_aagd :=_dceg ._gggf ;_gcab :=_dceg ._bedb ;_ggbb :=_dceg ._bcda ;_eaac :=_dceg ._eccd ;_bcde :=_dceg ._cag ;if _bcde >=0.5{return MakeErrorResultType (ErrorTypeNum ,"\u0041\u004d\u004f\u0052\u0044\u0045\u0047R\u0043\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006c\u0065\u0073\u0073\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0035");};_gcgd :=_dceg ._aaa ;_gbfc :=1.0/_bcde ;_ddaa :=2.5;if _gbfc < 3{_ddaa =1;}else if _gbfc < 5{_ddaa =1.5;}else if _gbfc <=6{_ddaa =2;};_bcde *=_ddaa ;_dggcc ,_ecbc :=_gbab (_aagd ,_gcab ,_gcgd );if _ecbc .Type ==ResultTypeError {return MakeErrorResult ("\u0069\u006ec\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0064\u0061\u0074\u0065\u0073\u0020\u0066\u006f\u0072\u0020\u0041\u004d\u004f\u0052\u0044EG\u0052\u0043");};_dega :=_ddcd (_dggcc *_bcde *_gddc );_gddc -=_dega ;_gade :=_gddc -_ggbb ;for _dgcb :=0;_dgcb < _eaac ;_dgcb ++{_dega =_ddcd (_bcde *_gddc );_gade -=_dega ;if _gade < 0{switch _eaac -_dgcb {case 0:case 1:return MakeNumberResult (_ddcd (_gddc *0.5));default:return MakeNumberResult (0);};};_gddc -=_dega ;};return MakeNumberResult (_dega );};

// String returns a string of a range.
func (_ebgd Range )String ()string {return _c .Sprintf ("\u0025\u0073\u003a%\u0073",_ebgd ._bcged .String (),_ebgd ._bcec .String ());};

// Reference returns a string reference value to a vertical range.
func (_gfgdd VerticalRange )Reference (ctx Context ,ev Evaluator )Reference {return Reference {Type :ReferenceTypeVerticalRange ,Value :_gfgdd .verticalRangeReference ()};};func _bgg (_ead ,_badea ,_aefa int )bool {if _badea < 1||_badea > 12{return false ;};if _aefa < 1{return false ;};return _aefa <=_fcf (_ead ,_badea );};const _cgge ="\u005e\u0028\u0028"+_aec +"\u007c"+_bgcd +"\u007c"+_abf +"\u007c"+_aace +"\u0029\u0020\u0029\u003f";

// Quotient is an implementation of the Excel QUOTIENT function that returns the
// integer portion of division.
func Quotient (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0051\u0055\u004f\u0054\u0049E\u004e\u0054\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0074\u0077\u006f\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_cgfef :=args [0].AsNumber ();_beega :=args [1].AsNumber ();if _cgfef .Type !=ResultTypeNumber ||_beega .Type !=ResultTypeNumber {return MakeErrorResult ("\u0051\u0055\u004f\u0054\u0049E\u004e\u0054\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0074\u0077\u006f\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if _beega .ValueNumber ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"\u0051U\u004f\u0054\u0049\u0045N\u0054\u0028\u0029\u0020\u0064i\u0076i\u0064e\u0020\u0062\u0079\u0020\u007a\u0065\u0072o");};return MakeNumberResult (_fb .Trunc (_cgfef .ValueNumber /_beega .ValueNumber ));};const _ecdge =57372;var _daec ,_edgg ,_badfd ,_bagd ,_dcea ,_efcf ,_acfg ,_bbg ,_faebd ,_edcb ,_dbca ,_eecgc ,_ffdg ,_daecf ,_gbcg *_cf .Regexp ;

// Reference returns a string reference value to a horizontal range with prefix.
func (_ebbcfg PrefixHorizontalRange )Reference (ctx Context ,ev Evaluator )Reference {_acabd :=_ebbcfg ._caace .Reference (ctx ,ev );return Reference {Type :ReferenceTypeHorizontalRange ,Value :_ebbcfg .horizontalRangeReference (_acabd .Value )};};

// Mid is an implementation of the Excel MID function that returns a copy
// of the string with each word capitalized.
func Mid (args []Result )Result {if len (args )!=3{return MakeErrorResult ("\u004d\u0049\u0044\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068r\u0065e\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074\u0073");};_afabb :=args [0];if _afabb .Type ==ResultTypeError {return _afabb ;};if _afabb .Type !=ResultTypeString &&_afabb .Type !=ResultTypeNumber &&_afabb .Type !=ResultTypeEmpty {return MakeErrorResult ("\u004d\u0049\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0065x\u0074 \u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067");};_ebbcf :=args [0].Value ();if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u004d\u0049D\u0020\u0072\u0065\u0071u\u0069\u0072e\u0073\u0020\u0073\u0074\u0061\u0072\u0074\u005fn\u0075\u006d\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006eu\u006d\u0062\u0065\u0072");};_edeb :=int (args [1].ValueNumber );if _edeb < 1{return MakeErrorResult ("M\u0049\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0074\u0061\u0072\u0074\u005fn\u0075\u006d\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006dor\u0065\u0020\u0074h\u0061n\u0020\u0030");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u004d\u0049D\u0020\u0072\u0065\u0071u\u0069\u0072e\u0073\u0020\u006e\u0075\u006d\u005f\u0063\u0068a\u0072\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006eu\u006d\u0062\u0065\u0072");};_bbeb :=int (args [2].ValueNumber );if _bbeb < 0{return MakeErrorResult ("\u004d\u0049\u0044\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u005f\u0063\u0068a\u0072\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u006e\u0020\u006e\u0065\u0067\u0061\u0074\u0069\u0076\u0065");};_ccee :=len (_ebbcf );if _edeb > _ccee {return MakeStringResult ("");};_edeb --;_bggaf :=_edeb +_bbeb ;if _bggaf > _ccee {return MakeStringResult (_ebbcf [_edeb :]);}else {return MakeStringResult (_ebbcf [_edeb :_bggaf ]);};};

// Cumprinc implements the Excel CUMPRINC function.
func Cumprinc (args []Result )Result {_edab ,_gcgce :=_geaf (args ,"\u0043\u0055\u004d\u0050\u0052\u0049\u004e\u0043");if _gcgce .Type ==ResultTypeError {return _gcgce ;};_aeef :=_edab ._abb ;_daag :=_edab ._aece ;_bdfd :=_edab ._dccd ;_eaag :=_edab ._bfdba ;_cfcb :=_edab ._fgb ;_abge :=_edab ._ceca ;_aedg :=_gegf (_aeef ,_daag ,_bdfd ,0,_abge );_ceea :=0.0;if _eaag ==1{if _abge ==0{_ceea =_aedg +_bdfd *_aeef ;}else {_ceea =_aedg ;};_eaag ++;};for _fgae :=_eaag ;_fgae <=_cfcb ;_fgae ++{if _abge ==1{_ceea +=_aedg -(_ccaf (_aeef ,_fgae -2,_aedg ,_bdfd ,1)-_aedg )*_aeef ;}else {_ceea +=_aedg -_ccaf (_aeef ,_fgae -1,_aedg ,_bdfd ,0)*_aeef ;};};return MakeNumberResult (_ceea );};

// Nominal implements the Excel NOMINAL function.
func Nominal (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u004e\u004f\u004d\u0049\u004e\u0041\u004c\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074w\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("NO\u004d\u0049N\u0041\u004c\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006e\u006f\u006d\u0069\u006e\u0061\u006c\u0020\u0069\u006e\u0074\u0065\u0072\u0065\u0073\u0074\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062e\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072g\u0075m\u0065\u006et");};_edff :=args [0].ValueNumber ;if _edff <=0{return MakeErrorResultType (ErrorTypeNum ,"\u004e\u004fM\u0049\u004e\u0041\u004c\u0020r\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0065\u0066\u0066\u0065\u0063\u0074\u0020\u0069\u006e\u0074\u0065\u0072\u0065\u0073\u0074\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u004e\u004f\u004d\u0049\u004e\u0041\u004c\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006d\u0070\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0070\u0065\u0072i\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074");};_edde :=float64 (int (args [1].ValueNumber ));if _edde < 1{return MakeErrorResultType (ErrorTypeNum ,"\u004e\u004f\u004d\u0049\u004e\u0041\u004c\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006eum\u0062e\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006d\u0070\u006f\u0075\u006ed\u0069\u006e\u0067\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065 \u0031\u0020\u006f\u0072\u0020\u006d\u006f\u0072\u0065");};return MakeNumberResult ((_fb .Pow (_edff +1,1/_edde )-1)*_edde );};

// NewBinaryExpr constructs a new binary expression with a given operator.
func NewBinaryExpr (lhs Expression ,op BinOpType ,rhs Expression )Expression {return BinaryExpr {_g :lhs ,_fde :rhs ,_df :op };};func _cedbg (_faeg ,_adde ,_cdee ,_fbbb ,_fedb float64 )float64 {var _fgge float64 ;_ebec :=_fedb /_cdee ;if _ebec >=1{_ebec =1;if _fbbb ==1{_fgge =_faeg ;}else {_fgge =0;};}else {_fgge =_faeg *_fb .Pow (1-_ebec ,_fbbb -1);};_gef :=_faeg *_fb .Pow (1-_ebec ,_fbbb );var _debd float64 ;if _gef < _adde {_debd =_fgge -_adde ;}else {_debd =_fgge -_gef ;};if _debd < 0{_debd =0;};return _debd ;};func _ggdf (_ddfb []Result )Result {_cgce :=_ddfb [0].ValueList ;_aaef :=len (_cgce );switch len (_ddfb ){case 1:_gacda :=[]Result {};for _ ,_bfff :=range _cgce {_gacda =append (_gacda ,MakeBoolResult (_bfff .ValueNumber !=0));};return MakeListResult (_gacda );case 2:_dabcd :=_ddfb [1];switch _dabcd .Type {case ResultTypeNumber ,ResultTypeString ,ResultTypeEmpty :_acabe :=[]Result {};for _ ,_gebf :=range _cgce {var _cgfe Result ;if _gebf .ValueNumber ==0{_cgfe =MakeBoolResult (false );}else {_cgfe =_dabcd ;};_acabe =append (_acabe ,_cgfe );};return MakeListResult (_acabe );case ResultTypeList :_bcca :=_fbeg (_dabcd ,_aaef );_fgcf :=[]Result {};for _edfdd ,_aafa :=range _cgce {var _fcbb Result ;if _aafa .ValueNumber ==0{_fcbb =MakeBoolResult (false );}else {_fcbb =_bcca [_edfdd ];};_fgcf =append (_fgcf ,_fcbb );};return MakeListResult (_fgcf );case ResultTypeArray :_afedc :=_eebef (_dabcd ,len (_dabcd .ValueArray ),_aaef );_afg :=[][]Result {};for _ ,_ecdb :=range _afedc {_feaf :=[]Result {};for _dagcf ,_fabgf :=range _cgce {var _fefg Result ;if _fabgf .ValueNumber ==0{_fefg =MakeBoolResult (false );}else {_fefg =_ecdb [_dagcf ];};_feaf =append (_feaf ,_fefg );};_afg =append (_afg ,_feaf );};return MakeArrayResult (_afg );};case 3:_dcace :=_ddfb [1];_cbgf :=_ddfb [2];_dfbcb :=_gbfa (_dcace );_fgaab :=_gbfa (_cbgf );if _dfbcb &&_fgaab {_cefac :=[]Result {};for _ ,_dfdd :=range _cgce {var _fdgbd Result ;if _dfdd .ValueNumber ==0{_fdgbd =_cbgf ;}else {_fdgbd =_dcace ;};_cefac =append (_cefac ,_fdgbd );};return MakeListResult (_cefac );};if _dcace .Type !=ResultTypeArray &&_cbgf .Type !=ResultTypeArray {_aaeab :=_fbeg (_dcace ,_aaef );_bebe :=_fbeg (_cbgf ,_aaef );_ecdc :=[]Result {};for _acdcc ,_gcaf :=range _cgce {var _edbga Result ;if _gcaf .ValueNumber ==0{_edbga =_bebe [_acdcc ];}else {_edbga =_aaeab [_acdcc ];};_ecdc =append (_ecdc ,_edbga );};return MakeListResult (_ecdc );};_bgae ,_bgbag :=len (_dcace .ValueArray ),len (_cbgf .ValueArray );_bbfgd ,_ebee :=_bgae ,_bgbag ;if _bgbag > _bbfgd {_bbfgd ,_ebee =_ebee ,_bbfgd ;};_bdafc :=_eebef (_dcace ,_bbfgd ,_aaef );_febdf :=_eebef (_cbgf ,_bbfgd ,_aaef );_bgffc :=[][]Result {};for _cdcc :=0;_cdcc < _bbfgd ;_cdcc ++{_baadc :=[]Result {};for _gbdb ,_beee :=range _cgce {var _bedc Result ;if _beee .ValueNumber ==0{if _cdcc < _bgbag {_bedc =_febdf [_cdcc ][_gbdb ];}else {_bedc =MakeErrorResultType (ErrorTypeNA ,"");};}else {if _cdcc < _bgae {_bedc =_bdafc [_cdcc ][_gbdb ];}else {_bedc =MakeErrorResultType (ErrorTypeNA ,"");};};_baadc =append (_baadc ,_bedc );};_bgffc =append (_bgffc ,_baadc );};return MakeArrayResult (_bgffc );};return MakeErrorResult ("");};func (_affe ResultType )String ()string {if _affe >=ResultType (len (_aeeee )-1){return _c .Sprintf ("\u0052\u0065\u0073\u0075\u006c\u0074\u0054\u0079\u0070e\u0028\u0025\u0064\u0029",_affe );};return _fgbg [_aeeee [_affe ]:_aeeee [_affe +1]];};

// Coupdays implements the Excel COUPDAYS function.
func Coupdays (args []Result )Result {_becg ,_cdfcd :=_ced (args ,"\u0043\u004f\u0055\u0050\u0044\u0041\u0059\u0053");if _cdfcd .Type ==ResultTypeError {return _cdfcd ;};return MakeNumberResult (_ccb (_becg ._ebbf ,_becg ._fee ,_becg ._fea ,_becg ._ffba ));};

// Rows implements the Excel ROWS function.
func Rows (args []Result )Result {if len (args )< 1{return MakeErrorResult ("\u0052\u004f\u0057\u0053\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074");};_geddb :=args [0];if _geddb .Type !=ResultTypeArray &&_geddb .Type !=ResultTypeList {return MakeErrorResult ("\u0052\u004f\u0057S\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074y\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_cdeba :=_geddb .ValueArray ;if len (_cdeba )==0{return MakeErrorResult ("\u0052O\u0057\u0053 \u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0072r\u0061\u0079\u0020\u0074\u006f\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0074\u0020\u006ce\u0061\u0073\u0074\u0020\u0031\u0020\u0072\u006f\u0077");};return MakeNumberResult (float64 (len (_cdeba )));};func _ggaaf (_gcffa int )string {if _gcffa >=0&&_gcffa < len (_ffeac ){if _ffeac [_gcffa ]!=""{return _ffeac [_gcffa ];};};return _c .Sprintf ("\u0073\u0074\u0061\u0074\u0065\u002d\u0025\u0076",_gcffa );};

// Reference returns a string reference value to a sheet.
func (_bbgab SheetPrefixExpr )Reference (ctx Context ,ev Evaluator )Reference {return Reference {Type :ReferenceTypeSheet ,Value :_bbgab ._eaabc };};

// NamedRangeRef is a reference to a named range.
type NamedRangeRef struct{_acdfe string };

// GetFormat returns an empty string for the invalid reference context.
func (_efge *ivr )GetFormat (cellRef string )string {return ""};const _fgbg ="\u0052\u0065\u0073\u0075\u006c\u0074\u0054\u0079\u0070\u0065U\u006e\u006b\u006e\u006f\u0077\u006e\u0052\u0065\u0073u\u006c\u0074\u0054y\u0070\u0065\u004e\u0075\u006d\u0062\u0065\u0072\u0052\u0065s\u0075\u006c\u0074\u0054\u0079\u0070\u0065\u0053\u0074\u0072\u0069\u006e\u0067\u0052\u0065\u0073\u0075\u006c\u0074\u0054\u0079\u0070\u0065\u004c\u0069\u0073\u0074\u0052\u0065\u0073\u0075lt\u0054\u0079p\u0065\u0041r\u0072\u0061\u0079\u0052\u0065\u0073\u0075\u006c\u0074\u0054\u0079\u0070\u0065\u0045\u0072\u0072\u006f\u0072\u0052\u0065\u0073\u0075\u006c\u0074\u0054\u0079\u0070\u0065\u0045\u006d\u0070\u0074\u0079";const _gaedc =57369;type plex struct{_bbga chan *node ;_aegdd Expression ;_acbga string ;};

// NewNamedRangeRef constructs a new named range reference.
func NewNamedRangeRef (v string )Expression {return NamedRangeRef {_acdfe :v }};func _ada (_bcef int )bool {return _bcef ==0||_bcef ==4};

// NewRange constructs a new range.
func NewRange (from ,to Expression )Expression {_cgcc ,_ffcbf ,_dffba :=_egfda (from ,to );if _dffba !=nil {_ce .Log (_dffba .Error ());return NewError (_dffba .Error ());};return Range {_bcged :_cgcc ,_bcec :_ffcbf };};func _ag (_ba ,_adg [][]Result )bool {if len (_ba )!=len (_adg ){return false ;};for _gfe :=range _ba {if len (_ba [_gfe ])!=len (_adg [_gfe ]){return false ;};};return true ;};

// Rand is an implementation of the Excel RAND() function that returns random
// numbers in the range [0,1).
func Rand (args []Result )Result {if len (args )!=0{return MakeErrorResult ("R\u0041\u004e\u0044\u0028\u0029\u0020a\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u006e\u006f \u0061\u0072\u0067u\u006de\u006e\u0074\u0073");};return MakeNumberResult (_geede .Float64 ());};func (_afca Result )String ()string {return _afca .Value ()};

// And is an implementation of the Excel AND() function.
func And (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0041\u004e\u0044 r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061t\u0020l\u0065a\u0073t\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_befe :=true ;for _ ,_agdf :=range args {_agdf =_agdf .AsNumber ();switch _agdf .Type {case ResultTypeList ,ResultTypeArray :_fcdag :=And (_agdf .ListValues ());if _fcdag .Type ==ResultTypeError {return _fcdag ;};if _fcdag .ValueNumber ==0{_befe =false ;};case ResultTypeNumber :if _agdf .ValueNumber ==0{_befe =false ;};case ResultTypeString :return MakeErrorResult ("\u0041\u004e\u0044\u0020\u0064\u006f\u0065\u0073\u006e\u0027t\u0020\u006f\u0070\u0065\u0072\u0061\u0074e\u0020\u006f\u006e\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0073");case ResultTypeError :return _agdf ;default:return MakeErrorResult ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0061\u0072\u0067u\u006de\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0069\u006e\u0020\u0041\u004e\u0044");};};return MakeBoolResult (_befe );};func _gda (_gga int )bool {if _gga ==_gga /400*400{return true ;};if _gga ==_gga /100*100{return false ;};return _gga ==_gga /4*4;};type rangeIndex struct{_adfac int ;_dbcad int ;};var _gegda =[...]struct{_gfggg int ;_bgac int ;_gagb string ;}{};

// Base is an implementation of the Excel BASE function that returns a string
// form of an integer in a specified base and of a minimum length with padded
// zeros.
func Base (args []Result )Result {if len (args )< 2{return MakeErrorResult ("\u0042\u0041\u0053\u0045\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074 \u0074\u0077\u006f\u0020\u0061r\u0067\u0075m\u0065\u006e\u0074\u0073");};if len (args )> 3{return MakeErrorResult ("\u0042\u0041S\u0045\u0028\u0029\u0020a\u006c\u006co\u0077\u0073\u0020\u0061\u0074\u0020\u006d\u006fs\u0074\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_deca :=args [0].AsNumber ();if _deca .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069\u0072\u0073\u0074 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0042A\u0053\u0045\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_aecf :=args [1].AsNumber ();if _aecf .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063o\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0042\u0041\u0053\u0045\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_egdag :=int (_aecf .ValueNumber );if _egdag < 0||_egdag > 36{return MakeErrorResult ("\u0072\u0061\u0064\u0069\u0078\u0020m\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0069\u006e\u0020\u0074\u0068\u0065 \u0072\u0061\u006e\u0067\u0065\u0020\u005b0\u002c\u0033\u0036\u005d");};_bbge :=0;if len (args )> 2{_aege :=args [2].AsNumber ();if _aege .Type !=ResultTypeNumber {return MakeErrorResult ("\u0074\u0068\u0069\u0072\u0064 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0042A\u0053\u0045\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_bbge =int (_aege .ValueNumber );};_eeec :=_ad .FormatInt (int64 (_deca .ValueNumber ),_egdag );if len (_eeec )< _bbge {_eeec =_bf .Repeat ("\u0030",_bbge -len (_eeec ))+_eeec ;};return MakeStringResult (_eeec );};

// Npv implements the Excel NPV function.
func Npv (args []Result )Result {_efeg :=len (args );if _efeg < 2{return MakeErrorResult ("\u004e\u0050\u0056 r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074w\u006f \u006fr\u0020m\u006f\u0072\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u004e\u0050\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020r\u0061\u0074\u0065\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_fdafa :=args [0].ValueNumber ;if _fdafa ==-1{return MakeErrorResultType (ErrorTypeDivideByZero ,"");};_dfdea :=[]float64 {};for _ ,_bgcec :=range args [1:]{switch _bgcec .Type {case ResultTypeNumber :_dfdea =append (_dfdea ,_bgcec .ValueNumber );case ResultTypeArray ,ResultTypeList :_dbaa :=_eabdb (_bgcec );for _ ,_beec :=range _dbaa {for _ ,_cgegb :=range _beec {if _cgegb .Type ==ResultTypeNumber &&!_cgegb .IsBoolean {_dfdea =append (_dfdea ,_cgegb .ValueNumber );};};};};};_bbbc :=0.0;for _gdgb ,_egb :=range _dfdea {_bbbc +=_egb /_fb .Pow (1+_fdafa ,float64 (_gdgb )+1);};return MakeNumberResult (_bbbc );};const _cgcfb =57362;

// IfError is an implementation of the Excel IFERROR() function. It takes two arguments.
func IfError (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0049\u0046\u0045\u0052\u0052\u004f\u0052\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074w\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeError {if args [0].Type ==ResultTypeEmpty {return MakeNumberResult (0);};return args [0];};return args [1];};

// Offset is an implementation of the Excel OFFSET function.
func Offset (ctx Context ,ev Evaluator ,args []Result )Result {if len (args )!=3&&len (args )!=5{return MakeErrorResult ("\u004f\u0046\u0046\u0053\u0045\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0074\u0068\u0072\u0065e\u0020\u006f\u0072\u0020\u0066\u0069\u0076\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_dacg :=args [0].Ref ;for _dacg .Type ==ReferenceTypeNamedRange {_dacg =ctx .NamedRange (_dacg .Value );};_ffcg :="";switch _dacg .Type {case ReferenceTypeCell :_ffcg =_dacg .Value ;case ReferenceTypeRange :_cdc :=_bf .Split (_dacg .Value ,"\u003a");if len (_cdc )==2{_ffcg =_cdc [0];};default:return MakeErrorResult (_c .Sprintf ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0069\u006e\u0020\u004f\u0046\u0046\u0053\u0045\u0054\u0028\u0029: \u0025\u0073",_dacg .Type ));};_bfaf ,_bbfg :=_d .ParseCellReference (_ffcg );if _bbfg !=nil {return MakeErrorResult (_c .Sprintf ("\u0070\u0061\u0072s\u0065\u0020\u006f\u0072i\u0067\u0069\u006e\u0020\u0065\u0072\u0072o\u0072\u0020\u004f\u0046\u0046\u0053\u0045\u0054\u0028\u0029\u003a\u0020\u0025\u0073",_bbfg .Error ()));};_bgff ,_dgdag ,_effe :=_bfaf .Column ,_bfaf .RowIdx ,_bfaf .SheetName ;_agddg :=args [1].AsNumber ();if _agddg .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0046\u0046SE\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020n\u0075m\u0065r\u0069\u0063\u0020\u0072\u006f\u0077\u0020\u006f\u0066\u0066\u0073\u0065\u0074");};_bbe :=args [2].AsNumber ();if _bbe .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0046\u0046SE\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020n\u0075m\u0065r\u0069\u0063\u0020\u0063\u006f\u006c\u0020\u006f\u0066\u0066\u0073\u0065\u0074");};var _ddcb ,_bfbgg Result ;if len (args )==3{_ddcb =MakeNumberResult (1);_bfbgg =MakeNumberResult (1);}else {_ddcb =args [3].AsNumber ();if _ddcb .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0046\u0046\u0053\u0045\u0054\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u006e\u0075m\u0065\u0072\u0069\u0063\u0020\u0068\u0065\u0069\u0067\u0068\u0074");};if _ddcb .ValueNumber ==0{return MakeErrorResultType (ErrorTypeRef ,"");};_bfbgg =args [4].AsNumber ();if _bfbgg .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0046F\u0053\u0045\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0077id\u0074\u0068");};if _bfbgg .ValueNumber ==0{return MakeErrorResultType (ErrorTypeRef ,"");};};_gcccc :=_d .ColumnToIndex (_bgff );_dbfe :=_dgdag +uint32 (_agddg .ValueNumber );_ccbgg :=_gcccc +uint32 (_bbe .ValueNumber );_acdc :=_dbfe +uint32 (_ddcb .ValueNumber );_geab :=_ccbgg +uint32 (_bfbgg .ValueNumber );if _ddcb .ValueNumber > 0{_acdc --;}else {_acdc ++;_dbfe ,_acdc =_acdc ,_dbfe ;};if _bfbgg .ValueNumber > 0{_geab --;}else {_geab ++;_ccbgg ,_geab =_geab ,_ccbgg ;};_ddbc :=_c .Sprintf ("\u0025\u0073\u0025\u0064",_d .IndexToColumn (_ccbgg ),_dbfe );_fddf :=_c .Sprintf ("\u0025\u0073\u0025\u0064",_d .IndexToColumn (_geab ),_acdc );if _effe ==""{return _egfc (ctx ,ev ,_ddbc ,_fddf );}else {return _egfc (ctx .Sheet (_effe ),ev ,_ddbc ,_fddf );};};

// PrefixExpr is an expression containing reference to another sheet like Sheet1!A1 (the value of the cell A1 from sheet 'Sheet1').
type PrefixExpr struct{_cfdf Expression ;_gfgd Expression ;};

// Ispmt implements the Excel ISPMT function.
func Ispmt (args []Result )Result {if len (args )!=4{return MakeErrorResult ("\u0049\u0053P\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u006f\u0075\u0072\u0020\u0061\u0072\u0067\u0075\u006den\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0053\u0050\u004d\u0054 \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dde :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0053\u0050\u004d\u0054\u0020\u0072e\u0071\u0075\u0069r\u0065\u0073\u0020\u0070e\u0072\u0069\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gdfd :=args [1].ValueNumber ;if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0053\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0065\u0072\u0069o\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006dbe\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gbeb :=args [2].ValueNumber ;if _gbeb <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0049S\u0050\u004d\u0054\u0020\u0072\u0065\u0071ui\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020p\u0065\u0072i\u006f\u0064\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006eu\u006d\u0062er\u0020\u0061\u0072g\u0075\u006d\u0065\u006e\u0074");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0053\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0072\u0065s\u0065\u006e\u0074\u0020\u0076\u0061\u006cu\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_afaf :=args [3].ValueNumber ;return MakeNumberResult (_afaf *_dde *(_gdfd /_gbeb -1));};

// NewHorizontalRange constructs a new full rows range.
func NewHorizontalRange (v string )Expression {_cgga :=_bf .Split (v ,"\u003a");if len (_cgga )!=2{return nil ;};_eedd ,_ :=_ad .Atoi (_cgga [0]);_ffddg ,_ :=_ad .Atoi (_cgga [1]);if _eedd > _ffddg {_eedd ,_ffddg =_ffddg ,_eedd ;};return HorizontalRange {_efbab :_eedd ,_bgaaa :_ffddg };};

// String returns a string representation of a vertical range.
func (_fbcb VerticalRange )String ()string {return _fbcb .verticalRangeReference ()};

// MakeBoolResult constructs a boolean result (internally a number).
func MakeBoolResult (b bool )Result {if b {return Result {Type :ResultTypeNumber ,ValueNumber :1,IsBoolean :true };};return Result {Type :ResultTypeNumber ,ValueNumber :0,IsBoolean :true };};

// Eval evaluates and returns a number.
func (_bggee Number )Eval (ctx Context ,ev Evaluator )Result {return MakeNumberResult (_bggee ._adbe )};const _aec ="\u0028\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029\u002f\u0028\u0028\u005b\u0030-\u0039]\u0029\u002b\u0029\u002f\u0028\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029";

// PrefixHorizontalRange is a range expression that when evaluated returns a list of Results from references like Sheet1!1:4 (all cells from rows 1 to 4 of sheet 'Sheet1').
type PrefixHorizontalRange struct{_caace Expression ;_cadab ,_dgbaa int ;};

// NewNumber constructs a new number expression.
func NewNumber (v string )Expression {_dbce ,_debb :=_ad .ParseFloat (v ,64);if _debb !=nil {_ce .Log ("e\u0072\u0072\u006f\u0072\u0020\u0070a\u0072\u0073\u0069\u006e\u0067\u0020f\u006f\u0072\u006d\u0075\u006c\u0061\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u0025\u0073\u003a\u0020%\u0073",v ,_debb );};return Number {_adbe :_dbce };};

// Column implements the Excel COLUMN function.
func Column (args []Result )Result {if len (args )< 1{return MakeErrorResult ("\u0043\u004f\u004c\u0055M\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u006fn\u0065\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_cfcf :=args [0].Ref ;if _cfcf .Type !=ReferenceTypeCell {return MakeErrorResult ("\u0043\u004f\u004c\u0055\u004dN\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u006e\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063e");};_cgcf ,_gfbc :=_d .ParseCellReference (_cfcf .Value );if _gfbc !=nil {return MakeErrorResult ("I\u006e\u0063\u006f\u0072re\u0063t\u0020\u0072\u0065\u0066\u0065r\u0065\u006e\u0063\u0065\u003a\u0020"+_cfcf .Value );};return MakeNumberResult (float64 (_cgcf .ColumnIdx +1));};

// Eval evaluates a horizontal range returning a list of results or an error.
func (_ddgfc HorizontalRange )Eval (ctx Context ,ev Evaluator )Result {_fgcd :=_ddgfc .horizontalRangeReference ();if _fbbba ,_eaebb :=ev .GetFromCache (_fgcd );_eaebb {return _fbbba ;};_baege ,_dbaab :=_efdg (ctx ,_ddgfc ._efbab ,_ddgfc ._bgaaa );_bcfce :=_egfc (ctx ,ev ,_baege ,_dbaab );ev .SetCache (_fgcd ,_bcfce );return _bcfce ;};

// AsNumber attempts to intepret a string cell value as a number. Upon success,
// it returns a new number result, upon  failure it returns the original result.
// This is used as functions return strings that can then act like number (e.g.
// LEFT(1.2345,3) + LEFT(1.2345,3) = 2.4)
func (_dgbeg Result )AsNumber ()Result {if _dgbeg .Type ==ResultTypeString {_adcac ,_abced :=_ad .ParseFloat (_dgbeg .ValueString ,64);if _abced ==nil {return MakeNumberResult (_adcac );};};if _dgbeg .Type ==ResultTypeEmpty {return MakeNumberResult (0);};return _dgbeg ;};

// Product is an implementation of the Excel PRODUCT() function.
func Product (args []Result )Result {_dadc :=1.0;for _ ,_eced :=range args {_eced =_eced .AsNumber ();switch _eced .Type {case ResultTypeNumber :_dadc *=_eced .ValueNumber ;case ResultTypeList ,ResultTypeArray :_gaeb :=Product (_eced .ListValues ());if _gaeb .Type !=ResultTypeNumber {return _gaeb ;};_dadc *=_gaeb .ValueNumber ;case ResultTypeString :case ResultTypeError :return _eced ;case ResultTypeEmpty :default:return MakeErrorResult (_c .Sprintf ("\u0075\u006eha\u006e\u0064\u006ce\u0064\u0020\u0050\u0052ODU\u0043T(\u0029\u0020\u0061\u0072\u0067\u0075\u006den\u0074\u0020\u0074\u0079\u0070\u0065\u0020%\u0073",_eced .Type ));};};return MakeNumberResult (_dadc );};

// MakeErrorResult constructs a #VALUE! error with a given extra error message.
// The error message is for debugging formula evaluation only and is not stored
// in the sheet.
func MakeErrorResult (msg string )Result {return MakeErrorResultType (ErrorTypeValue ,msg )};

// Combin is an implementation of the Excel COMBINA function whic returns the
// number of combinations.
func Combin (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0043\u004f\u004d\u0042\u0049\u004e\u0028\u0029\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020t\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dbed :=args [0].AsNumber ();_abdff :=args [1].AsNumber ();if _dbed .Type !=ResultTypeNumber ||_abdff .Type !=ResultTypeNumber {return MakeErrorResult ("C\u004f\u004d\u0042\u0049\u004e\u0028)\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u006e\u0075\u006d\u0065r\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_bgfc :=_fb .Trunc (_dbed .ValueNumber );_dbdg :=_fb .Trunc (_abdff .ValueNumber );if _dbdg > _bgfc {return MakeErrorResult ("\u0043O\u004d\u0042\u0049\u004e\u0028\u0029\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u006b\u0020\u003c\u003d\u0020\u006e");};if _dbdg ==_bgfc ||_dbdg ==0{return MakeNumberResult (1);};_bgge :=float64 (1);for _ddee :=float64 (1);_ddee <=_dbdg ;_ddee ++{_bgge *=(_bgfc +1-_ddee )/_ddee ;};return MakeNumberResult (_bgge );};

// MakeStringResult constructs a string result.
func MakeStringResult (s string )Result {return Result {Type :ResultTypeString ,ValueString :s }};func _eeae (_ggbad []string ,_ddgc int )string {return _ad .Itoa (len (_ggbad [len (_ggbad )-1-_ddgc ]))};func _dcdd (_cfae float64 )bool {return _cfae ==1||_cfae ==2||_cfae ==4};

// Fvschedule implements the Excel FVSCHEDULE function.
func Fvschedule (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0046\u0056\u0053\u0043\u0048\u0045D\u0055\u004c\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020t\u0077\u006f\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0046\u0056\u0053\u0043\u0048E\u0044\u0055\u004c\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0070\u0072\u0069\u006e\u0063\u0069\u0070\u0061\u006c\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et");};_bfabf :=args [0].ValueNumber ;switch args [1].Type {case ResultTypeNumber :return MakeNumberResult (_bfabf *(args [1].ValueNumber +1));case ResultTypeList ,ResultTypeArray :_bgef :=_eabdb (args [1]);for _ ,_fedab :=range _bgef {for _ ,_acda :=range _fedab {if _acda .Type !=ResultTypeNumber ||_acda .IsBoolean {return MakeErrorResult ("\u0046\u0056\u0053\u0043\u0048\u0045\u0044\u0055\u004c\u0045\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020r\u0061\u0074\u0065\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075m\u0062\u0065\u0072\u0073");};_bfabf *=1.0+_acda .ValueNumber ;};};return MakeNumberResult (_bfabf );default:return MakeErrorResult ("\u0046\u0056\u0053\u0043\u0048\u0045\u0044\u0055\u004c\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020s\u0063\u0068\u0065\u0064\u0075\u006c\u0065\u0020\u0074o\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006f\u0072\u0020\u0061\u0072\u0072a\u0079\u0020\u0074y\u0070\u0065");};};func _fbeg (_efbdc Result ,_dbfcg int )[]Result {_gabf :=[]Result {};switch _efbdc .Type {case ResultTypeList :_dbgf :=_efbdc .ValueList ;_adaa :=len (_dbgf );for _fbac :=0;_fbac < _dbfcg ;_fbac ++{if _fbac < _adaa {_gabf =append (_gabf ,_dbgf [_fbac ]);}else {_gabf =append (_gabf ,MakeErrorResultType (ErrorTypeNA ,""));};};case ResultTypeNumber ,ResultTypeString ,ResultTypeError ,ResultTypeEmpty :for _dfecc :=0;_dfecc < _dbfcg ;_dfecc ++{_gabf =append (_gabf ,_efbdc );};};return _gabf ;};func _gcfgf (_eggbc []Result ,_fceg bool )(float64 ,float64 ){_dcgdd :=0.0;_ceeef :=0.0;for _ ,_fdbg :=range _eggbc {switch _fdbg .Type {case ResultTypeNumber :if _fceg ||!_fdbg .IsBoolean {_ceeef +=_fdbg .ValueNumber ;_dcgdd ++;};case ResultTypeList ,ResultTypeArray :_aacea ,_bbdc :=_gcfgf (_fdbg .ListValues (),_fceg );_ceeef +=_aacea ;_dcgdd +=_bbdc ;case ResultTypeString :if _fceg {_dcgdd ++;};case ResultTypeEmpty :};};return _ceeef ,_dcgdd ;};

// Power is an implementation of the Excel POWER function that raises a number
// to a power. It requires two numeric arguments.
func Power (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0050\u004f\u0057\u0045\u0052\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u006e\u0075\u006de\u0072\u0069\u0063\u0020\u0061r\u0067\u0075m\u0065\u006e\u0074\u0073");};_dfece :=args [0].AsNumber ();if _dfece .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069\u0072s\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0050\u004f\u0057\u0045\u0052\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_daaf :=args [1].AsNumber ();if _daaf .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063\u006f\u006e\u0064\u0020a\u0072\u0067\u0075m\u0065\u006e\u0074\u0020t\u006f\u0020\u0050\u004f\u0057\u0045\u0052\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};return MakeNumberResult (_fb .Pow (_dfece .ValueNumber ,_daaf .ValueNumber ));};const _edee =57354;

// Reference returns an invalid reference for Bool.
func (_db Bool )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };const (ErrorTypeValue ErrorType =iota ;ErrorTypeNull ;ErrorTypeRef ;ErrorTypeName ;ErrorTypeNum ;ErrorTypeSpill ;ErrorTypeNA ;ErrorTypeDivideByZero ;);func _gea (_eag ,_cecg int64 )float64 {return float64 (int (0.5+float64 ((_cecg -_eag )/86400)))};func NewLexer ()*Lexer {return &Lexer {_ddgcb :make (chan *node )}};

// SumProduct is an implementation of the Excel SUMPRODUCT() function.
func SumProduct (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0053\u0055\u004d\u0050\u0052\u004f\u0044U\u0043\u0054\u0028)\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_aebaa :=args [0].Type ;for _ ,_gegfe :=range args {if _gegfe .Type !=_aebaa {return MakeErrorResult ("\u0053\u0055M\u0050\u0052\u004f\u0044\u0055C\u0054\u0028\u0029\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u006c\u006c\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u006f\u0066\u0020\u0074\u0068\u0065\u0020\u0073\u0061\u006d\u0065\u0020\u0074\u0079\u0070\u0065");};};switch _aebaa {case ResultTypeNumber :return Product (args );case ResultTypeList ,ResultTypeArray :_fbab :=len (args [0].ListValues ());_efcga :=make ([]float64 ,_fbab );for _gfggf :=range _efcga {_efcga [_gfggf ]=1.0;};for _ ,_ggfa :=range args {if len (_ggfa .ListValues ())!=_fbab {return MakeErrorResult ("\u0053\u0055\u004d\u0050\u0052\u004f\u0044\u0055\u0043\u0054\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069re\u0073 \u0061\u006c\u006c\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074s\u0020\u0074\u006f\u0020\u0068\u0061\u0076\u0065\u0020\u0074\u0068\u0065\u0020\u0073\u0061\u006d\u0065 \u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e");};for _aecgg ,_aaff :=range _ggfa .ListValues (){_aaff =_aaff .AsNumber ();if _aaff .Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u0055\u004d\u0050\u0052\u004fD\u0055\u0043\u0054\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u006c\u006c\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020n\u0075m\u0065\u0072\u0069\u0063");};_efcga [_aecgg ]=_efcga [_aecgg ]*_aaff .ValueNumber ;};};_aefg :=0.0;for _ ,_acbg :=range _efcga {_aefg +=_acbg ;};return MakeNumberResult (_aefg );};return MakeNumberResult (1.0);};

// Columns implements the Excel COLUMNS function.
func Columns (args []Result )Result {if len (args )< 1{return MakeErrorResult ("\u0043\u004fL\u0055\u004d\u004e\u0053\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075me\u006e\u0074");};_acfd :=args [0];if _acfd .Type !=ResultTypeArray &&_acfd .Type !=ResultTypeList {return MakeErrorResult ("\u0043O\u004c\u0055M\u004e\u0053\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0066\u0069\u0072\u0073\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_baea :=_acfd .ValueArray ;if len (_baea )==0{return MakeErrorResult ("\u0043\u004f\u004c\u0055\u004d\u004e\u0053\u0020r\u0065\u0071\u0075ir\u0065\u0073\u0020\u0061\u0072\u0072a\u0079\u0020\u0074\u006f\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0074 \u006c\u0065\u0061\u0073\u0074\u0020\u0031\u0020r\u006f\u0077");};return MakeNumberResult (float64 (len (_baea [0])));};

// Update returns the same object as updating sheet references does not affect Bool.
func (_cc Bool )Update (q *_aac .UpdateQuery )Expression {return _cc };const _aace ="(\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029\u002d"+_eae +"-\u0028\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029";

// Value returns a string version of the result.
func (_fbbgg Result )Value ()string {switch _fbbgg .Type {case ResultTypeNumber :_adfd :=_ad .FormatFloat (_fbbgg .ValueNumber ,'f',-1,64);if len (_adfd )> 12{_ccfgf :=12;for _dbad :=_ccfgf ;_dbad > 0&&_adfd [_dbad ]=='0';_dbad --{_ccfgf --;};_adfd =_adfd [0:_ccfgf +1];};return _adfd ;case ResultTypeError :return _fbbgg .ValueString ;case ResultTypeString :return _fbbgg .ValueString ;case ResultTypeList :if len (_fbbgg .ValueList )==0{return "";};return _fbbgg .ValueList [0].Value ();case ResultTypeArray :if len (_fbbgg .ValueArray )==0||len (_fbbgg .ValueArray [0])==0{return "";};return _fbbgg .ValueArray [0][0].Value ();case ResultTypeEmpty :return "";default:return "\u0075\u006e\u0068\u0061nd\u006c\u0065\u0064\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0020\u0076\u0061\u006cu\u0065";};};func _dccc (_cage yyLexer )int {return _fecd ().Parse (_cage )};

// Year is an implementation of the Excel YEAR() function.
func Year (ctx Context ,ev Evaluator ,args []Result )Result {if len (args )!=1||args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0045\u0041\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_eadfg :=ctx .GetEpoch ();_begg ,_bfee :=_bcfge (args [0].Value (),_eadfg );if _bfee !=nil {return MakeErrorResult ("\u0059\u0045AR\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s a\u0020si\u006e\u0067\u006c\u0065\u0020\u0064\u0061te\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};return MakeNumberResult (float64 (_begg .Year ()));};

// Small implements the Excel SMALL function.
func Small (args []Result )Result {return _ceed (args ,false )};

// NewCellRef constructs a new cell reference.
func NewCellRef (v string )Expression {return CellRef {_abe :v }};

// Evaluator is the interface for a formula evaluator.  This is needed so we can
// pass it to the spreadsheet to let it evaluate formula cells before returning
// the results.
// NOTE: in order to implement Evaluator without cache embed noCache in it.
type Evaluator interface{Eval (_gdd Context ,formula string )Result ;SetCache (_cdd string ,_dfd Result );GetFromCache (_aef string )(Result ,bool );LastEvalIsRef ()bool ;};

// MinA is an implementation of the Excel MINA() function.
func MinA (args []Result )Result {return _egfd (args ,true )};const _abf ="\u0028\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029\u002d\u0028\u0028\u005b\u0030-\u0039]\u0029\u002b\u0029\u002d\u0028\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029";

// SheetPrefixExpr is a reference to a sheet like Sheet1! (reference to sheet 'Sheet1').
type SheetPrefixExpr struct{_eaabc string };func _ebfb (_dcgb ,_gfcb ,_dcbbg int )int {if _dcgb > _gfcb {return 0;};if _ada (_dcbbg ){return (_gfcb -_dcgb +1)*360;};_eeb :=0;for _cecf :=_dcgb ;_cecf <=_gfcb ;_cecf ++{_caage :=365;if _gda (_cecf ){_caage =366;};_eeb +=_caage ;};return _eeb ;};var _cabbc =[...]int {-1000,-7,-3,-1,27,18,22,23,-2,-8,-4,-9,20,-14,10,11,12,13,-5,-13,-6,-12,17,16,15,9,4,5,22,23,24,25,26,28,29,30,31,27,32,35,-1,18,27,-15,-17,-1,-1,-1,-1,33,-5,4,5,21,-16,-11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,36,34,21,-5,33,21,34,19,-17,-1,-5,-10,-1};

// Reference returns an invalid reference for String.
func (_dgdf String )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };

// Right implements the Excel RIGHT(string,[n]) function which returns the
// rightmost n characters.
func Right (args []Result )Result {_agagf :=1;switch len (args ){case 1:case 2:if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0049\u0047\u0048\u0054\u0020\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_agagf =int (args [1].ValueNumber );if _agagf < 0{return MakeErrorResult ("R\u0049\u0047\u0048\u0054\u0020\u0065x\u0070\u0065\u0063\u0074\u0065\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u003e\u003d \u0030");};if _agagf ==0{return MakeStringResult ("");};default:return MakeErrorResult ("\u0052\u0049\u0047HT\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020o\u006ee\u0020o\u0072 \u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type ==ResultTypeList {return MakeErrorResult ("\u0052\u0049\u0047\u0048\u0054\u0020\u0063\u0061\u006e\u0027\u0074\u0020\u0062\u0065\u0020c\u0061l\u006c\u0065\u0064\u0020\u006f\u006e\u0020\u0061\u0020\u0072\u0061\u006e\u0067\u0065");};_efaf :=args [0].Value ();_ecdg :=len (_efaf );if _agagf > _ecdg {return MakeStringResult (_efaf );};return MakeStringResult (_efaf [_ecdg -_agagf :_ecdg ]);};const _efgf int =30;

// Reference returns a string reference value to a range.
func (_eddac Range )Reference (ctx Context ,ev Evaluator )Reference {_bgbc :=_eddac ._bcged .Reference (ctx ,ev );_acfc :=_eddac ._bcec .Reference (ctx ,ev );if _bgbc .Type ==ReferenceTypeCell &&_acfc .Type ==ReferenceTypeCell {return MakeRangeReference (_dfggg (_bgbc ,_acfc ));};return ReferenceInvalid ;};func _gbbdc (_cfbfb ,_efbafb ,_cgaab Reference )string {return _c .Sprintf ("\u0025\u0073\u0021\u0025\u0073\u003a\u0025\u0073",_cfbfb .Value ,_efbafb .Value ,_cgaab .Value );};

// String returns a string representation of a named range.
func (_ceaef NamedRangeRef )String ()string {return _ceaef ._acdfe };

// LookupFunction looks up and returns a standard function or nil.
func LookupFunction (name string )Function {_beafae .Lock ();defer _beafae .Unlock ();if _cccdbg ,_cgaabf :=_adebf [name ];_cgaabf {return _cccdbg ;};return nil ;};func _bcgad (_eead Result ,_cfacb *criteriaParsed )bool {_cbddc :=_bf .ToLower (_eead .ValueString );_bbce :=_cfacb ._ddfe ._dgcc ;_cccd :=_cfacb ._ddfe ._ecebb ;if _bbce ==_eagb {return _cbddc ==_cccd ||_bc .Match (_cccd ,_cbddc );};if _eead .Type !=ResultTypeEmpty {if _cbddc ==_cfacb ._agdda ||_bc .Match (_cfacb ._agdda ,_cbddc ){return true ;};if _ ,_eabce :=_ad .ParseFloat (_cccd ,64);_eabce ==nil {return false ;};switch _bbce {case _gagg :return _cbddc <=_cccd ;case _ggaf :return _cbddc >=_cccd ;case _ddgf :return _cbddc < _cccd ;case _eefcf :return _cbddc > _cccd ;};};return false ;};

// NewError constructs a new error expression from a string.
func NewError (v string )Expression {return Error {_edf :v }};const (BinOpTypeUnknown BinOpType =iota ;BinOpTypePlus ;BinOpTypeMinus ;BinOpTypeMult ;BinOpTypeDiv ;BinOpTypeExp ;BinOpTypeLT ;BinOpTypeGT ;BinOpTypeEQ ;BinOpTypeLEQ ;BinOpTypeGEQ ;BinOpTypeNE ;BinOpTypeConcat ;);func _eecd (_afbg []Result ,_bee string )(*durationArgs ,Result ){_cbfd :=len (_afbg );if _cbfd !=5&&_cbfd !=6{return nil ,MakeErrorResult (_bee +"\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s\u0020\u0066\u0069\u0076\u0065\u0020\u006fr\u0020\u0073\u0069\u0078\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_eeaa ,_dbe ,_dcbe :=_aaf (_afbg [0],_afbg [1],_bee );if _dcbe .Type ==ResultTypeError {return nil ,_dcbe ;};_cedg :=_afbg [2];if _cedg .Type !=ResultTypeNumber {return nil ,MakeErrorResult (_bee +"\u0020\u0072eq\u0075\u0069\u0072e\u0073\u0020\u0063\u006fupo\u006e r\u0061\u0074\u0065\u0020\u006f\u0066\u0020ty\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072");};_ggcfa :=_cedg .ValueNumber ;if _ggcfa < 0{return nil ,MakeErrorResultType (ErrorTypeNum ,"\u0043\u006f\u0075po\u006e\u0020\u0072\u0061\u0074\u0065\u0020\u0073\u0068o\u0075l\u0064 \u006eo\u0074\u0020\u0062\u0065\u0020\u006e\u0065\u0067\u0061\u0074\u0069\u0076\u0065");};_aggf :=_afbg [3];if _aggf .Type !=ResultTypeNumber {return nil ,MakeErrorResult (_bee +" \u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0079\u0069\u0065\u006cd\u0020\u0072\u0061\u0074\u0065\u0020\u006ff\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072");};_ace :=_aggf .ValueNumber ;if _ace < 0{return nil ,MakeErrorResultType (ErrorTypeNum ,"\u0059\u0069\u0065\u006c\u0064\u0020r\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u006ft\u0020\u0062\u0065\u0020\u006e\u0065\u0067a\u0074\u0069\u0076\u0065");};_dad :=_afbg [4];if _dad .Type !=ResultTypeNumber {return nil ,MakeErrorResult (_bee +"\u0020\u0072\u0065qu\u0069\u0072\u0065\u0073\u0020\u0066\u0072\u0065\u0071u\u0065n\u0063y\u0020o\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_bddb :=float64 (int (_dad .ValueNumber ));if !_dcdd (_bddb ){return nil ,MakeErrorResultType (ErrorTypeNum ,"\u0049n\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0066\u0072e\u0071u\u0065n\u0063\u0065\u0020\u0076\u0061\u006c\u0075e");};_eccg :=0;if _cbfd ==6&&_afbg [5].Type !=ResultTypeEmpty {_dcd :=_afbg [5];if _dcd .Type !=ResultTypeNumber {return nil ,MakeErrorResult (_bee +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020b\u0061\u0073\u0069\u0073\u0020\u006f\u0066 \u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_eccg =int (_dcd .ValueNumber );if !_fdgc (_eccg ){return nil ,MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0062a\u0073\u0069\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020f\u006f\u0072\u0020"+_bee );};};return &durationArgs {_eeaa ,_dbe ,_ggcfa ,_ace ,_bddb ,_eccg },_fbee ;};func _ccfg (_dggcb ,_cafa Result ,_bfdc string )(*xargs ,Result ){if _dggcb .Type !=ResultTypeList &&_dggcb .Type !=ResultTypeArray {return nil ,MakeErrorResult (_bfdc +"\u0020\u0072eq\u0075\u0069\u0072e\u0073\u0020\u0076\u0061lue\u0073 t\u006f\u0020\u0062\u0065\u0020\u006f\u0066 a\u0072\u0072\u0061\u0079\u0020\u0074\u0079p\u0065");};_dgfe :=_eabdb (_dggcb );_dddef :=[]float64 {};for _ ,_egfa :=range _dgfe {for _ ,_ddef :=range _egfa {if _ddef .Type ==ResultTypeNumber &&!_ddef .IsBoolean {_dddef =append (_dddef ,_ddef .ValueNumber );}else {return nil ,MakeErrorResult (_bfdc +"\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006dbe\u0072\u0073");};};};_gead :=len (_dddef );if len (_dddef )< 2{return nil ,MakeErrorResultType (ErrorTypeNum ,"");};if _cafa .Type !=ResultTypeList &&_cafa .Type !=ResultTypeArray {return nil ,MakeErrorResult (_bfdc +" \u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0064\u0061\u0074\u0065s\u0020\u0074\u006f\u0020\u0062\u0065\u0020o\u0066\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0074\u0079p\u0065");};_cagca :=_eabdb (_cafa );_gefe :=[]float64 {};_gabg :=0.0;for _ ,_ebbg :=range _cagca {for _ ,_gfda :=range _ebbg {if _gfda .Type ==ResultTypeNumber &&!_gfda .IsBoolean {_ggeg :=float64 (int (_gfda .ValueNumber ));if _ggeg < _gabg {return nil ,MakeErrorResultType (ErrorTypeNum ,_bfdc +" \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0064\u0061\u0074\u0065\u0073\u0020\u0074\u006f\u0020b\u0065\u0020\u0069\u006e\u0020\u0061\u0073\u0063\u0065\u006edi\u006e\u0067\u0020o\u0072d\u0065\u0072");};_gefe =append (_gefe ,_ggeg );_gabg =_ggeg ;}else {return nil ,MakeErrorResult (_bfdc +"\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0064\u0061\u0074\u0065\u0073\u0020t\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0073");};};};if len (_gefe )!=_gead {return nil ,MakeErrorResultType (ErrorTypeNum ,"");};return &xargs {_dddef ,_gefe },MakeEmptyResult ();};func _fbbbb (_gbdg string ,_cbad func (_fgfd float64 )float64 )Function {return func (_bbafa []Result )Result {if len (_bbafa )!=1{return MakeErrorResult (_gbdg +"\u0020\u0072\u0065\u0071ui\u0072\u0065\u0073\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_eggb :=_bbafa [0].AsNumber ();switch _eggb .Type {case ResultTypeNumber :_agbb :=_cbad (_eggb .ValueNumber );if _fb .IsNaN (_agbb ){return MakeErrorResult (_gbdg +"\u0020\u0072\u0065\u0074\u0075\u0072\u006e\u0065\u0064\u0020\u004e\u0061\u004e");};if _fb .IsInf (_agbb ,0){return MakeErrorResult (_gbdg +"\u0020r\u0065t\u0075\u0072\u006e\u0065\u0064 \u0069\u006ef\u0069\u006e\u0069\u0074\u0079");};if _agbb ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,_gbdg +"\u0020d\u0069v\u0069\u0064\u0065\u0020\u0062\u0079\u0020\u007a\u0065\u0072\u006f");};return MakeNumberResult (1/_agbb );case ResultTypeList ,ResultTypeString :return MakeErrorResult (_gbdg +"\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u006e\u0075\u006de\u0072i\u0063\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");case ResultTypeError :return _eggb ;default:return MakeErrorResult (_c .Sprintf ("\u0075\u006e\u0068a\u006e\u0064\u006c\u0065d\u0020\u0025\u0073\u0028\u0029\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_gbdg ,_eggb .Type ));};};};

// Duration implements the Excel DURATION function.
func Duration (args []Result )Result {_cdbb ,_dgac :=_eecd (args ,"\u0044\u0055\u0052\u0041\u0054\u0049\u004f\u004e");if _dgac .Type ==ResultTypeError {return _dgac ;};_efeeg :=_cdbb ._eedc ;_baga :=_cdbb ._decg ;_feg :=_cdbb ._fbb ;_dbec :=_cdbb ._agag ;_aafb :=_cdbb ._efed ;_cedf :=_cdbb ._gfgb ;return _faf (_efeeg ,_baga ,_feg ,_dbec ,_aafb ,_cedf );};

// GetLabelPrefix returns an empty string for the invalid reference context.
func (_gbge *ivr )GetLabelPrefix (cellRef string )string {return ""};type Expression interface{Eval (_cdf Context ,_cgg Evaluator )Result ;Reference (_gc Context ,_fbfb Evaluator )Reference ;String ()string ;Update (_dcc *_aac .UpdateQuery )Expression ;};

// Time is an implementation of the Excel TIME() function.
func Time (args []Result )Result {if len (args )!=3||args [0].Type !=ResultTypeNumber ||args [1].Type !=ResultTypeNumber ||args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0054\u0049ME\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s t\u0068re\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_bdcf :=args [0].ValueNumber ;_fge :=args [1].ValueNumber ;_abg :=args [2].ValueNumber ;_efde :=_ebbc (_bdcf ,_fge ,_abg );if _efde >=0{return MakeNumberResult (_efde );}else {return MakeErrorResultType (ErrorTypeNum ,"");};};func _aedb (){_cdefd =_cf .MustCompile ("\u005e\u0028\u005b\u0030\u002d\u0039\u005d\u002b\u0029\u0024");_bgea =_cf .MustCompile ("\u005e=\u0028\u002e\u002a\u0029\u0024");_cbaa =_cf .MustCompile ("\u005e<\u0028\u002e\u002a\u0029\u0024");_dcacd =_cf .MustCompile ("\u005e>\u0028\u002e\u002a\u0029\u0024");_effec =_cf .MustCompile ("\u005e\u003c\u003d\u0028\u002e\u002a\u0029\u0024");_dcege =_cf .MustCompile ("\u005e\u003e\u003d\u0028\u002e\u002a\u0029\u0024");};var _aeeee =[...]uint8 {0,17,33,49,63,78,93,108};func _dedf (_efg ,_gddd int )int {switch _gddd {case 1:if _gda (_efg ){return 366;}else {return 365;};case 3:return 365;default:return 360;};};

// Average implements the AVERAGE function. It differs slightly from Excel (and
// agrees with LibreOffice) in that boolean values are counted. As an example,
// AVERAGE of two cells containing TRUE & FALSE is 0.5 in LibreOffice and
// #DIV/0! in Excel. unioffice will return 0.5 in this case.
func Average (args []Result )Result {_bgde ,_dbacg :=_gcfgf (args ,false );if _dbacg ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"\u0041\u0056\u0045\u0052AG\u0045\u0020\u0064\u0069\u0076\u0069\u0064\u0065\u0020\u0062\u0079\u0020\u007a\u0065r\u006f");};return MakeNumberResult (_bgde /_dbacg );};func (_bbee *Lexer )emit (_gfaaa tokenType ,_ebebb []byte ){if _fedae {_c .Println ("\u0065\u006d\u0069\u0074",_gfaaa ,_ebgg (string (_ebebb )));};_bbee ._ddgcb <-&node {_gfaaa ,string (_ebebb )};};