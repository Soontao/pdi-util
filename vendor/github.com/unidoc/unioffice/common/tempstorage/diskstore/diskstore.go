//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package diskstore implements tempStorage interface
// by using disk as a storage
package diskstore ;import (_g "github.com/unidoc/unioffice/common/tempstorage";_e "io/ioutil";_c "os";_a "strings";);

// TempFile creates a new temp directory by calling ioutil TempDir
func (_ce diskStorage )TempDir (pattern string )(string ,error ){return _e .TempDir ("",pattern )};

// RemoveAll removes all files in the directory
func (_ee diskStorage )RemoveAll (dir string )error {if _a .HasPrefix (dir ,_c .TempDir ()){return _c .RemoveAll (dir );};return nil ;};

// SetAsStorage sets temp storage as a disk storage
func SetAsStorage (){_ca :=diskStorage {};_g .SetAsStorage (&_ca )};

// Add is not applicable in the diskstore implementation
func (_d diskStorage )Add (path string )error {return nil };

// Open opens file from disk according to a path
func (_af diskStorage )Open (path string )(_g .File ,error ){return _c .Open (path )};type diskStorage struct{};

// TempFile creates a new temp file by calling ioutil TempFile
func (_cg diskStorage )TempFile (dir ,pattern string )(_g .File ,error ){return _e .TempFile (dir ,pattern );};